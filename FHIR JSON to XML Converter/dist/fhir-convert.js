
function FHIRConverter(indent) {
        this.indent = indent;
        this.xml = "";
        /* For output */
        this.out = function(str) {
          xml += str;
        }
        this.reset = function() { xml = ""; }
        this.getResult = function() { return xml; }
        /* For diagnostics */
        this.msg = function(str) {
          alert(str);
        }
    
  this.FHIRdefs = {
"date": {
    /*A date or partial date (e.g. just year or year + month). There is no time zone. The format is a union of the schema types gYear, gYearMonth and date.  Dates SHALL be valid dates.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "date",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "date-primitive" }, 
  ],
  "elems": [
  ]
},
"dateTime": {
    /*A date, date-time or partial date (e.g. just year or year + month).  If hours and minutes are specified, a time zone SHALL be populated. The format is a union of the schema types gYear, gYearMonth, date and dateTime. Seconds must be provided due to schema type constraints but may be zero-filled and may be ignored.                 Dates SHALL be valid dates.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "dateTime",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "dateTime-primitive" }, 
  ],
  "elems": [
  ]
},
"code": {
    /*A string which has at least one character and no leading or trailing whitespace and where there is no whitespace other than single spaces in the contentsIf the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "code",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "code-primitive" }, 
  ],
  "elems": [
  ]
},
"string": {
    /*A sequence of Unicode charactersNote that FHIR strings SHALL not exceed 1MB in sizeIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "string",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "string-primitive" }, 
  ],
  "elems": [
  ]
},
"integer": {
    /*A whole number32 bit number; for values larger than this, use decimalIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "integer",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "integer-primitive" }, 
  ],
  "elems": [
  ]
},
"oid": {
    /*An OID represented as a URIRFC 3001. See also ISO/IEC 8824:1990 €If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "oid",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "oid-primitive" }, 
  ],
  "elems": [
  ]
},
"canonical": {
    /*A URI that is a reference to a canonical URI on a FHIR resourcesee [Canonical References](references.html#canonical)If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "canonical",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "canonical-primitive" }, 
  ],
  "elems": [
  ]
},
"uri": {
    /*String of characters used to identify a name or a resourcesee http://en.wikipedia.org/wiki/Uniform_resource_identifierIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "uri",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "uri-primitive" }, 
  ],
  "elems": [
  ]
},
"uuid": {
    /*A UUID, represented as a URISee The Open Group, CDE 1.1 Remote Procedure Call specification, Appendix A.If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "uuid",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "uuid-primitive" }, 
  ],
  "elems": [
  ]
},
"url": {
    /*A URI that is a literal referenceIf the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "url",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "url-primitive" }, 
  ],
  "elems": [
  ]
},
"instant": {
    /*An instant in time - known at least to the secondNote: This is intended for precisely observed times, typically system logs etc., and not human-reported times - for them, see date and dateTime below. Time zone is always requiredIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "instant",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "instant-primitive" }, 
  ],
  "elems": [
  ]
},
"boolean": {
    /*Value of "true" or "false"If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "boolean",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "boolean-primitive" }, 
  ],
  "elems": [
  ]
},
"base64Binary": {
    /*A stream of bytesA stream of bytes, base64 encodedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "base64Binary",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "base64Binary-primitive" }, 
  ],
  "elems": [
  ]
},
"unsignedInt": {
    /*An integer with a value that is not negative (e.g. >= 0)If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "unsignedInt",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "unsignedInt-primitive" }, 
  ],
  "elems": [
  ]
},
"markdown": {
    /*A string that may contain Github Flavored Markdown syntax for optional processing by a mark down presentation engineSystems are not required to have markdown support, so the text should be readable without markdown processing. The markdown syntax is GFM - see https://github.github.com/gfm/If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "markdown",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "markdown-primitive" }, 
  ],
  "elems": [
  ]
},
"time": {
    /*A time during the day, with no date specifiedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "time",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "time-primitive" }, 
  ],
  "elems": [
  ]
},
"id": {
    /*Any combination of letters, numerals, "-" and ".", with a length limit of 64 characters.  (This might be an integer, an unprefixed OID, UUID or any other identifier pattern that meets these constraints.)  Ids are case-insensitive.RFC 4122If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "id",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "id-primitive" }, 
  ],
  "elems": [
  ]
},
"positiveInt": {
    /*An integer with a value that is positive (e.g. >0)If the element is present, it must have either a @value, an @id referenced from the Narrative, or extensions
     */
  "name": "positiveInt",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "positiveInt-primitive" }, 
  ],
  "elems": [
  ]
},
"decimal": {
    /*A rational number with implicit precisionDo not use a IEEE type floating point type, instead use something that works like a true decimal, with inbuilt precision (e.g. Java BigInteger)If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "decimal",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "decimal-primitive" }, 
  ],
  "elems": [
  ]
},
"ResourceContainer": {
  "name": "ResourceContainer",
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
        {   "name": "Account", 
        
          "min": "1", 
          "max": "1", 
          "type": "Account",
          "isPrimitive": false }, 
        {   "name": "ActivityDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ActivityDefinition",
          "isPrimitive": false }, 
        {   "name": "AdverseEvent", 
        
          "min": "1", 
          "max": "1", 
          "type": "AdverseEvent",
          "isPrimitive": false }, 
        {   "name": "AllergyIntolerance", 
        
          "min": "1", 
          "max": "1", 
          "type": "AllergyIntolerance",
          "isPrimitive": false }, 
        {   "name": "Appointment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Appointment",
          "isPrimitive": false }, 
        {   "name": "AppointmentResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "AppointmentResponse",
          "isPrimitive": false }, 
        {   "name": "AuditEvent", 
        
          "min": "1", 
          "max": "1", 
          "type": "AuditEvent",
          "isPrimitive": false }, 
        {   "name": "Basic", 
        
          "min": "1", 
          "max": "1", 
          "type": "Basic",
          "isPrimitive": false }, 
        {   "name": "Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "Binary",
          "isPrimitive": false }, 
        {   "name": "BiologicallyDerivedProduct", 
        
          "min": "1", 
          "max": "1", 
          "type": "BiologicallyDerivedProduct",
          "isPrimitive": false }, 
        {   "name": "BodyStructure", 
        
          "min": "1", 
          "max": "1", 
          "type": "BodyStructure",
          "isPrimitive": false }, 
        {   "name": "Bundle", 
        
          "min": "1", 
          "max": "1", 
          "type": "Bundle",
          "isPrimitive": false }, 
        {   "name": "CapabilityStatement", 
        
          "min": "1", 
          "max": "1", 
          "type": "CapabilityStatement",
          "isPrimitive": false }, 
        {   "name": "CarePlan", 
        
          "min": "1", 
          "max": "1", 
          "type": "CarePlan",
          "isPrimitive": false }, 
        {   "name": "CareTeam", 
        
          "min": "1", 
          "max": "1", 
          "type": "CareTeam",
          "isPrimitive": false }, 
        {   "name": "ChargeItem", 
        
          "min": "1", 
          "max": "1", 
          "type": "ChargeItem",
          "isPrimitive": false }, 
        {   "name": "Claim", 
        
          "min": "1", 
          "max": "1", 
          "type": "Claim",
          "isPrimitive": false }, 
        {   "name": "ClaimResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "ClaimResponse",
          "isPrimitive": false }, 
        {   "name": "ClinicalImpression", 
        
          "min": "1", 
          "max": "1", 
          "type": "ClinicalImpression",
          "isPrimitive": false }, 
        {   "name": "CodeSystem", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeSystem",
          "isPrimitive": false }, 
        {   "name": "Communication", 
        
          "min": "1", 
          "max": "1", 
          "type": "Communication",
          "isPrimitive": false }, 
        {   "name": "CommunicationRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "CommunicationRequest",
          "isPrimitive": false }, 
        {   "name": "CompartmentDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "CompartmentDefinition",
          "isPrimitive": false }, 
        {   "name": "Composition", 
        
          "min": "1", 
          "max": "1", 
          "type": "Composition",
          "isPrimitive": false }, 
        {   "name": "ConceptMap", 
        
          "min": "1", 
          "max": "1", 
          "type": "ConceptMap",
          "isPrimitive": false }, 
        {   "name": "Condition", 
        
          "min": "1", 
          "max": "1", 
          "type": "Condition",
          "isPrimitive": false }, 
        {   "name": "Consent", 
        
          "min": "1", 
          "max": "1", 
          "type": "Consent",
          "isPrimitive": false }, 
        {   "name": "Contract", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contract",
          "isPrimitive": false }, 
        {   "name": "Coverage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coverage",
          "isPrimitive": false }, 
        {   "name": "DetectedIssue", 
        
          "min": "1", 
          "max": "1", 
          "type": "DetectedIssue",
          "isPrimitive": false }, 
        {   "name": "Device", 
        
          "min": "1", 
          "max": "1", 
          "type": "Device",
          "isPrimitive": false }, 
        {   "name": "DeviceComponent", 
        
          "min": "1", 
          "max": "1", 
          "type": "DeviceComponent",
          "isPrimitive": false }, 
        {   "name": "DeviceMetric", 
        
          "min": "1", 
          "max": "1", 
          "type": "DeviceMetric",
          "isPrimitive": false }, 
        {   "name": "DeviceRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "DeviceRequest",
          "isPrimitive": false }, 
        {   "name": "DeviceUseStatement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DeviceUseStatement",
          "isPrimitive": false }, 
        {   "name": "DiagnosticReport", 
        
          "min": "1", 
          "max": "1", 
          "type": "DiagnosticReport",
          "isPrimitive": false }, 
        {   "name": "DocumentManifest", 
        
          "min": "1", 
          "max": "1", 
          "type": "DocumentManifest",
          "isPrimitive": false }, 
        {   "name": "DocumentReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "DocumentReference",
          "isPrimitive": false }, 
        {   "name": "EligibilityRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "EligibilityRequest",
          "isPrimitive": false }, 
        {   "name": "EligibilityResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "EligibilityResponse",
          "isPrimitive": false }, 
        {   "name": "Encounter", 
        
          "min": "1", 
          "max": "1", 
          "type": "Encounter",
          "isPrimitive": false }, 
        {   "name": "Endpoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "Endpoint",
          "isPrimitive": false }, 
        {   "name": "EnrollmentRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "EnrollmentRequest",
          "isPrimitive": false }, 
        {   "name": "EnrollmentResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "EnrollmentResponse",
          "isPrimitive": false }, 
        {   "name": "EntryDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "EntryDefinition",
          "isPrimitive": false }, 
        {   "name": "EpisodeOfCare", 
        
          "min": "1", 
          "max": "1", 
          "type": "EpisodeOfCare",
          "isPrimitive": false }, 
        {   "name": "EventDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "EventDefinition",
          "isPrimitive": false }, 
        {   "name": "ExampleScenario", 
        
          "min": "1", 
          "max": "1", 
          "type": "ExampleScenario",
          "isPrimitive": false }, 
        {   "name": "ExpansionProfile", 
        
          "min": "1", 
          "max": "1", 
          "type": "ExpansionProfile",
          "isPrimitive": false }, 
        {   "name": "ExplanationOfBenefit", 
        
          "min": "1", 
          "max": "1", 
          "type": "ExplanationOfBenefit",
          "isPrimitive": false }, 
        {   "name": "FamilyMemberHistory", 
        
          "min": "1", 
          "max": "1", 
          "type": "FamilyMemberHistory",
          "isPrimitive": false }, 
        {   "name": "Flag", 
        
          "min": "1", 
          "max": "1", 
          "type": "Flag",
          "isPrimitive": false }, 
        {   "name": "Goal", 
        
          "min": "1", 
          "max": "1", 
          "type": "Goal",
          "isPrimitive": false }, 
        {   "name": "GraphDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "GraphDefinition",
          "isPrimitive": false }, 
        {   "name": "Group", 
        
          "min": "1", 
          "max": "1", 
          "type": "Group",
          "isPrimitive": false }, 
        {   "name": "GuidanceResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "GuidanceResponse",
          "isPrimitive": false }, 
        {   "name": "HealthcareService", 
        
          "min": "1", 
          "max": "1", 
          "type": "HealthcareService",
          "isPrimitive": false }, 
        {   "name": "ImagingStudy", 
        
          "min": "1", 
          "max": "1", 
          "type": "ImagingStudy",
          "isPrimitive": false }, 
        {   "name": "Immunization", 
        
          "min": "1", 
          "max": "1", 
          "type": "Immunization",
          "isPrimitive": false }, 
        {   "name": "ImmunizationEvaluation", 
        
          "min": "1", 
          "max": "1", 
          "type": "ImmunizationEvaluation",
          "isPrimitive": false }, 
        {   "name": "ImmunizationRecommendation", 
        
          "min": "1", 
          "max": "1", 
          "type": "ImmunizationRecommendation",
          "isPrimitive": false }, 
        {   "name": "ImplementationGuide", 
        
          "min": "1", 
          "max": "1", 
          "type": "ImplementationGuide",
          "isPrimitive": false }, 
        {   "name": "Invoice", 
        
          "min": "1", 
          "max": "1", 
          "type": "Invoice",
          "isPrimitive": false }, 
        {   "name": "ItemInstance", 
        
          "min": "1", 
          "max": "1", 
          "type": "ItemInstance",
          "isPrimitive": false }, 
        {   "name": "Library", 
        
          "min": "1", 
          "max": "1", 
          "type": "Library",
          "isPrimitive": false }, 
        {   "name": "Linkage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Linkage",
          "isPrimitive": false }, 
        {   "name": "List", 
        
          "min": "1", 
          "max": "1", 
          "type": "List",
          "isPrimitive": false }, 
        {   "name": "Location", 
        
          "min": "1", 
          "max": "1", 
          "type": "Location",
          "isPrimitive": false }, 
        {   "name": "Measure", 
        
          "min": "1", 
          "max": "1", 
          "type": "Measure",
          "isPrimitive": false }, 
        {   "name": "MeasureReport", 
        
          "min": "1", 
          "max": "1", 
          "type": "MeasureReport",
          "isPrimitive": false }, 
        {   "name": "Media", 
        
          "min": "1", 
          "max": "1", 
          "type": "Media",
          "isPrimitive": false }, 
        {   "name": "Medication", 
        
          "min": "1", 
          "max": "1", 
          "type": "Medication",
          "isPrimitive": false }, 
        {   "name": "MedicationAdministration", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicationAdministration",
          "isPrimitive": false }, 
        {   "name": "MedicationDispense", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicationDispense",
          "isPrimitive": false }, 
        {   "name": "MedicationRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicationRequest",
          "isPrimitive": false }, 
        {   "name": "MedicationStatement", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicationStatement",
          "isPrimitive": false }, 
        {   "name": "MedicinalProduct", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProduct",
          "isPrimitive": false }, 
        {   "name": "MedicinalProductAuthorization", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProductAuthorization",
          "isPrimitive": false }, 
        {   "name": "MedicinalProductClinicals", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProductClinicals",
          "isPrimitive": false }, 
        {   "name": "MedicinalProductDeviceSpec", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProductDeviceSpec",
          "isPrimitive": false }, 
        {   "name": "MedicinalProductIngredient", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProductIngredient",
          "isPrimitive": false }, 
        {   "name": "MedicinalProductPackaged", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProductPackaged",
          "isPrimitive": false }, 
        {   "name": "MedicinalProductPharmaceutical", 
        
          "min": "1", 
          "max": "1", 
          "type": "MedicinalProductPharmaceutical",
          "isPrimitive": false }, 
        {   "name": "MessageDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "MessageDefinition",
          "isPrimitive": false }, 
        {   "name": "MessageHeader", 
        
          "min": "1", 
          "max": "1", 
          "type": "MessageHeader",
          "isPrimitive": false }, 
        {   "name": "NamingSystem", 
        
          "min": "1", 
          "max": "1", 
          "type": "NamingSystem",
          "isPrimitive": false }, 
        {   "name": "NutritionOrder", 
        
          "min": "1", 
          "max": "1", 
          "type": "NutritionOrder",
          "isPrimitive": false }, 
        {   "name": "Observation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Observation",
          "isPrimitive": false }, 
        {   "name": "ObservationDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ObservationDefinition",
          "isPrimitive": false }, 
        {   "name": "OccupationalData", 
        
          "min": "1", 
          "max": "1", 
          "type": "OccupationalData",
          "isPrimitive": false }, 
        {   "name": "OperationDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "OperationDefinition",
          "isPrimitive": false }, 
        {   "name": "OperationOutcome", 
        
          "min": "1", 
          "max": "1", 
          "type": "OperationOutcome",
          "isPrimitive": false }, 
        {   "name": "Organization", 
        
          "min": "1", 
          "max": "1", 
          "type": "Organization",
          "isPrimitive": false }, 
        {   "name": "OrganizationRole", 
        
          "min": "1", 
          "max": "1", 
          "type": "OrganizationRole",
          "isPrimitive": false }, 
        {   "name": "Patient", 
        
          "min": "1", 
          "max": "1", 
          "type": "Patient",
          "isPrimitive": false }, 
        {   "name": "PaymentNotice", 
        
          "min": "1", 
          "max": "1", 
          "type": "PaymentNotice",
          "isPrimitive": false }, 
        {   "name": "PaymentReconciliation", 
        
          "min": "1", 
          "max": "1", 
          "type": "PaymentReconciliation",
          "isPrimitive": false }, 
        {   "name": "Person", 
        
          "min": "1", 
          "max": "1", 
          "type": "Person",
          "isPrimitive": false }, 
        {   "name": "PlanDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "PlanDefinition",
          "isPrimitive": false }, 
        {   "name": "Practitioner", 
        
          "min": "1", 
          "max": "1", 
          "type": "Practitioner",
          "isPrimitive": false }, 
        {   "name": "PractitionerRole", 
        
          "min": "1", 
          "max": "1", 
          "type": "PractitionerRole",
          "isPrimitive": false }, 
        {   "name": "Procedure", 
        
          "min": "1", 
          "max": "1", 
          "type": "Procedure",
          "isPrimitive": false }, 
        {   "name": "ProcessRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "ProcessRequest",
          "isPrimitive": false }, 
        {   "name": "ProcessResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "ProcessResponse",
          "isPrimitive": false }, 
        {   "name": "ProductPlan", 
        
          "min": "1", 
          "max": "1", 
          "type": "ProductPlan",
          "isPrimitive": false }, 
        {   "name": "Provenance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Provenance",
          "isPrimitive": false }, 
        {   "name": "Questionnaire", 
        
          "min": "1", 
          "max": "1", 
          "type": "Questionnaire",
          "isPrimitive": false }, 
        {   "name": "QuestionnaireResponse", 
        
          "min": "1", 
          "max": "1", 
          "type": "QuestionnaireResponse",
          "isPrimitive": false }, 
        {   "name": "RelatedPerson", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedPerson",
          "isPrimitive": false }, 
        {   "name": "RequestGroup", 
        
          "min": "1", 
          "max": "1", 
          "type": "RequestGroup",
          "isPrimitive": false }, 
        {   "name": "ResearchStudy", 
        
          "min": "1", 
          "max": "1", 
          "type": "ResearchStudy",
          "isPrimitive": false }, 
        {   "name": "ResearchSubject", 
        
          "min": "1", 
          "max": "1", 
          "type": "ResearchSubject",
          "isPrimitive": false }, 
        {   "name": "RiskAssessment", 
        
          "min": "1", 
          "max": "1", 
          "type": "RiskAssessment",
          "isPrimitive": false }, 
        {   "name": "Schedule", 
        
          "min": "1", 
          "max": "1", 
          "type": "Schedule",
          "isPrimitive": false }, 
        {   "name": "SearchParameter", 
        
          "min": "1", 
          "max": "1", 
          "type": "SearchParameter",
          "isPrimitive": false }, 
        {   "name": "Sequence", 
        
          "min": "1", 
          "max": "1", 
          "type": "Sequence",
          "isPrimitive": false }, 
        {   "name": "ServiceRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "ServiceRequest",
          "isPrimitive": false }, 
        {   "name": "Slot", 
        
          "min": "1", 
          "max": "1", 
          "type": "Slot",
          "isPrimitive": false }, 
        {   "name": "Specimen", 
        
          "min": "1", 
          "max": "1", 
          "type": "Specimen",
          "isPrimitive": false }, 
        {   "name": "SpecimenDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "SpecimenDefinition",
          "isPrimitive": false }, 
        {   "name": "StructureDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "StructureDefinition",
          "isPrimitive": false }, 
        {   "name": "StructureMap", 
        
          "min": "1", 
          "max": "1", 
          "type": "StructureMap",
          "isPrimitive": false }, 
        {   "name": "Subscription", 
        
          "min": "1", 
          "max": "1", 
          "type": "Subscription",
          "isPrimitive": false }, 
        {   "name": "Substance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Substance",
          "isPrimitive": false }, 
        {   "name": "SubstancePolymer", 
        
          "min": "1", 
          "max": "1", 
          "type": "SubstancePolymer",
          "isPrimitive": false }, 
        {   "name": "SubstanceReferenceInformation", 
        
          "min": "1", 
          "max": "1", 
          "type": "SubstanceReferenceInformation",
          "isPrimitive": false }, 
        {   "name": "SubstanceSpecification", 
        
          "min": "1", 
          "max": "1", 
          "type": "SubstanceSpecification",
          "isPrimitive": false }, 
        {   "name": "SupplyDelivery", 
        
          "min": "1", 
          "max": "1", 
          "type": "SupplyDelivery",
          "isPrimitive": false }, 
        {   "name": "SupplyRequest", 
        
          "min": "1", 
          "max": "1", 
          "type": "SupplyRequest",
          "isPrimitive": false }, 
        {   "name": "Task", 
        
          "min": "1", 
          "max": "1", 
          "type": "Task",
          "isPrimitive": false }, 
        {   "name": "TerminologyCapabilities", 
        
          "min": "1", 
          "max": "1", 
          "type": "TerminologyCapabilities",
          "isPrimitive": false }, 
        {   "name": "TestReport", 
        
          "min": "1", 
          "max": "1", 
          "type": "TestReport",
          "isPrimitive": false }, 
        {   "name": "TestScript", 
        
          "min": "1", 
          "max": "1", 
          "type": "TestScript",
          "isPrimitive": false }, 
        {   "name": "UserSession", 
        
          "min": "1", 
          "max": "1", 
          "type": "UserSession",
          "isPrimitive": false }, 
        {   "name": "ValueSet", 
        
          "min": "1", 
          "max": "1", 
          "type": "ValueSet",
          "isPrimitive": false }, 
        {   "name": "VerificationResult", 
        
          "min": "1", 
          "max": "1", 
          "type": "VerificationResult",
          "isPrimitive": false }, 
        {   "name": "VisionPrescription", 
        
          "min": "1", 
          "max": "1", 
          "type": "VisionPrescription",
          "isPrimitive": false }, 
        {   "name": "Parameters", 
        
          "min": "1", 
          "max": "1", 
          "type": "Parameters",
          "isPrimitive": false }, 
    ], 
  ]
},
"Extension": {
    /*Optional Extension Element - found in all resources.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Extension",
  "base": "Element", 
  "attrs": [
    { 
      "name": "url", 
      "type": "uri-primitive" }, 
  ],
  "elems": [
    [ /* Choice */ 
    /*Value of extension - may be a resource or one of a constrained set of the data types (see Extensibility in the spec for list).
     */
        {   "name": "valueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "valueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "valueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "valuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "valueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "valueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "valueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "valueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "valueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "valueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "valueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "valueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "valueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "valueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "valueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "valueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "valueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "valueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "valueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "valueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "valueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "valueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "valueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
  ]
},
"BackboneElement": {
    /*Base definition for all elements that are defined inside a resource - but not those in a data type.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "BackboneElement",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
     */  "name": "modifierExtension", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Extension",
      "isPrimitive": false }, 
  ]
},
"Narrative": {
    /*A human-readable formatted text, including images.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Narrative",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The status of the narrative - whether it's entirely generated (from just the defined data or the extensions too), or whether a human authored it and it may contain additional data.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "NarrativeStatus",
      "isPrimitive": true }, 
    { 
    /*The actual narrative content, a stripped down version of XHTML.
     */  "name": "xhtml:div", 
    
      "min": "1", 
      "max": "1", 
      "type": "xhtml:div",
      "isPrimitive": false }, 
  ]
},
"NarrativeStatus": {
    /*The status of a resource narrativeIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NarrativeStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "NarrativeStatus-list" }, 
  ],
  "elems": [
  ]
},
"Element": {
    /*Base definition for all elements in a resource.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Element",
  "attrs": [
    { 
      "name": "id", 
      "type": "string-primitive" }, 
  ],
  "elems": [
    { 
    /*May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */  "name": "extension", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Extension",
      "isPrimitive": false }, 
  ]
},
"Meta": {
    /*The metadata about a resource. This is content in the resource that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Meta",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The version specific identifier, as it appears in the version portion of the URL. This value changes when the resource is created, updated, or deleted.
     */  "name": "versionId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*When the resource last changed - e.g. when the version changed.
     */  "name": "lastUpdated", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*A uri that identifies the source system of the resource. This provides a minimal amount of [[[Provenance]]] information that can be used to track or differentiate the source of information in the resource. The source may identify another FHIR server, document, message, database, etc.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A list of profiles (references to [[[StructureDefinition]]] resources) that this resource claims to conform to. The URL is a reference to [[[StructureDefinition.url]]].
     */  "name": "profile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Security labels applied to this resource. These tags connect specific resources to the overall security policy and infrastructure.
     */  "name": "security", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Tags applied to this resource. Tags are intended to be used to identify and relate resources to process and workflow, and applications are not required to consider the tags when interpreting the meaning of a resource.
     */  "name": "tag", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"Address": {
    /*An address expressed using postal conventions (as opposed to GPS or other location definition formats).  This data type may be used to convey addresses for use in delivering mail as well as for visiting locations which might not be valid for mail delivery.  There are a variety of postal address formats defined around the world.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Address",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The purpose of this address.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "AddressUse",
      "isPrimitive": true }, 
    { 
    /*Distinguishes between physical addresses (those you can visit) and mailing addresses (e.g. PO Boxes and care-of addresses). Most addresses are both.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "AddressType",
      "isPrimitive": true }, 
    { 
    /*Specifies the entire address as it should be displayed e.g. on a postal label. This may be provided instead of or as well as the specific parts.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*This component contains the house number, apartment number, street name, street direction,  P.O. Box number, delivery hints, and similar address information.
     */  "name": "line", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The name of the city, town, village or other community or delivery center.
     */  "name": "city", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The name of the administrative area (county).
     */  "name": "district", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Sub-unit of a country with limited sovereignty in a federally organized country. A code may be used if codes are in common use (i.e. US 2 letter state codes).
     */  "name": "state", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A postal code designating a region defined by the postal service.
     */  "name": "postalCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Country - a nation as commonly understood or generally accepted.
     */  "name": "country", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Time period when address was/is in use.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"AddressUse": {
    /*The use of an addressIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AddressUse",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AddressUse-list" }, 
  ],
  "elems": [
  ]
},
"AddressType": {
    /*The type of an address (physical / postal)If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AddressType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AddressType-list" }, 
  ],
  "elems": [
  ]
},
"Contributor": {
    /*A contributor to the content of a knowledge asset, including authors, editors, reviewers, and endorsers.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Contributor",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of contributor.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ContributorType",
      "isPrimitive": true }, 
    { 
    /*The name of the individual or organization responsible for the contribution.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the contributor.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
  ]
},
"ContributorType": {
    /*The type of contributorIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ContributorType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ContributorType-list" }, 
  ],
  "elems": [
  ]
},
"Attachment": {
    /*For referring to data content defined in other formats.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Attachment",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies the type of the data in the attachment and allows a method to be chosen to interpret or render the data. Includes mime type parameters such as charset where appropriate.
     */  "name": "contentType", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The human language of the content. The value can be any valid value according to BCP 47.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The actual data of the attachment - a sequence of bytes. In XML, represented using base64.
     */  "name": "data", 
    
      "min": "0", 
      "max": "1", 
      "type": "base64Binary",
      "isPrimitive": true }, 
    { 
    /*An alternative location where the data can be accessed.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
    { 
    /*The number of bytes of data that make up this attachment (before base64 encoding, if that is done).
     */  "name": "size", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*The calculated hash of the data using SHA-1. Represented using base64.
     */  "name": "hash", 
    
      "min": "0", 
      "max": "1", 
      "type": "base64Binary",
      "isPrimitive": true }, 
    { 
    /*A label or set of text to display in place of the data.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The date that the attachment was first created.
     */  "name": "creation", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"Count": {
    /*A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Count",
  "base": "Quantity", 
  "attrs": [
  ],
  "elems": [
  ]
},
"DataRequirement": {
    /*Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "DataRequirement",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of the required data, specified as the type name of a resource. For profiles, this value is set to the type of the base resource of the profile.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The profile of the required data, specified as the uri of the profile definition.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The intended subjects of the data requirement. If this element is not provided, a Patient subject is assumed.
     */
        {   "name": "subjectCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "subjectReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates that specific elements of the type are referenced by the knowledge module and must be supported by the consumer in order to obtain an effective evaluation. This does not mean that a value is required for this element, only that the consuming system must understand the element and be able to provide values for it if they are available. Note that the value for this element can be a path to allow references to nested elements. In that case, all the elements along the path must be supported.
     */  "name": "mustSupport", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Code filters specify additional constraints on the data, specifying the value set of interest for a particular element of the data. Each code filter defines an additional constraint on the data, i.e. code filters are AND'ed, not OR'ed.
     */  "name": "codeFilter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement.CodeFilter",
      "isPrimitive": false }, 
    { 
    /*Date filters specify additional constraints on the data in terms of the applicable date range for specific elements. Each date filter specifies an additional constraint on the data, i.e. date filters are AND'ed, not OR'ed.
     */  "name": "dateFilter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement.DateFilter",
      "isPrimitive": false }, 
    { 
    /*Specifies a maximum number of results that are required.
     */  "name": "limit", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Specifies the order of the results to be returned.
     */  "name": "sort", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement.Sort",
      "isPrimitive": false }, 
  ]
},
"DataRequirement.CodeFilter": {
    /*Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "DataRequirement.CodeFilter",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The code-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type code, Coding, or CodeableConcept.
     */  "name": "path", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The valueset for the code filter. The valueSet and code elements are additive. If valueSet is specified, the filter will return only those data items for which the value of the code-valued element specified in the path is a member of the specified valueset.
     */
        {   "name": "valueSetUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueSetCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
    { 
    /*The codes for the code filter. If values are given, the filter will return only those data items for which the code-valued attribute specified by the path has a value that is one of the specified codes. If codes are specified in addition to a value set, the filter returns items matching a code in the value set or one of the specified codes.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"DataRequirement.DateFilter": {
    /*Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "DataRequirement.DateFilter",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The date-valued attribute of the filter. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant. The path must resolve to an element of type dateTime, Period, Schedule, or Timing.
     */  "name": "path", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The value of the filter. If period is specified, the filter will return only those data items that fall within the bounds determined by the Period, inclusive of the period boundaries. If dateTime is specified, the filter will return only those data items that are equal to the specified dateTime. If a Duration is specified, the filter will return only those data items that fall within Duration before now.
     */
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "valueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
    ], 
  ]
},
"DataRequirement.Sort": {
    /*Describes a required data item for evaluation in terms of the type of data, and optional code or date-based filters of the data.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "DataRequirement.Sort",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The attribute of the sort. The specified path must be resolvable from the type of the required data. The path is allowed to contain qualifiers (.) to traverse sub-elements, as well as indexers ([x]) to traverse multiple-cardinality sub-elements. Note that the index must be an integer constant.
     */  "name": "path", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The direction of the sort, ascending or descending.
     */  "name": "direction", 
    
      "min": "1", 
      "max": "1", 
      "type": "SortDirection",
      "isPrimitive": true }, 
  ]
},
"SortDirection": {
    /*The possible sort directions, ascending or descendingIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SortDirection",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SortDirection-list" }, 
  ],
  "elems": [
  ]
},
"Dosage": {
    /*Indicates how the medication is/was taken or should be taken by the patient.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Dosage",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates the order in which the dosage instructions should be applied or interpreted.
     */  "name": "sequence", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Free text dosage instructions e.g. SIG.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Supplemental instructions to the patient on how to take the medication  (e.g. "with meals" or"take half to one hour before food") or warnings for the patient about the medication (e.g. "may cause drowsiness" or "avoid exposure of skin to direct sunlight or sunlamps").
     */  "name": "additionalInstruction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Instructions in terms that are understood by the patient or consumer.
     */  "name": "patientInstruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*When medication should be administered.
     */  "name": "timing", 
    
      "min": "0", 
      "max": "1", 
      "type": "Timing",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Indicates whether the Medication is only taken when needed within a specific dosing schedule (Boolean option), or it indicates the precondition for taking the Medication (CodeableConcept).
     */
        {   "name": "asNeededBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "asNeededCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*Body site to administer to.
     */  "name": "site", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*How drug should enter body.
     */  "name": "route", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Technique for administering medication.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The amount of medication administered.
     */  "name": "doseAndRate", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Dosage.DoseAndRate",
      "isPrimitive": false }, 
    { 
    /*Upper limit on medication per unit of time.
     */  "name": "maxDosePerPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Ratio",
      "isPrimitive": false }, 
    { 
    /*Upper limit on medication per administration.
     */  "name": "maxDosePerAdministration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Upper limit on medication per lifetime of the patient.
     */  "name": "maxDosePerLifetime", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"Dosage.DoseAndRate": {
    /*Indicates how the medication is/was taken or should be taken by the patient.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Dosage.DoseAndRate",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of dose or rate specified, for example, ordered or calculated.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Amount of medication per dose.
     */
        {   "name": "doseRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "doseQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Amount of medication per unit of time.
     */
        {   "name": "rateRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "rateRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "rateQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
    ], 
  ]
},
"Money": {
    /*An amount of economic utility in some recognized currency.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Money",
  "base": "Quantity", 
  "attrs": [
  ],
  "elems": [
  ]
},
"HumanName": {
    /*A human's name with the ability to identify parts and usage.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "HumanName",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies the purpose for this name.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "NameUse",
      "isPrimitive": true }, 
    { 
    /*Specifies the entire name as it should be displayed e.g. on an application UI. This may be provided instead of or as well as the specific parts.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The part of a name that links to the genealogy. In some cultures (e.g. Eritrea) the family name of a son is the first name of his father.
     */  "name": "family", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Given name.
     */  "name": "given", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the start of the name.
     */  "name": "prefix", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Part of the name that is acquired as a title due to academic, legal, employment or nobility status, etc. and that appears at the end of the name.
     */  "name": "suffix", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates the period of time when this name was valid for the named person.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"NameUse": {
    /*The use of a human nameIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NameUse",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "NameUse-list" }, 
  ],
  "elems": [
  ]
},
"ContactPoint": {
    /*Details for all kinds of technology mediated contact points for a person or organization, including telephone, email, etc.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ContactPoint",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Telecommunications form for contact point - what communications system is required to make use of the contact.
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "ContactPointSystem",
      "isPrimitive": true }, 
    { 
    /*The actual contact point details, in a form that is meaningful to the designated communication system (i.e. phone number or email address).
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the purpose for the contact point.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "ContactPointUse",
      "isPrimitive": true }, 
    { 
    /*Specifies a preferred order in which to use a set of contacts. Contacts are ranked with lower values coming before higher values.
     */  "name": "rank", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Time period when the contact point was/is in use.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"ContactPointSystem": {
    /*Telecommunications form for contact pointIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ContactPointSystem",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ContactPointSystem-list" }, 
  ],
  "elems": [
  ]
},
"ContactPointUse": {
    /*Use of contact pointIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ContactPointUse",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ContactPointUse-list" }, 
  ],
  "elems": [
  ]
},
"Identifier": {
    /*A technical identifier - identifies some entity uniquely and unambiguously.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Identifier",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The purpose of this identifier.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "IdentifierUse",
      "isPrimitive": true }, 
    { 
    /*A coded type for the identifier that can be used to determine which identifier to use for a specific purpose.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Establishes the namespace for the value - that is, a URL that describes a set values that are unique.
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The portion of the identifier typically relevant to the user and which is unique within the context of the system.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Time period during which identifier is/was valid for use.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Organization that issued/manages the identifier.
     */  "name": "assigner", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"IdentifierUse": {
    /*Identifies the purpose for this identifier, if known .If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "IdentifierUse",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "IdentifierUse-list" }, 
  ],
  "elems": [
  ]
},
"Coding": {
    /*A reference to a code defined by a terminology system.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Coding",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The identification of the code system that defines the meaning of the symbol in the code.
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The version of the code system which was used when choosing this code. Note that a well-maintained code system does not need the version reported, because the meaning of codes is consistent across versions. However this cannot consistently be assured, and when the meaning is not guaranteed to be consistent, the version SHOULD be exchanged.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A symbol in syntax defined by the system. The symbol may be a predefined code or an expression in a syntax defined by the coding system (e.g. post-coordination).
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A representation of the meaning of the code in the system, following the rules of the system.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates that this coding was chosen by a user directly - i.e. off a pick list of available items (codes or displays).
     */  "name": "userSelected", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"SampledData": {
    /*A series of measurements taken by a device, with upper and lower limits. There may be more than one dimension in the data.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "SampledData",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The base quantity that a measured value of zero represents. In addition, this provides the units of the entire measurement series.
     */  "name": "origin", 
    
      "min": "1", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The length of time between sampling times, measured in milliseconds.
     */  "name": "period", 
    
      "min": "1", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*A correction factor that is applied to the sampled data points before they are added to the origin.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The lower limit of detection of the measured points. This is needed if any of the data points have the value "L" (lower than detection limit).
     */  "name": "lowerLimit", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The upper limit of detection of the measured points. This is needed if any of the data points have the value "U" (higher than detection limit).
     */  "name": "upperLimit", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The number of sample points at each time point. If this value is greater than one, then the dimensions will be interlaced - all the sample points for a point in time will be recorded at once.
     */  "name": "dimensions", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A series of data points which are decimal values separated by a single space (character u20). The special values "E" (error), "L" (below detection limit) and "U" (above detection limit) can also be used in place of a decimal value.
     */  "name": "data", 
    
      "min": "0", 
      "max": "1", 
      "type": "SampledDataDataType",
      "isPrimitive": true }, 
  ]
},
"SampledDataDataType": {
  "name": "SampledDataDataType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SampledDataDataType-primitive" }, 
  ],
  "elems": [
  ]
},
"Ratio": {
    /*A relationship of two Quantity values - expressed as a numerator and a denominator.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Ratio",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The value of the numerator.
     */  "name": "numerator", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The value of the denominator.
     */  "name": "denominator", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"Distance": {
    /*A length - a value with a unit that is a physical distance.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Distance",
  "base": "Quantity", 
  "attrs": [
  ],
  "elems": [
  ]
},
"Age": {
    /*A duration of time during which an organism (or a process) has existed.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Age",
  "base": "Quantity", 
  "attrs": [
  ],
  "elems": [
  ]
},
"Reference": {
    /*A reference from one resource to another.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Reference",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A reference to a location at which the other resource is found. The reference may be a relative reference, in which case it is relative to the service base URL, or an absolute URL that resolves to the location where the resource is found. The reference may be version specific or not. If the reference is not to a FHIR RESTful server, then it should be assumed to be version specific. Internal fragment references (start with '#') refer to contained resources.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The expected type of the target of the reference. If both Reference.type and Reference.reference are populated and Reference.reference is a FHIR URL, both SHALL be consistent.

The type is the Canonical URL of Resource Definition that is the type this reference refers to. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition/ e.g. "Patient" is a reference to http://hl7.org/fhir/StructureDefinition/Patient. Absolute URLs are only allowed for logical models (and can only be used in references in logical models, not resources).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*An identifier for the target resource. This is used when there is no way to reference the other resource directly, either because the entity it represents is not available through a FHIR server, or because there is no way for the author of the resource to convert a known identifier to an actual location. There is no requirement that a Reference.identifier point to something that is actually exposed as a FHIR instance, but it SHALL point to a business concept that would be expected to be exposed as a FHIR instance, and that instance would need to be of a FHIR resource type allowed by the reference.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Plain text narrative that identifies the resource in addition to the resource reference.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TriggerDefinition": {
    /*A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "TriggerDefinition",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of triggering event.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "TriggerType",
      "isPrimitive": true }, 
    { 
    /*A formal name for the event. This may be an absolute URI that identifies the event formally (e.g. from a trigger registry), or a simple relative URI that identifies the event in a local context.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The timing of the event (if this is a periodic trigger).
     */
        {   "name": "timingTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "timingReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "timingDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "timingDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
    ], 
    { 
    /*The triggering data of the event (if this is a data trigger).
     */  "name": "data", 
    
      "min": "0", 
      "max": "1", 
      "type": "DataRequirement",
      "isPrimitive": false }, 
    { 
    /*A boolean-valued expression that is evaluated in the context of the container of the trigger definition and returns whether or not the trigger fires.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "1", 
      "type": "TriggerDefinition.Condition",
      "isPrimitive": false }, 
  ]
},
"TriggerDefinition.Condition": {
    /*A description of a triggering event. Triggering events can be named events, data events, or periodic, as determined by the type element.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "TriggerDefinition.Condition",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A brief, natural language description of the condition that effectively communicates the intended semantics.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The media type of the language for the expression.
     */  "name": "language", 
    
      "min": "1", 
      "max": "1", 
      "type": "ExpressionLanguage",
      "isPrimitive": true }, 
    { 
    /*An expression that returns true or false, indicating whether or not the condition is satisfied.
     */  "name": "expression", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TriggerType": {
    /*The type of triggerIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TriggerType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TriggerType-list" }, 
  ],
  "elems": [
  ]
},
"ExpressionLanguage": {
    /*The media type of the expression languageIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExpressionLanguage",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ExpressionLanguage-list" }, 
  ],
  "elems": [
  ]
},
"Quantity": {
    /*A measured amount (or an amount that can potentially be measured). Note that measured amounts include amounts that are not precisely quantified, including amounts involving arbitrary units and floating currencies.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Quantity",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The value of the measured amount. The value includes an implicit precision in the presentation of the value.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*How the value should be understood and represented - whether the actual value is greater or less than the stated value due to measurement issues; e.g. if the comparator is "<" , then the real value is < stated value.
     */  "name": "comparator", 
    
      "min": "0", 
      "max": "1", 
      "type": "QuantityComparator",
      "isPrimitive": true }, 
    { 
    /*A human-readable form of the unit.
     */  "name": "unit", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The identification of the system that provides the coded form of the unit.
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A computer processable form of the unit in some unit representation system.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
  ]
},
"QuantityComparator": {
    /*How the Quantity should be understood and represented.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "QuantityComparator",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "QuantityComparator-list" }, 
  ],
  "elems": [
  ]
},
"Period": {
    /*A time period defined by a start and end date and optionally time.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Period",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The start of the period. The boundary is inclusive.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The end of the period. If the end of the period is missing, it means that the period is ongoing. The start may be in the past, and the end date in the future, which means that period is expected/planned to end at that time.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"Duration": {
    /*A length of time.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Duration",
  "base": "Quantity", 
  "attrs": [
  ],
  "elems": [
  ]
},
"Range": {
    /*A set of ordered Quantities defined by a low and high limit.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Range",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The low limit. The boundary is inclusive.
     */  "name": "low", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The high limit. The boundary is inclusive.
     */  "name": "high", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"RelatedArtifact": {
    /*Related artifacts such as additional documentation, justification, or bibliographic references.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "RelatedArtifact",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of relationship to the related artifact.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "RelatedArtifactType",
      "isPrimitive": true }, 
    { 
    /*A brief description of the document or knowledge resource being referenced, suitable for display to a consumer.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A bibliographic citation for the related artifact. This text SHOULD be formatted according to an accepted citation format.
     */  "name": "citation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A url for the artifact that can be followed to access the actual content.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
    { 
    /*The document being referenced, represented as an attachment. This is exclusive with the resource element.
     */  "name": "document", 
    
      "min": "0", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*The related resource, such as a library, value set, profile, or other knowledge resource.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"RelatedArtifactType": {
    /*The type of relationship to the related artifactIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RelatedArtifactType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "RelatedArtifactType-list" }, 
  ],
  "elems": [
  ]
},
"Annotation": {
    /*A  text note which also  contains information about who made the statement and when.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Annotation",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The individual responsible for making the annotation.
     */
        {   "name": "authorReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "authorString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Indicates when this particular annotation was made.
     */  "name": "time", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The text of the annotation.
     */  "name": "text", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ContactDetail": {
    /*Specifies contact information for a person or organization.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ContactDetail",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of an individual to contact.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The contact details for the individual (if a name was provided) or the organization.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
  ]
},
"UsageContext": {
    /*Specifies clinical/business/etc. metadata that can be used to retrieve, index and/or categorize an artifact. This metadata can either be specific to the applicable population (e.g., age category, DRG) or the specific context of care (e.g., venue, care setting, provider of care).If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "UsageContext",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that identifies the type of context being specified by this usage context.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*A value that defines the context specified in this context of use. The interpretation of the value is defined by the code.
     */
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
  ]
},
"Signature": {
    /*A signature along with supporting context. The signature may be a digital signature that is cryptographic in nature, or some other signature acceptable to the domain. This other signature may be as simple as a graphical image representing a hand-written signature, or a signature ceremony Different signature approaches have different utilities.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Signature",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An indication of the reason that the entity signed this document. This may be explicitly included as part of the signature information and can be used when determining accountability for various actions concerning the document.
     */  "name": "type", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*When the digital signature was signed.
     */  "name": "when", 
    
      "min": "1", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A reference to an application-usable description of the identity that signed  (e.g. the signature used their private key).
     */
        {   "name": "whoUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "whoReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*A reference to an application-usable description of the identity that is represented by the signature.
     */
        {   "name": "onBehalfOfUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "onBehalfOfReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*A mime type that indicates the technical format of the target resources signed by the signature.
     */  "name": "targetFormat", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A mime type that indicates the technical format of the signature. Important mime types are application/signature+xml for X ML DigSig, application/jose for JWS, and image/* for a graphical image of a signature, etc.
     */  "name": "sigFormat", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The base64 encoding of the Signature content. When signature is not recorded electronically this element would be empty.
     */  "name": "blob", 
    
      "min": "0", 
      "max": "1", 
      "type": "base64Binary",
      "isPrimitive": true }, 
  ]
},
"Timing": {
    /*Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Timing",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies specific times when the event occurs.
     */  "name": "event", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*A set of rules that describe when the event is scheduled.
     */  "name": "repeat", 
    
      "min": "0", 
      "max": "1", 
      "type": "Timing.Repeat",
      "isPrimitive": false }, 
    { 
    /*A code for the timing schedule (or just text in code.text). Some codes such as BID are ubiquitous, but many institutions define their own additional codes. If a code is provided, the code is understood to be a complete statement of whatever is specified in the structured timing data, and either the code or the data may be used to interpret the Timing, with the exception that .repeat.bounds still applies over the code (and is not contained in the code).
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Timing.Repeat": {
    /*Specifies an event that may occur multiple times. Timing schedules are used to record when things are planned, expected or requested to occur. The most common usage is in dosage instructions for medications. They are also used when planning care of various kinds, and may be used for reporting the schedule to which past regular activities were carried out.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "Timing.Repeat",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Either a duration for the length of the timing schedule, a range of possible length, or outer bounds for start and/or end limits of the timing schedule.
     */
        {   "name": "boundsDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "boundsRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "boundsPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*A total count of the desired number of repetitions across the duration of the entire timing specification.
     */  "name": "count", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*A maximum value for the count of the desired repetitions (e.g. do something 6-8 times).
     */  "name": "countMax", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*How long this thing happens for when it happens.
     */  "name": "duration", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The upper limit of how long this thing happens for when it happens.
     */  "name": "durationMax", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The units of time for the duration, in UCUM units.
     */  "name": "durationUnit", 
    
      "min": "0", 
      "max": "1", 
      "type": "UnitsOfTime",
      "isPrimitive": true }, 
    { 
    /*The number of times to repeat the action within the specified period / period range (i.e. both period and periodMax provided).
     */  "name": "frequency", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*If present, indicates that the frequency is a range - so to repeat between [frequency] and [frequencyMax] times within the period or period range.
     */  "name": "frequencyMax", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Indicates the duration of time over which repetitions are to occur; e.g. to express "3 times per day", 3 would be the frequency and "1 day" would be the period.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*If present, indicates that the period is a range from [period] to [periodMax], allowing expressing concepts such as "do this once every 3-5 days.
     */  "name": "periodMax", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The units of time for the period in UCUM units.
     */  "name": "periodUnit", 
    
      "min": "0", 
      "max": "1", 
      "type": "UnitsOfTime",
      "isPrimitive": true }, 
    { 
    /*If one or more days of week is provided, then the action happens only on the specified day(s).
     */  "name": "dayOfWeek", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Specified time of day for action to take place.
     */  "name": "timeOfDay", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "time",
      "isPrimitive": true }, 
    { 
    /*An approximate time period during the day, potentially linked to an event of daily living that indicates when the action should occur.
     */  "name": "when", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EventTiming",
      "isPrimitive": true }, 
    { 
    /*The number of minutes from the event. If the event code does not indicate whether the minutes is before or after the event, then the offset is assumed to be after the event.
     */  "name": "offset", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
  ]
},
"UnitsOfTime": {
    /*A unit of time (units from UCUM).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "UnitsOfTime",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "UnitsOfTime-list" }, 
  ],
  "elems": [
  ]
},
"EventTiming": {
    /*Real world event relating to the schedule.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EventTiming",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EventTiming-list" }, 
  ],
  "elems": [
  ]
},
"CodeableConcept": {
    /*A concept that may be defined by a formal reference to a terminology or ontology or may be provided by text.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "CodeableConcept",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A reference to a code defined by a terminology system.
     */  "name": "coding", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*A human language representation of the concept as seen/selected/uttered by the user who entered the data and/or which represents the intended meaning of the user.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ParameterDefinition": {
    /*The parameters to the module. This collection specifies both the input and output parameters. Input parameters are provided by the caller as part of the $evaluate operation. Output parameters are included in the GuidanceResponse.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ParameterDefinition",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of the parameter used to allow access to the value of the parameter in evaluation contexts.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Whether the parameter is input or output for the module.
     */  "name": "use", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The minimum number of times this parameter SHALL appear in the request or response.
     */  "name": "min", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The maximum number of times this element is permitted to appear in the request or response.
     */  "name": "max", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A brief discussion of what the parameter is for and how it is used by the module.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of the parameter.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*If specified, this indicates a profile that the input data must conform to, or that the output data will conform to.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"MarketingStatus": {
    /*The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "MarketingStatus",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The country in which the marketing authorisation has been granted shall be specified It should be specified using the ISO 3166 ‑ 1 alpha-2 code elements.
     */  "name": "country", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Where a Medicines Regulatory Agency has granted a marketing authorisation for which specific provisions within a jurisdiction apply, the jurisdiction can be specified using an appropriate controlled terminology The controlled term and the controlled term identifier shall be specified.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This attribute provides information on the status of the marketing of the medicinal product See ISO/TS 20443 for more information and examples.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.
     */  "name": "dateRange", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The date when the Medicinal Product is placed on the market by the Marketing Authorisation Holder (or where applicable, the manufacturer/distributor) in a country and/or jurisdiction shall be provided A complete date consisting of day, month and year shall be specified using the ISO 8601 date format NOTE “Placed on the market” refers to the release of the Medicinal Product into the distribution chain.
     */  "name": "restoreDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"SubstanceAmount": {
    /*Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "SubstanceAmount",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.
     */
        {   "name": "amountQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "amountRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "amountString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Most elements that require a quantitative value will also have a field called amount type. Amount type should always be specified because the actual value of the amount is often dependent on it. EXAMPLE: In capturing the actual relative amounts of substances or molecular fragments it is essential to indicate whether the amount refers to a mole ratio or weight ratio. For any given element an effort should be made to use same the amount type for all related definitional elements.
     */  "name": "amountType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A textual comment on a numeric value.
     */  "name": "amountText", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Reference range of possible or expected values.
     */  "name": "referenceRange", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceAmount.ReferenceRange",
      "isPrimitive": false }, 
  ]
},
"SubstanceAmount.ReferenceRange": {
    /*Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "SubstanceAmount.ReferenceRange",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Lower limit possible or expected.
     */  "name": "lowLimit", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Upper limit possible or expected.
     */  "name": "highLimit", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"ElementDefinition": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The path identifies the element and is expressed as a "."-separated list of ancestor elements, beginning with the name of the resource or extension.
     */  "name": "path", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Codes that define how this element is represented in instances, when the deviation varies from the normal case.
     */  "name": "representation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PropertyRepresentation",
      "isPrimitive": true }, 
    { 
    /*The name of this element definition slice, when slicing is working. The name must be a token with no dots or spaces. This is a unique name referring to a specific set of constraints applied to this element, used to provide a name to different slices of the same element.
     */  "name": "sliceName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A single preferred label which is the text to display beside the element indicating its meaning or to use to prompt for the element in a user display or form.
     */  "name": "label", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A code that has the same meaning as the element in a particular terminology.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Indicates that the element is sliced into a set of alternative definitions (i.e. in a structure definition, there are multiple different constraints on a single element in the base resource). Slicing can be used in any resource that has cardinality ..* on the base resource, or any resource with a choice of types. The set of slices is any elements that come after this in the element sequence that have the same path, until a shorter path occurs (the shorter path terminates the set).
     */  "name": "slicing", 
    
      "min": "0", 
      "max": "1", 
      "type": "ElementDefinition.Slicing",
      "isPrimitive": false }, 
    { 
    /*A concise description of what this element means (e.g. for use in autogenerated summaries).
     */  "name": "short", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Provides a complete explanation of the meaning of the data element for human readability.  For the case of elements derived from existing elements (e.g. constraints), the definition SHALL be consistent with the base definition, but convey the meaning of the element in the particular context of use of the resource.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Explanatory notes and implementation guidance about the data element, including notes about how to use the data properly, exceptions to proper use, etc.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*This element is for traceability of why the element was created and why the constraints exist as they do. This may be used to point to source materials or specifications that drove the structure of this element.
     */  "name": "requirements", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Identifies additional names by which this element might also be known.
     */  "name": "alias", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The minimum number of times this element SHALL appear in the instance.
     */  "name": "min", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*The maximum number of times this element is permitted to appear in the instance.
     */  "name": "max", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Information about the base definition of the element, provided to make it unnecessary for tools to trace the deviation of the element through the derived and related profiles. When the element definition is not the original definition of an element - i.g. either in a constraint on another type, or for elements from a super type in a snap shot - then the information in provided in the element definition may be different to the base definition. On the original definition of the element, it will be same.
     */  "name": "base", 
    
      "min": "0", 
      "max": "1", 
      "type": "ElementDefinition.Base",
      "isPrimitive": false }, 
    { 
    /*Identifies the identity of an element defined elsewhere in the profile whose content rules should be applied to the current element.
     */  "name": "contentReference", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The data type or resource that the value of this element is permitted to be.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ElementDefinition.Type",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The value that should be used if there is no value stated in the instance (e.g. 'if not otherwise specified, the abstract is false').
     */
        {   "name": "defaultValueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "defaultValueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "defaultValueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "defaultValueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "defaultValueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "defaultValueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "defaultValueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "defaultValueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "defaultValueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "defaultValueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "defaultValueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "defaultValueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "defaultValuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "defaultValueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "defaultValueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "defaultValueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "defaultValueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "defaultValueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "defaultValueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "defaultValueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "defaultValueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "defaultValueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "defaultValueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "defaultValueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "defaultValueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "defaultValueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "defaultValueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "defaultValueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "defaultValueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "defaultValueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "defaultValueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "defaultValueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "defaultValuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "defaultValueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "defaultValueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "defaultValueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "defaultValueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "defaultValueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "defaultValueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "defaultValueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "defaultValueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "defaultValueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "defaultValueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "defaultValueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "defaultValueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "defaultValueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "defaultValueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "defaultValueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
    { 
    /*The Implicit meaning that is to be understood when this element is missing (e.g. 'when this element is missing, the period is ongoing'.
     */  "name": "meaningWhenMissing", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*If present, indicates that the order of the repeating element has meaning and describes what that meaning is.  If absent, it means that the order of the element has no meaning.
     */  "name": "orderMeaning", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Specifies a value that SHALL be exactly the value  for this element in the instance. For purposes of comparison, non-significant whitespace is ignored, and all values must be an exact match (case and accent sensitive). Missing elements/attributes must also be missing.
     */
        {   "name": "fixedBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "fixedBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "fixedCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "fixedCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "fixedDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "fixedDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "fixedDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "fixedId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "fixedInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "fixedInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "fixedMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "fixedOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "fixedPositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "fixedString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "fixedTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "fixedUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "fixedUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "fixedUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "fixedUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "fixedAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "fixedAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "fixedAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "fixedAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "fixedCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "fixedCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "fixedContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "fixedCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "fixedDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "fixedDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "fixedHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "fixedIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "fixedMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "fixedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "fixedQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "fixedRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "fixedRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "fixedReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "fixedSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "fixedSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "fixedTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "fixedParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "fixedDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "fixedRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "fixedContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "fixedContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "fixedTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "fixedUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "fixedDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Specifies a value that the value in the instance SHALL follow - that is, any value in the pattern must be found in the instance. Other additional values may be found too. This is effectively constraint by example.  The values of elements present in the pattern must match exactly (case-sensitive, accent-sensitive, etc.).
     */
        {   "name": "patternBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "patternBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "patternCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "patternCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "patternDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "patternDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "patternDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "patternId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "patternInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "patternInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "patternMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "patternOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "patternPositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "patternString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "patternTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "patternUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "patternUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "patternUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "patternUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "patternAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "patternAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "patternAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "patternAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "patternCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "patternCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "patternContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "patternCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "patternDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "patternDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "patternHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "patternIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "patternMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "patternPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "patternQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "patternRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "patternRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "patternReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "patternSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "patternSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "patternTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "patternParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "patternDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "patternRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "patternContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "patternContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "patternTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "patternUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "patternDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
    { 
    /*A sample value for this element demonstrating the type of information that would typically be found in the element.
     */  "name": "example", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ElementDefinition.Example",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The minimum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
     */
        {   "name": "minValueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "minValueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "minValueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "minValueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "minValueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "minValueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "minValuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "minValueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "minValueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*The maximum allowed value for the element. The value is inclusive. This is allowed for the types date, dateTime, instant, time, decimal, integer, and Quantity.
     */
        {   "name": "maxValueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "maxValueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "maxValueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "maxValueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "maxValueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "maxValueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "maxValuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "maxValueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "maxValueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates the maximum length in characters that is permitted to be present in conformant instances and which is expected to be supported by conformant consumers that support the element.
     */  "name": "maxLength", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*A reference to an invariant that may make additional statements about the cardinality or value in the instance.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Formal constraints such as co-occurrence and other constraints that can be computationally evaluated within the context of the instance.
     */  "name": "constraint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ElementDefinition.Constraint",
      "isPrimitive": false }, 
    { 
    /*If true, implementations that produce or consume resources SHALL provide "support" for the element in some meaningful way.  If false, the element may be ignored and not supported.
     */  "name": "mustSupport", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*If true, the value of this element affects the interpretation of the element or resource that contains it, and the value of the element cannot be ignored. Typically, this is used for status, negation and qualification codes. The effect of this is that the element cannot be ignored by systems: they SHALL either recognize the element and process it, and/or a pre-determination has been made that it is not relevant to their particular system.
     */  "name": "isModifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Explains how that element affects the interpretation of the resource or element that contains it.
     */  "name": "isModifierReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Whether the element should be included if a client requests a search with the parameter _summary=true.
     */  "name": "isSummary", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Binds to a value set if this element is coded (code, Coding, CodeableConcept, Quantity), or the data types (string, uri).
     */  "name": "binding", 
    
      "min": "0", 
      "max": "1", 
      "type": "ElementDefinition.Binding",
      "isPrimitive": false }, 
    { 
    /*Identifies a concept from an external specification that roughly corresponds to this element.
     */  "name": "mapping", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ElementDefinition.Mapping",
      "isPrimitive": false }, 
  ]
},
"ElementDefinition.Constraint": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Constraint",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Allows identification of which elements have their cardinalities impacted by the constraint.  Will not be referenced for constraints that do not affect cardinality.
     */  "name": "key", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Description of why this constraint is necessary or appropriate.
     */  "name": "requirements", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the impact constraint violation has on the conformance of the instance.
     */  "name": "severity", 
    
      "min": "1", 
      "max": "1", 
      "type": "ConstraintSeverity",
      "isPrimitive": true }, 
    { 
    /*Text that can be used to describe the constraint in messages identifying that the constraint has been violated.
     */  "name": "human", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A [FHIRPath](fhirpath.html) expression of constraint that can be executed to see if this constraint is met.
     */  "name": "expression", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An XPath expression of constraint that can be executed to see if this constraint is met.
     */  "name": "xpath", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A reference to the original source of the constraint, for traceability purposes.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"ElementDefinition.Mapping": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Mapping",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An internal reference to the definition of a mapping.
     */  "name": "identity", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Identifies the computable language in which mapping.map is expressed.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Expresses what part of the target specification corresponds to this element.
     */  "name": "map", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Comments that provide information about the mapping or its use.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ElementDefinition.Base": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Base",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Path that identifies the base element - this matches the ElementDefinition.path for that element. Across FHIR, there is only one base definition of any element - that is, an element definition on a [[[StructureDefinition]]] without a StructureDefinition.base.
     */  "name": "path", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Minimum cardinality of the base element identified by the path.
     */  "name": "min", 
    
      "min": "1", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*Maximum cardinality of the base element identified by the path.
     */  "name": "max", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ElementDefinition.Type": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Type",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*URL of Data type or Resource that is a(or the) type used for this element. References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. "string" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Identifies a profile structure or implementation Guide that applies to the datatype this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the type SHALL conform to at least one profile defined in the implementation guide.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Used when the type is "Reference", and Identifies a profile structure or implementation Guide that applies to the target of the reference this element refers to. If any profiles are specified, then the content must conform to at least one of them. The URL can be a local reference - to a contained StructureDefinition, or a reference to another StructureDefinition or Implementation Guide by a canonical URL. When an implementation guide is specified, the target resource SHALL conform to at least one profile defined in the implementation guide.
     */  "name": "targetProfile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*If the type is a reference to another resource, how the resource is or can be aggregated - is it a contained resource, or a reference, and if the context is a bundle, is it included in the bundle.
     */  "name": "aggregation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AggregationMode",
      "isPrimitive": true }, 
    { 
    /*Whether this reference needs to be version specific or version independent, or whether either can be used.
     */  "name": "versioning", 
    
      "min": "0", 
      "max": "1", 
      "type": "ReferenceVersionRules",
      "isPrimitive": true }, 
  ]
},
"ElementDefinition.Example": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Example",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the purpose of this example amoung the set of examples.
     */  "name": "label", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The actual value for the element, which must be one of the types allowed for this element.
     */
        {   "name": "valueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "valueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "valueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "valuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "valueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "valueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "valueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "valueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "valueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "valueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "valueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "valueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "valueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "valueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "valueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "valueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "valueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "valueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "valueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "valueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "valueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "valueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "valueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
  ]
},
"ElementDefinition.Slicing": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Slicing",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Designates which child elements are used to discriminate between the slices when processing an instance. If one or more discriminators are provided, the value of the child elements in the instance data SHALL completely distinguish which slice the element in the resource matches based on the allowed values for those elements in each of the slices.
     */  "name": "discriminator", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ElementDefinition.Discriminator",
      "isPrimitive": false }, 
    { 
    /*A human-readable text description of how the slicing works. If there is no discriminator, this is required to be present to provide whatever information is possible about how the slices can be differentiated.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*If the matching elements have to occur in the same order as defined in the profile.
     */  "name": "ordered", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether additional slices are allowed or not. When the slices are ordered, profile authors can also say that additional slices are only allowed at the end.
     */  "name": "rules", 
    
      "min": "1", 
      "max": "1", 
      "type": "SlicingRules",
      "isPrimitive": true }, 
  ]
},
"ElementDefinition.Binding": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Binding",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.
     */  "name": "strength", 
    
      "min": "1", 
      "max": "1", 
      "type": "BindingStrength",
      "isPrimitive": true }, 
    { 
    /*Describes the intended use of this particular set of codes.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used. If the binding refers to an explicit value set - the normal case - then use a canonical(ValueSet) preferably containing the canonical URL for the value set. If the reference is to an implicit value set - usually, an IETF RFC that defines a grammar, such as mime types - then use a uri.
     */
        {   "name": "valueSetUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueSetCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
  ]
},
"ElementDefinition.Discriminator": {
    /*Captures constraints on each element within the resource, profile, or extension.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ElementDefinition.Discriminator",
  "base": "Element", 
  "attrs": [
  ],
  "elems": [
    { 
    /*How the element value is interpreted when discrimination is evaluated.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "DiscriminatorType",
      "isPrimitive": true }, 
    { 
    /*A FHIRPath expression, using [the simple subset of FHIRPath](fhirpath.html#simple), that is used to identify the element on which discrimination is based.
     */  "name": "path", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"PropertyRepresentation": {
    /*How a property is represented when serialized.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PropertyRepresentation",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "PropertyRepresentation-list" }, 
  ],
  "elems": [
  ]
},
"ConstraintSeverity": {
    /*SHALL applications comply with this constraint?If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConstraintSeverity",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConstraintSeverity-list" }, 
  ],
  "elems": [
  ]
},
"AggregationMode": {
    /*How resource references can be aggregated.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AggregationMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AggregationMode-list" }, 
  ],
  "elems": [
  ]
},
"ReferenceVersionRules": {
    /*Whether a reference needs to be version specific or version independent, or whether either can be usedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ReferenceVersionRules",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ReferenceVersionRules-list" }, 
  ],
  "elems": [
  ]
},
"SlicingRules": {
    /*How slices are interpreted when evaluating an instance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SlicingRules",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SlicingRules-list" }, 
  ],
  "elems": [
  ]
},
"BindingStrength": {
    /*Indication of the degree of conformance expectations associated with a binding.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BindingStrength",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "BindingStrength-list" }, 
  ],
  "elems": [
  ]
},
"DiscriminatorType": {
    /*How an element value is interpreted when discrimination is evaluatedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DiscriminatorType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DiscriminatorType-list" }, 
  ],
  "elems": [
  ]
},
"SubstanceMoiety": {
    /*Chemical substances are a single substance type whose primary defining element is the molecular structure. Chemical substances shall be defined on the basis of their complete covalent molecular structure; the presence of a salt (counter-ion) and/or solvates (water, alcohols) is also captured. Purity, grade, physical form or particle size are not taken into account in the definition of a chemical substance or in the assignment of a Substance ID.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "SubstanceMoiety",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The role of the moiety should be specified if there is a specific role the moiety is playing.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The unique identifier assigned to the substance representing the moiety based on the ISO 11238 substance controlled vocabulary.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The name of the moiety shall be provided.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Stereochemistry shall be captured as described in 4.7.1.
     */  "name": "stereochemistry", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Optical activity shall be captured as described in 4.7.2.
     */  "name": "opticalActivity", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Molecular formula shall be captured as described in 4.7.3.
     */  "name": "molecularFormula", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceAmount",
      "isPrimitive": false }, 
  ]
},
"ProductShelfLife": {
    /*The shelf-life and storage information for a medicinal product item or container can be described using this class.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ProductShelfLife",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier for the packaged Medicinal Product.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*This describes the shelf life, taking into account various scenarios such as shelf life of the packaged Medicinal Product itself, shelf life after transformation where necessary and shelf life after the first opening of a bottle, etc. The shelf life type shall be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The shelf life time period can be specified using a numerical value for the period of time and its unit of time measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "period", 
    
      "min": "1", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Special precautions for storage, if any, can be specified using an appropriate controlled vocabulary The controlled term and the controlled term identifier shall be specified.
     */  "name": "specialPrecautionsForStorage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ProdCharacteristic": {
    /*The marketing status describes the date when a medicinal product is actually put on the market or the date as of which it is no longer available.If the element is present, it must have a value for at least one of the defined elements, an @id referenced from the Narrative, or extensions
     */
  "name": "ProdCharacteristic",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Where applicable, the height can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "height", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the width can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "width", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the depth can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "depth", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the weight can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "weight", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the nominal volume can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "nominalVolume", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the external diameter can be specified using a numerical value and its unit of measurement The unit of measurement shall be specified in accordance with ISO 11240 and the resulting terminology The symbol and the symbol identifier shall be used.
     */  "name": "externalDiameter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the shape can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.
     */  "name": "shape", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Where applicable, the color can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.
     */  "name": "color", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Where applicable, the imprint can be specified as text.
     */  "name": "imprint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Where applicable, the image can be provided The format of the image attachment shall be specified by regional implementations.
     */  "name": "image", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*Where applicable, the scoring can be specified An appropriate controlled vocabulary shall be used The term and the term identifier shall be used.
     */  "name": "scoring", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"DomainResource": {
    /*A resource that includes narrative, extensions, and contained resources.
     */
  "name": "DomainResource",
  "base": "Resource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A human-readable narrative that contains a summary of the resource and can be used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative. Resource definitions may define what content should be represented in the narrative to ensure clinical safety.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "Narrative",
      "isPrimitive": false }, 
    { 
    /*These resources do not have an independent existence apart from the resource that contains them - they cannot be identified independently, and nor can they have their own independent transaction scope.
     */  "name": "contained", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ResourceContainer",
      "isPrimitive": false }, 
    { 
    /*May be used to represent additional information that is not part of the basic definition of the resource. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.
     */  "name": "extension", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Extension",
      "isPrimitive": false }, 
    { 
    /*May be used to represent additional information that is not part of the basic definition of the resource, and that modifies the understanding of the element that contains it. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer is allowed to define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.
     */  "name": "modifierExtension", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Extension",
      "isPrimitive": false }, 
  ]
},
"Resource": {
    /*This is the base resource type for everything.
     */
  "name": "Resource",
  "attrs": [
  ],
  "elems": [
    { 
    /*The logical id of the resource, as used in the URL for the resource. Once assigned, this value never changes.
     */  "name": "id", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The metadata about the resource. This is content that is maintained by the infrastructure. Changes to the content might not always be associated with version changes to the resource.
     */  "name": "meta", 
    
      "min": "0", 
      "max": "1", 
      "type": "Meta",
      "isPrimitive": false }, 
    { 
    /*A reference to a set of rules that were followed when the resource was constructed, and which must be understood when processing the content. Often, this is a reference to an implementation guide that defines the special rules along with other profiles etc.
     */  "name": "implicitRules", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The base language in which the resource is written.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
  ]
},
"PublicationStatus": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PublicationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "PublicationStatus-list" }, 
  ],
  "elems": [
  ]
},
"SearchParamType": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SearchParamType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SearchParamType-list" }, 
  ],
  "elems": [
  ]
},
"AdministrativeGender": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AdministrativeGender",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AdministrativeGender-list" }, 
  ],
  "elems": [
  ]
},
"RemittanceOutcome": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RemittanceOutcome",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "RemittanceOutcome-list" }, 
  ],
  "elems": [
  ]
},
"NoteType": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NoteType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "NoteType-list" }, 
  ],
  "elems": [
  ]
},
"ConceptMapEquivalence": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConceptMapEquivalence",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConceptMapEquivalence-list" }, 
  ],
  "elems": [
  ]
},
"DocumentReferenceStatus": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DocumentReferenceStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DocumentReferenceStatus-list" }, 
  ],
  "elems": [
  ]
},
"Account": {
    /*A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Account",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier used to reference the account.  Might or might not be intended for human use (e.g. credit card number).
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates whether the account is presently used/usable or not.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "AccountStatus",
      "isPrimitive": true }, 
    { 
    /*Categorizes the account for reporting and searching purposes.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Name used for the account when displaying it to humans in reports, etc.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the patient, device, practitioner, location or other object the account is associated with.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date range of services associated with this account.
     */  "name": "servicePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The party(s) that are responsible for covering the payment of this account, and what order should they be applied to the account.
     */  "name": "coverage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Account.Coverage",
      "isPrimitive": false }, 
    { 
    /*Indicates the organization, department, etc. with responsibility for the account.
     */  "name": "owner", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Provides additional information about what the account tracks and how it is used.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Parties financially responsible for the account.
     */  "name": "guarantor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Account.Guarantor",
      "isPrimitive": false }, 
    { 
    /*Reference to a parent Account.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Account.Coverage": {
    /*A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.
     */
  "name": "Account.Coverage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The party(s) that are responsible for payment (or part of) of charges applied to this account (including self-pay).

A coverage may only be resposible for specific types of charges, and the sequence of the coverages in the account could be important when processing billing.
     */  "name": "coverage", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The priority of the coverage in the context of this account.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
  ]
},
"Account.Guarantor": {
    /*A financial tool for tracking value accrued for a particular purpose.  In the healthcare field, used to track charges for a patient, cost centers, etc.
     */
  "name": "Account.Guarantor",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The entity who is responsible.
     */  "name": "party", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A guarantor may be placed on credit hold or otherwise have their role temporarily suspended.
     */  "name": "onHold", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The timeframe during which the guarantor accepts responsibility for the account.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"AccountStatus": {
    /*Indicates whether the account is available to be used.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AccountStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AccountStatus-list" }, 
  ],
  "elems": [
  ]
},
"ActivityDefinition": {
    /*This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActivityDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this activity definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this activity definition is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this activity definition when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the activity definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the activity definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active assets.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the activity definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the activity definition.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An explanatory or alternate title for the activity definition giving additional information about its content.
     */  "name": "subtitle", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this activity definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this activity definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A code or group definition that describes the intended subject of the activity being defined.
     */
        {   "name": "subjectCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "subjectReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date  (and optionally time) when the activity definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the activity definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the activity definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the activity definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate activity definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the activity definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this activity definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A detailed description of how the activity definition is used from a clinical perspective.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the activity definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the activity definition.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
     */  "name": "approvalDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
     */  "name": "lastReviewDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The period during which the activity definition content was or is planned to be in active use.
     */  "name": "effectivePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Descriptive topics related to the content of the activity. Topics provide a high-level categorization of the activity that can be useful for filtering and searching.
     */  "name": "topic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A contributor to the content of the activity definition, including authors, editors, reviewers, and endorsers.
     */  "name": "contributor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contributor",
      "isPrimitive": false }, 
    { 
    /*Related artifacts such as additional documentation, justification, or bibliographic references.
     */  "name": "relatedArtifact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*A reference to a Library resource containing any formal logic used by the activity definition.
     */  "name": "library", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*A description of the kind of resource the activity definition is representing. For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest. Typically, but not always, this is a Request resource.
     */  "name": "kind", 
    
      "min": "0", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*Detailed description of the type of activity; e.g. What lab test, what procedure, what kind of encounter.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Set this to true if the definition is to indicate that a particular activity should NOT be performed. If true, this element should be interpreted to reinforce a negative coding. For example NPO as a code with a doNotPerform of true would still indicate to NOT perform the action.
     */  "name": "doNotPerform", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The period, timing or frequency upon which the described activity is to occur.
     */
        {   "name": "timingTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "timingDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "timingAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "timingPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "timingRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "timingDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
    ], 
    { 
    /*Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates who should participate in performing the action described.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ActivityDefinition.Participant",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the food, drug or other product being consumed or supplied in the activity.
     */
        {   "name": "productReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "productCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*Identifies the quantity expected to be consumed at once (per dose, per meal, etc.).
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Provides detailed dosage instructions in the same way that they are described for MedicationRequest resources.
     */  "name": "dosage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Dosage",
      "isPrimitive": false }, 
    { 
    /*Indicates the sites on the subject's body where the procedure should be performed (I.e. the target sites).
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Defines specimen requirements for the action to be performed, such as required specimens for a lab test.
     */  "name": "specimenRequirement", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.
     */  "name": "transform", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Dynamic values that will be evaluated to produce values for elements of the resulting resource. For example, if the dosage of a medication must be computed based on the patient's weight, a dynamic value would be used to specify an expression that calculated the weight, and the path on the request resource that would contain the result.
     */  "name": "dynamicValue", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ActivityDefinition.DynamicValue",
      "isPrimitive": false }, 
  ]
},
"ActivityDefinition.Participant": {
    /*This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.
     */
  "name": "ActivityDefinition.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of participant in the action.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ActionParticipantType",
      "isPrimitive": true }, 
    { 
    /*The role the participant should play in performing the described action.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ActivityDefinition.DynamicValue": {
    /*This resource allows for the definition of some activity to be performed, independent of a particular patient, practitioner, or other performance context.
     */
  "name": "ActivityDefinition.DynamicValue",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A brief, natural language description of the intended semantics of the dynamic value.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The media type of the language for the expression.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An expression specifying the value of the customized element.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ActionParticipantType": {
    /*The type of participant in the activityIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionParticipantType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionParticipantType-list" }, 
  ],
  "elems": [
  ]
},
"ResourceType": {
    /*The kind of activity the definition is describingIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResourceType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ResourceType-list" }, 
  ],
  "elems": [
  ]
},
"AdverseEvent": {
    /*Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AdverseEvent",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this adverse event by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether the event actually happened, or just had the potential to. Note that this is independent of whether anyone was affected or harmed or how severely.
     */  "name": "actuality", 
    
      "min": "1", 
      "max": "1", 
      "type": "AdverseEventActuality",
      "isPrimitive": true }, 
    { 
    /*The overall type of event, intended for search and filtering purposes.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This element defines the specific type of event that occurred or that was prevented from occurring.
     */  "name": "event", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This subject or group impacted by the event.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care that establishes the context for this AdverseEvent.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date (and perhaps time) when the adverse event occurred.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Includes information about the reaction that occurred as a result of exposure to a substance (for example, a drug or a chemical).
     */  "name": "resultingCondition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The information about where the adverse event occurred.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Assessment whether this event was of real importance.
     */  "name": "seriousness", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Describes the severity of the adverse event, in relation to the subject. Contrast to AdverseEvent.serious - a severe rash might not be serious, but a mild heart problem is.
     */  "name": "severity", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Describes the type of outcome from the adverse event.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Information on who recorded the adverse event.  May be the patient or a practitioner.
     */  "name": "recorder", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Parties that may or should contribute or have contributed information to the adverse event, which can consist of one or more activities.  Such information includes information leading to the decision to perform the activity and how to perform the activity (e.g. consultant), information that the activity itself seeks to reveal (e.g. informant of clinical history), or information about what activity was performed (e.g. informant witness).
     */  "name": "contributor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the entity that is suspected to have caused the adverse event.
     */  "name": "suspectEntity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AdverseEvent.SuspectEntity",
      "isPrimitive": false }, 
    { 
    /*AdverseEvent.subjectMedicalHistory.
     */  "name": "subjectMedicalHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*AdverseEvent.referenceDocument.
     */  "name": "referenceDocument", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*AdverseEvent.study.
     */  "name": "study", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"AdverseEvent.SuspectEntity": {
    /*Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
     */
  "name": "AdverseEvent.SuspectEntity",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies the actual instance of what caused the adverse event.  May be a substance, medication, medication administration, medication statement or a device.
     */  "name": "instance", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Information on the possible cause of the event.
     */  "name": "causality", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AdverseEvent.Causality",
      "isPrimitive": false }, 
  ]
},
"AdverseEvent.Causality": {
    /*Actual or  potential/avoided event causing unintended physical injury resulting from or contributed to by medical care, a research study or other healthcare setting factors that requires additional monitoring, treatment, or hospitalization, or that results in death.
     */
  "name": "AdverseEvent.Causality",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Assessment of if the entity caused the event.
     */  "name": "assessment", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*AdverseEvent.suspectEntity.causalityProductRelatedness.
     */  "name": "productRelatedness", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*AdverseEvent.suspectEntity.causalityAuthor.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*ProbabilityScale | Bayesian | Checklist.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"AdverseEventActuality": {
    /*Overall nature of the event, e.g. real or potentialIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AdverseEventActuality",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AdverseEventActuality-list" }, 
  ],
  "elems": [
  ]
},
"AllergyIntolerance": {
    /*Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntolerance",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this AllergyIntolerance by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The clinical status of the allergy or intolerance.
     */  "name": "clinicalStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "AllergyIntoleranceClinicalStatus",
      "isPrimitive": true }, 
    { 
    /*Assertion about certainty associated with the propensity, or potential risk, of a reaction to the identified substance (including pharmaceutical product).
     */  "name": "verificationStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "AllergyIntoleranceVerificationStatus",
      "isPrimitive": true }, 
    { 
    /*Identification of the underlying physiological mechanism for the reaction risk.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "AllergyIntoleranceType",
      "isPrimitive": true }, 
    { 
    /*Category of the identified substance.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AllergyIntoleranceCategory",
      "isPrimitive": true }, 
    { 
    /*Estimate of the potential clinical harm, or seriousness, of the reaction to the identified substance.
     */  "name": "criticality", 
    
      "min": "0", 
      "max": "1", 
      "type": "AllergyIntoleranceCriticality",
      "isPrimitive": true }, 
    { 
    /*Code for an allergy or intolerance statement (either a positive or a negated/excluded statement).  This may be a code for a substance or pharmaceutical product that is considered to be responsible for the adverse reaction risk (e.g., "Latex"), an allergy or intolerance condition (e.g., "Latex allergy"), or a negated/excluded code for a specific substance or class (e.g., "No latex allergy") or a general or categorical negated statement (e.g.,  "No known allergy", "No known drug allergies").  Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient who has the allergy or intolerance.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter when the allergy or intolerance was asserted.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Estimated or actual date,  date-time, or age when allergy or intolerance was identified.
     */
        {   "name": "onsetDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "onsetAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "onsetPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "onsetRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "onsetString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*The date on which the existence of the AllergyIntolerance was first asserted or acknowledged.
     */  "name": "assertedDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Individual who recorded the record and takes responsibility for its content.
     */  "name": "recorder", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The source of the information about the allergy that is recorded.
     */  "name": "asserter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Represents the date and/or time of the last known occurrence of a reaction event.
     */  "name": "lastOccurrence", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Additional narrative about the propensity for the Adverse Reaction, not captured in other fields.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Details about each adverse reaction event linked to exposure to the identified substance.
     */  "name": "reaction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AllergyIntolerance.Reaction",
      "isPrimitive": false }, 
  ]
},
"AllergyIntolerance.Reaction": {
    /*Risk of harmful or undesirable, physiological response which is unique to an individual and associated with exposure to a substance.
     */
  "name": "AllergyIntolerance.Reaction",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identification of the specific substance (or pharmaceutical product) considered to be responsible for the Adverse Reaction event. Note: the substance for a specific reaction may be different from the substance identified as the cause of the risk, but it must be consistent with it. For instance, it may be a more specific substance (e.g. a brand medication) or a composite product that includes the identified substance. It must be clinically safe to only process the 'code' and ignore the 'reaction.substance'.  If a receiving system is unable to confirm that AllergyIntolerance.reaction.substance falls within the semantic scope of AllergyIntolerance.code, then the receiving system should ignore AllergyIntolerance.reaction.substance.
     */  "name": "substance", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Clinical symptoms and/or signs that are observed or associated with the adverse reaction event.
     */  "name": "manifestation", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Text description about the reaction as a whole, including details of the manifestation if required.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Record of the date and/or time of the onset of the Reaction.
     */  "name": "onset", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Clinical assessment of the severity of the reaction event as a whole, potentially considering multiple different manifestations.
     */  "name": "severity", 
    
      "min": "0", 
      "max": "1", 
      "type": "AllergyIntoleranceSeverity",
      "isPrimitive": true }, 
    { 
    /*Identification of the route by which the subject was exposed to the substance.
     */  "name": "exposureRoute", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Additional text about the adverse reaction event not captured in other fields.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"AllergyIntoleranceCriticality": {
    /*Estimate of the potential clinical harm, or seriousness, of a reaction to an identified substance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntoleranceCriticality",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AllergyIntoleranceCriticality-list" }, 
  ],
  "elems": [
  ]
},
"AllergyIntoleranceType": {
    /*Identification of the underlying physiological mechanism for a Reaction Risk.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntoleranceType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AllergyIntoleranceType-list" }, 
  ],
  "elems": [
  ]
},
"AllergyIntoleranceCategory": {
    /*Category of an identified substance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntoleranceCategory",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AllergyIntoleranceCategory-list" }, 
  ],
  "elems": [
  ]
},
"AllergyIntoleranceVerificationStatus": {
    /*Assertion about certainty associated with a propensity, or potential risk, of a reaction to the identified substance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntoleranceVerificationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AllergyIntoleranceVerificationStatus-list" }, 
  ],
  "elems": [
  ]
},
"AllergyIntoleranceSeverity": {
    /*Clinical assessment of the severity of a reaction event as a whole, potentially considering multiple different manifestations.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntoleranceSeverity",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AllergyIntoleranceSeverity-list" }, 
  ],
  "elems": [
  ]
},
"AllergyIntoleranceClinicalStatus": {
    /*The clinical status of the allergy or intolerance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AllergyIntoleranceClinicalStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AllergyIntoleranceClinicalStatus-list" }, 
  ],
  "elems": [
  ]
},
"Appointment": {
    /*A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Appointment",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This records identifiers associated with this appointment concern that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The overall status of the Appointment. Each of the participants has their own participation status which indicates their involvement in the process, however this status indicates the shared status.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "AppointmentStatus",
      "isPrimitive": true }, 
    { 
    /*A broad categorization of the service that is to be performed during this appointment.
     */  "name": "serviceCategory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specific service that is to be performed during this appointment.
     */  "name": "serviceType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specialty of a practitioner that would be required to perform the service requested in this appointment.
     */  "name": "specialty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The style of appointment or patient that has been booked in the slot (not service type).
     */  "name": "appointmentType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The reason that this appointment is being scheduled. This is more clinical than administrative.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Reason the appointment has been scheduled to take place, as specified using information from another resource. When the patient arrives and the encounter begins it may be used as the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.
     */  "name": "indication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The priority of the appointment. Can be used to make informed decisions if needing to re-prioritize appointments. (The iCal Standard specifies 0 as undefined, 1 as highest, 9 as lowest priority).
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*The brief description of the appointment as would be shown on a subject line in a meeting request, or appointment list. Detailed or expanded information should be put in the comment field.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional information to support the appointment provided when making the appointment.
     */  "name": "supportingInformation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date/Time that the appointment is to take place.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Date/Time that the appointment is to conclude.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Number of minutes that the appointment is to take. This can be less than the duration between the start and end times.  For example, where the actual time of appointment is only an estimate or if a 30 minute appointment is being requested, but any time would work.  Also, if there is, for example, a planned 15 minute break in the middle of a long appointment, the duration may be 15 minutes less than the difference between the start and end.
     */  "name": "minutesDuration", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The slots from the participants' schedules that will be filled by the appointment.
     */  "name": "slot", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date that this appointment was initially created. This could be different to the meta.lastModified value on the initial entry, as this could have been before the resource was created on the FHIR server, and should remain unchanged over the lifespan of the appointment.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Additional comments about the appointment.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*While Appointment.comment contains information for internal use, Appointment.patientInstructions is used to capture patient facing information about the Appointment (e.g. please bring your referral or fast from 8pm night before).
     */  "name": "patientInstruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The service request this appointment is allocated to assess (e.g. incoming referral or procedure request).
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*List of participants involved in the appointment.
     */  "name": "participant", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Appointment.Participant",
      "isPrimitive": false }, 
    { 
    /*A set of date ranges (potentially including times) that the appointment is preferred to be scheduled within. When using these values, the duration (usually in minutes) should be provided to indicate the length of the appointment to fill and populate the start/end times for the actual allocated time.
     */  "name": "requestedPeriod", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Appointment.Participant": {
    /*A booking of a healthcare event among patient(s), practitioner(s), related person(s) and/or device(s) for a specific date/time. This may result in one or more Encounter(s).
     */
  "name": "Appointment.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Role of participant in the appointment.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A Person, Location/HealthcareService or Device that is participating in the appointment.
     */  "name": "actor", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Whether this participant is required to be present at the meeting. This covers a use-case where two doctors need to meet to discuss the results for a specific patient, and the patient is not required to be present.
     */  "name": "required", 
    
      "min": "0", 
      "max": "1", 
      "type": "ParticipantRequired",
      "isPrimitive": true }, 
    { 
    /*Participation status of the actor.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ParticipationStatus",
      "isPrimitive": true }, 
    { 
    /*Participation period of the actor.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"ParticipantRequired": {
    /*Is the Participant required to attend the appointment.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ParticipantRequired",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ParticipantRequired-list" }, 
  ],
  "elems": [
  ]
},
"AppointmentStatus": {
    /*The free/busy status of an appointment.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AppointmentStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AppointmentStatus-list" }, 
  ],
  "elems": [
  ]
},
"ParticipationStatus": {
    /*The Participation status of an appointment.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ParticipationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ParticipationStatus-list" }, 
  ],
  "elems": [
  ]
},
"AppointmentResponse": {
    /*A reply to an appointment request for a patient and/or practitioner(s), such as a confirmation or rejection.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AppointmentResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This records identifiers associated with this appointment response concern that are defined by business processes and/ or used to refer to it when a direct URL reference to the resource itself is not appropriate.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Appointment that this response is replying to.
     */  "name": "appointment", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date/Time that the appointment is to take place, or requested new start time.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*This may be either the same as the appointment request to confirm the details of the appointment, or alternately a new time to request a re-negotiation of the end time.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Role of participant in the appointment.
     */  "name": "participantType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A Person, Location, HealthcareService, or Device that is participating in the appointment.
     */  "name": "actor", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Participation status of the participant. When the status is declined or tentative if the start/end times are different to the appointment, then these times should be interpreted as a requested time change. When the status is accepted, the times can either be the time of the appointment (as a confirmation of the time) or can be empty.
     */  "name": "participantStatus", 
    
      "min": "1", 
      "max": "1", 
      "type": "ParticipationStatus",
      "isPrimitive": true }, 
    { 
    /*Additional comments about the appointment.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"AuditEvent": {
    /*A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AuditEvent",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for a family of the event.  For example, a menu item, program, rule, policy, function code, application name or URL. It identifies the performed function.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Identifier for the category of event.
     */  "name": "subtype", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Indicator for type of action performed during the event that generated the audit.
     */  "name": "action", 
    
      "min": "0", 
      "max": "1", 
      "type": "AuditEventAction",
      "isPrimitive": true }, 
    { 
    /*The period during which the activity occurred.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The time when the event was recorded.
     */  "name": "recorded", 
    
      "min": "1", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Indicates whether the event succeeded or failed.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "AuditEventOutcome",
      "isPrimitive": true }, 
    { 
    /*A free text description of the outcome of the event.
     */  "name": "outcomeDesc", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The purposeOfUse (reason) that was used during the event being recorded.
     */  "name": "purposeOfEvent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*An actor taking an active role in the event or activity that is logged.
     */  "name": "agent", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "AuditEvent.Agent",
      "isPrimitive": false }, 
    { 
    /*The system that is reporting the event.
     */  "name": "source", 
    
      "min": "1", 
      "max": "1", 
      "type": "AuditEvent.Source",
      "isPrimitive": false }, 
    { 
    /*Specific instances of data or objects that have been accessed.
     */  "name": "entity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AuditEvent.Entity",
      "isPrimitive": false }, 
  ]
},
"AuditEvent.Agent": {
    /*A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
     */
  "name": "AuditEvent.Agent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Specification of the participation type the user plays when performing the event.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The security role that the user was acting under, that come from local codes defined by the access control security system (e.g. RBAC, ABAC) used in the local context.
     */  "name": "role", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Direct reference to a resource that identifies the agent.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Unique identifier for the user actively participating in the event.
     */  "name": "userId", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Alternative agent Identifier. For a human, this should be a user identifier text string from authentication system. This identifier would be one known to a common authentication system (e.g. single sign-on), if available.
     */  "name": "altId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Human-meaningful name for the agent.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicator that the user is or is not the requestor, or initiator, for the event being audited.
     */  "name": "requestor", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Where the event occurred.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The policy or plan that authorized the activity being recorded. Typically, a single activity may have multiple applicable policies, such as patient consent, guarantor funding, etc. The policy would also indicate the security token used.
     */  "name": "policy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Type of media involved. Used when the event is about exporting/importing onto media.
     */  "name": "media", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Logical network location for application activity, if the activity has a network location.
     */  "name": "network", 
    
      "min": "0", 
      "max": "1", 
      "type": "AuditEvent.Network",
      "isPrimitive": false }, 
    { 
    /*The reason (purpose of use), specific to this agent, that was used during the event being recorded.
     */  "name": "purposeOfUse", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"AuditEvent.Network": {
    /*A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
     */
  "name": "AuditEvent.Network",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier for the network access point of the user device for the audit event.
     */  "name": "address", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An identifier for the type of network access point that originated the audit event.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "AuditEventAgentNetworkType",
      "isPrimitive": true }, 
  ]
},
"AuditEvent.Source": {
    /*A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
     */
  "name": "AuditEvent.Source",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Logical source location within the healthcare enterprise network.  For example, a hospital or other provider location within a multi-entity provider group.
     */  "name": "site", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifier of the source where the event was detected.
     */  "name": "identifier", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Code specifying the type of source where event originated.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"AuditEvent.Entity": {
    /*A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
     */
  "name": "AuditEvent.Entity",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies a specific instance of the entity. The reference should always be version specific.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Identifies a specific instance of the entity. The reference should be version specific.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The type of the object that was involved in this audit event.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Code representing the role the entity played in the event being audited.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Identifier for the data life-cycle stage for the entity.
     */  "name": "lifecycle", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Security labels for the identified entity.
     */  "name": "securityLabel", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*A name of the entity in the audit event.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Text that describes the entity in more detail.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The query parameters for a query-type entities.
     */  "name": "query", 
    
      "min": "0", 
      "max": "1", 
      "type": "base64Binary",
      "isPrimitive": true }, 
    { 
    /*Tagged value pairs for conveying additional information about the entity.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "AuditEvent.Detail",
      "isPrimitive": false }, 
  ]
},
"AuditEvent.Detail": {
    /*A record of an event made for purposes of maintaining a security log. Typical uses include detection of intrusion attempts and monitoring for inappropriate usage.
     */
  "name": "AuditEvent.Detail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of extra detail provided in the value.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The  value of the extra detail.
     */
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
    ], 
  ]
},
"AuditEventOutcome": {
    /*Indicates whether the event succeeded or failedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AuditEventOutcome",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AuditEventOutcome-list" }, 
  ],
  "elems": [
  ]
},
"AuditEventAction": {
    /*Indicator for type of action performed during the event that generated the eventIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AuditEventAction",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AuditEventAction-list" }, 
  ],
  "elems": [
  ]
},
"AuditEventAgentNetworkType": {
    /*The type of network access point of this agent in the audit eventIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AuditEventAgentNetworkType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AuditEventAgentNetworkType-list" }, 
  ],
  "elems": [
  ]
},
"Basic": {
    /*Basic is used for handling concepts not yet defined in FHIR, narrative-only resources that don't map to an existing resource, and custom resources not appropriate for inclusion in the FHIR specification.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Basic",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier assigned to the resource for business purposes, outside the context of FHIR.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Identifies the 'type' of resource - equivalent to the resource name for other resources.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies the patient, practitioner, device or any other resource that is the "focus" of this resource.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies when the resource was first created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Indicates who was responsible for creating the resource instance.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Binary": {
    /*A binary resource can contain any content, whether text, image, pdf, zip archive, etc.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Binary",
  "base": "Resource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*MimeType of the binary content represented as a standard MimeType (BCP 13).
     */  "name": "contentType", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Treat this binary as if it was this other resource for access control purposes.
     */  "name": "securityContext", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The actual content, base64 encoded.
     */  "name": "content", 
    
      "min": "1", 
      "max": "1", 
      "type": "base64Binary",
      "isPrimitive": true }, 
  ]
},
"BiologicallyDerivedProduct": {
    /*A material substance originating from a biological entity intended to be transplanted or infused
into another (possibly the same) biological entity.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BiologicallyDerivedProduct",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This records identifiers associated with this biologically derived product instance that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate (e.g. in CDA documents, or in written / printed documentation).
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Broad category of this product.
     */  "name": "productCategory", 
    
      "min": "0", 
      "max": "1", 
      "type": "BiologicallyDerivedProductCategory",
      "isPrimitive": true }, 
    { 
    /*A code that identifies the kind of this biologically derived product (SNOMED Ctcode).
     */  "name": "productCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether the product is currently available.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "BiologicallyDerivedProductStatus",
      "isPrimitive": true }, 
    { 
    /*Procedure request to obtain this biologically derived product.
     */  "name": "request", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Number of discrete units within this product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Parent product (if any).
     */  "name": "parent", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*How this product was collected.
     */  "name": "collection", 
    
      "min": "0", 
      "max": "1", 
      "type": "BiologicallyDerivedProduct.Collection",
      "isPrimitive": false }, 
    { 
    /*Any processing of the product during collection.
     */  "name": "processing", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "BiologicallyDerivedProduct.Processing",
      "isPrimitive": false }, 
    { 
    /*Any manipulation of product post-collection.
     */  "name": "manipulation", 
    
      "min": "0", 
      "max": "1", 
      "type": "BiologicallyDerivedProduct.Manipulation",
      "isPrimitive": false }, 
    { 
    /*Product storage.
     */  "name": "storage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "BiologicallyDerivedProduct.Storage",
      "isPrimitive": false }, 
  ]
},
"BiologicallyDerivedProduct.Collection": {
    /*A material substance originating from a biological entity intended to be transplanted or infused
into another (possibly the same) biological entity.
     */
  "name": "BiologicallyDerivedProduct.Collection",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*HealthCare Professional performing collection.
     */  "name": "collector", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Person or entity providing product.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Time of product collection.
     */
        {   "name": "collectedDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "collectedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
  ]
},
"BiologicallyDerivedProduct.Processing": {
    /*A material substance originating from a biological entity intended to be transplanted or infused
into another (possibly the same) biological entity.
     */
  "name": "BiologicallyDerivedProduct.Processing",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Description of of processing.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Procesing code.
     */  "name": "procedure", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Substance added during processing.
     */  "name": "additive", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Time of processing.
     */
        {   "name": "timeDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "timePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
  ]
},
"BiologicallyDerivedProduct.Manipulation": {
    /*A material substance originating from a biological entity intended to be transplanted or infused
into another (possibly the same) biological entity.
     */
  "name": "BiologicallyDerivedProduct.Manipulation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Description of manipulation.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Time of manipulation.
     */
        {   "name": "timeDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "timePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
  ]
},
"BiologicallyDerivedProduct.Storage": {
    /*A material substance originating from a biological entity intended to be transplanted or infused
into another (possibly the same) biological entity.
     */
  "name": "BiologicallyDerivedProduct.Storage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Description of storage.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Storage temperature.
     */  "name": "temperature", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Temperature scale used.
     */  "name": "scale", 
    
      "min": "0", 
      "max": "1", 
      "type": "BiologicallyDerivedProductStorageScale",
      "isPrimitive": true }, 
    { 
    /*Storage timeperiod.
     */  "name": "duration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"BiologicallyDerivedProductCategory": {
    /*Biologically Derived Product CategoryIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BiologicallyDerivedProductCategory",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "BiologicallyDerivedProductCategory-list" }, 
  ],
  "elems": [
  ]
},
"BiologicallyDerivedProductStatus": {
    /*Biologically Derived Product StatusIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BiologicallyDerivedProductStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "BiologicallyDerivedProductStatus-list" }, 
  ],
  "elems": [
  ]
},
"BiologicallyDerivedProductStorageScale": {
    /*BiologicallyDerived Product Storage ScaleIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BiologicallyDerivedProductStorageScale",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "BiologicallyDerivedProductStorageScale-list" }, 
  ],
  "elems": [
  ]
},
"BodyStructure": {
    /*Record details about an anatomical structure.  This resource may be used when a coded concept does not provide the necessary detail needed for the use case.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BodyStructure",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for this instance of the anatomical structure.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this body site is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The kind of structure being represented by the body structure at `BodyStructure.location`.  This can define both normal and abnormal morphologies.
     */  "name": "morphology", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The anatomical location or region of the specimen, lesion, or body structure.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Qualifier to refine the anatomical location.  These include qualifiers for laterality, relative location, directionality, number, and plane.
     */  "name": "locationQualifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A summary, charactarization or explanation of the body structure.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Image or images used to identify a location.
     */  "name": "image", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*The person to which the body site belongs.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Bundle": {
    /*A container for a collection of resources.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Bundle",
  "base": "Resource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A persistent identifier for the batch that won't change as a batch is copied from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the purpose of this bundle - how it was intended to be used.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "BundleType",
      "isPrimitive": true }, 
    { 
    /*The date/time that the bundle was assembled - i.e. when the resources were placed in the bundle.
     */  "name": "timestamp", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*If a set of search matches, this is the total number of matches for the search (as opposed to the number of results in this bundle).
     */  "name": "total", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*A series of links that provide context to this bundle.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Bundle.Link",
      "isPrimitive": false }, 
    { 
    /*An entry in a bundle resource - will either contain a resource, or information about a resource (transactions and history only).
     */  "name": "entry", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Bundle.Entry",
      "isPrimitive": false }, 
    { 
    /*Digital Signature - base64 encoded. XML-DSig or a JWT.
     */  "name": "signature", 
    
      "min": "0", 
      "max": "1", 
      "type": "Signature",
      "isPrimitive": false }, 
  ]
},
"Bundle.Link": {
    /*A container for a collection of resources.
     */
  "name": "Bundle.Link",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A name which details the functional use for this link - see [http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1](http://www.iana.org/assignments/link-relations/link-relations.xhtml#link-relations-1).
     */  "name": "relation", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The reference details for the link.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
  ]
},
"Bundle.Entry": {
    /*A container for a collection of resources.
     */
  "name": "Bundle.Entry",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A series of links that provide context to this entry.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Bundle.Link",
      "isPrimitive": false }, 
    { 
    /*The Absolute URL for the resource.  The fullUrl SHALL not disagree with the id in the resource. The fullUrl is a version independent reference to the resource. The fullUrl element SHALL have a value except that: 
* fullUrl can be empty on a POST (although it does not need to when specifying a temporary id for reference in the bundle)
* Results from operations might involve resources that are not identified.
     */  "name": "fullUrl", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The Resources for the entry.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "ResourceContainer",
      "isPrimitive": false }, 
    { 
    /*Information about the search process that lead to the creation of this entry.
     */  "name": "search", 
    
      "min": "0", 
      "max": "1", 
      "type": "Bundle.Search",
      "isPrimitive": false }, 
    { 
    /*Additional information about how this entry should be processed as part of a transaction.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Bundle.Request",
      "isPrimitive": false }, 
    { 
    /*Additional information about how this entry should be processed as part of a transaction.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "Bundle.Response",
      "isPrimitive": false }, 
  ]
},
"Bundle.Search": {
    /*A container for a collection of resources.
     */
  "name": "Bundle.Search",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Why this entry is in the result set - whether it's included as a match or because of an _include requirement.
     */  "name": "mode", 
    
      "min": "0", 
      "max": "1", 
      "type": "SearchEntryMode",
      "isPrimitive": true }, 
    { 
    /*When searching, the server's search ranking score for the entry.
     */  "name": "score", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"Bundle.Request": {
    /*A container for a collection of resources.
     */
  "name": "Bundle.Request",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The HTTP verb for this entry in either a change history, or a transaction/ transaction response.
     */  "name": "method", 
    
      "min": "1", 
      "max": "1", 
      "type": "HTTPVerb",
      "isPrimitive": true }, 
    { 
    /*The URL for this entry, relative to the root (the address to which the request is posted).
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*If the ETag values match, return a 304 Not Modified status. See the API documentation for ["Conditional Read"](http.html#cread).
     */  "name": "ifNoneMatch", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Only perform the operation if the last updated date matches. See the API documentation for ["Conditional Read"](http.html#cread).
     */  "name": "ifModifiedSince", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Only perform the operation if the Etag value matches. For more information, see the API section ["Managing Resource Contention"](http.html#concurrency).
     */  "name": "ifMatch", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Instruct the server not to perform the create if a specified resource already exists. For further information, see the API documentation for ["Conditional Create"](http.html#ccreate). This is just the query portion of the URL - what follows the "?" (not including the "?").
     */  "name": "ifNoneExist", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Bundle.Response": {
    /*A container for a collection of resources.
     */
  "name": "Bundle.Response",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The status code returned by processing this entry. The status SHALL start with a 3 digit HTTP code (e.g. 404) and may contain the standard HTTP description associated with the status code.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The location header created by processing this operation.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The Etag for the resource, it the operation for the entry produced a versioned resource (see [Resource Metadata and Versioning](http.html#versioning) and [Managing Resource Contention](http.html#concurrency)).
     */  "name": "etag", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The date/time that the resource was modified on the server.
     */  "name": "lastModified", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*An OperationOutcome containing hints and warnings produced as part of processing this entry in a batch or transaction.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "ResourceContainer",
      "isPrimitive": false }, 
  ]
},
"HTTPVerb": {
    /*HTTP verbs (in the HTTP command line).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "HTTPVerb",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "HTTPVerb-list" }, 
  ],
  "elems": [
  ]
},
"BundleType": {
    /*Indicates the purpose of a bundle - how it was intended to be used.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "BundleType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "BundleType-list" }, 
  ],
  "elems": [
  ]
},
"SearchEntryMode": {
    /*Why an entry is in the result set - whether it's included as a match or because of an _include requirement.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SearchEntryMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SearchEntryMode-list" }, 
  ],
  "elems": [
  ]
},
"CapabilityStatement": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CapabilityStatement",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this capability statement when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this capability statement is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The identifier that is used to identify this version of the capability statement when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the capability statement author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the capability statement. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the capability statement.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this capability statement. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this capability statement is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the capability statement was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the capability statement changes.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the capability statement.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the capability statement from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate capability statement instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the capability statement is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this capability statement is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the capability statement and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the capability statement.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The way that this statement is intended to be used, to describe an actual running instance of software, a particular product (kind, not instance of software) or a class of implementation (e.g. a desired purchase).
     */  "name": "kind", 
    
      "min": "1", 
      "max": "1", 
      "type": "CapabilityStatementKind",
      "isPrimitive": true }, 
    { 
    /*Reference to a canonical URL of another CapabilityStatement that this software implements or uses. This capability statement is a published API description that corresponds to a business service. The rest of the capability statement does not need to repeat the details of the referenced resource, but can do so.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Software that is covered by this capability statement.  It is used when the capability statement describes the capabilities of a particular software version, independent of an installation.
     */  "name": "software", 
    
      "min": "0", 
      "max": "1", 
      "type": "CapabilityStatement.Software",
      "isPrimitive": false }, 
    { 
    /*Identifies a specific implementation instance that is described by the capability statement - i.e. a particular installation, rather than the capabilities of a software program.
     */  "name": "implementation", 
    
      "min": "0", 
      "max": "1", 
      "type": "CapabilityStatement.Implementation",
      "isPrimitive": false }, 
    { 
    /*The version of the FHIR specification on which this capability statement is based.
     */  "name": "fhirVersion", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*A list of the formats supported by this implementation using their content types.
     */  "name": "format", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A list of the patch formats supported by this implementation using their content types.
     */  "name": "patchFormat", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A list of implementation guides that the server does (or should) support in their entirety.
     */  "name": "implementationGuide", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*A definition of the restful capabilities of the solution, if any.
     */  "name": "rest", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Rest",
      "isPrimitive": false }, 
    { 
    /*A description of the messaging capabilities of the solution.
     */  "name": "messaging", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Messaging",
      "isPrimitive": false }, 
    { 
    /*A document definition.
     */  "name": "document", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Document",
      "isPrimitive": false }, 
  ]
},
"CapabilityStatement.Software": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Software",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Name the software is known by.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The version identifier for the software covered by this statement.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Date this version of the software was released.
     */  "name": "releaseDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Implementation": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Implementation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Information about the specific installation that this capability statement relates to.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An absolute base URL for the implementation.  This forms the base for REST interfaces as well as the mailbox and document interfaces.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Rest": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Rest",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies whether this portion of the statement is describing the ability to initiate or receive restful operations.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "RestfulCapabilityMode",
      "isPrimitive": true }, 
    { 
    /*Information about the system's restful capabilities that apply across all applications, such as security.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Information about security implementation from an interface perspective - what a client needs to know.
     */  "name": "security", 
    
      "min": "0", 
      "max": "1", 
      "type": "CapabilityStatement.Security",
      "isPrimitive": false }, 
    { 
    /*A specification of the restful capabilities of the solution for a specific resource type.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Resource",
      "isPrimitive": false }, 
    { 
    /*A specification of restful operations supported by the system.
     */  "name": "interaction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Interaction1",
      "isPrimitive": false }, 
    { 
    /*Search parameters that are supported for searching all resources for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.
     */  "name": "searchParam", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.SearchParam",
      "isPrimitive": false }, 
    { 
    /*Definition of an operation or a named query together with its parameters and their meaning and type.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Operation",
      "isPrimitive": false }, 
    { 
    /*An absolute URI which is a reference to the definition of a compartment that the system supports. The reference is to a CompartmentDefinition resource by its canonical URL .
     */  "name": "compartment", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Security": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Security",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Server adds CORS headers when responding to requests - this enables Javascript applications to use the server.
     */  "name": "cors", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Types of security services that are supported/required by the system.
     */  "name": "service", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*General description of how security works.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Resource": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Resource",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A type of resource exposed via the restful interface.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*A specification of the profile that describes the solution's overall support for the resource, including any constraints on cardinality, bindings, lengths or other limitations. See further discussion in [Using Profiles](profiling.html#profile-uses).
     */  "name": "profile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*A list of profiles that represent different use cases supported by the system. For a server, "supported by the system" means the system hosts/produces a set of resources that are conformant to a particular profile, and allows clients that use its services to search using this profile and to find appropriate data. For a client, it means the system will search by this profile and process data according to the guidance implicit in the profile. See further discussion in [Using Profiles](profiling.html#profile-uses).
     */  "name": "supportedProfile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Additional information about the resource type used by the system.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Identifies a restful operation supported by the solution.
     */  "name": "interaction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Interaction",
      "isPrimitive": false }, 
    { 
    /*This field is set to no-version to specify that the system does not support (server) or use (client) versioning for this resource type. If this has some other value, the server must at least correctly track and populate the versionId meta-property on resources. If the value is 'versioned-update', then the server supports all the versioning features, including using e-tags for version integrity in the API.
     */  "name": "versioning", 
    
      "min": "0", 
      "max": "1", 
      "type": "ResourceVersionPolicy",
      "isPrimitive": true }, 
    { 
    /*A flag for whether the server is able to return past versions as part of the vRead operation.
     */  "name": "readHistory", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A flag to indicate that the server allows or needs to allow the client to create new identities on the server (that is, the client PUTs to a location where there is no existing resource). Allowing this operation means that the server allows the client to create new identities on the server.
     */  "name": "updateCreate", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A flag that indicates that the server supports conditional create.
     */  "name": "conditionalCreate", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A code that indicates how the server supports conditional read.
     */  "name": "conditionalRead", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConditionalReadStatus",
      "isPrimitive": true }, 
    { 
    /*A flag that indicates that the server supports conditional update.
     */  "name": "conditionalUpdate", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A code that indicates how the server supports conditional delete.
     */  "name": "conditionalDelete", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConditionalDeleteStatus",
      "isPrimitive": true }, 
    { 
    /*A set of flags that defines how references are supported.
     */  "name": "referencePolicy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ReferenceHandlingPolicy",
      "isPrimitive": true }, 
    { 
    /*A list of _include values supported by the server.
     */  "name": "searchInclude", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of _revinclude (reverse include) values supported by the server.
     */  "name": "searchRevInclude", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Search parameters for implementations to support and/or make use of - either references to ones defined in the specification, or additional ones defined for/by the implementation.
     */  "name": "searchParam", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.SearchParam",
      "isPrimitive": false }, 
    { 
    /*Definition of an operation or a named query together with its parameters and their meaning and type. Consult the definition of the operation for details about how to invoke the operation, and the parameters.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Operation",
      "isPrimitive": false }, 
  ]
},
"CapabilityStatement.Interaction": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Interaction",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Coded identifier of the operation, supported by the system resource.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "TypeRestfulInteraction",
      "isPrimitive": true }, 
    { 
    /*Guidance specific to the implementation of this operation, such as 'delete is a logical delete' or 'updates are only allowed with version id' or 'creates permitted from pre-authorized certificates only'.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.SearchParam": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.SearchParam",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of the search parameter used in the interface.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An absolute URI that is a formal reference to where this parameter was first defined, so that a client can be confident of the meaning of the search parameter (a reference to [[[SearchParameter.url]]]).
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The type of value a search parameter refers to, and how the content is interpreted.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "SearchParamType",
      "isPrimitive": true }, 
    { 
    /*This allows documentation of any distinct behaviors about how the search parameter is used.  For example, text matching algorithms.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Operation": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Operation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of the operation or query. For an operation, this is the name  prefixed with $ and used in the URL. For a query, this is the name used in the _query parameter when the query is called.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Where the formal definition can be found.
     */  "name": "definition", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Documentation that describes anything special about the operation behavior, possibly detailing different behavior for system, type and instance-level invocation of the operation.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Interaction1": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Interaction1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A coded identifier of the operation, supported by the system.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "SystemRestfulInteraction",
      "isPrimitive": true }, 
    { 
    /*Guidance specific to the implementation of this operation, such as limitations on the kind of transactions allowed, or information about system wide search is implemented.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Messaging": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Messaging",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An endpoint (network accessible address) to which messages and/or replies are to be sent.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.Endpoint",
      "isPrimitive": false }, 
    { 
    /*Length if the receiver's reliable messaging cache in minutes (if a receiver) or how long the cache length on the receiver should be (if a sender).
     */  "name": "reliableCache", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*Documentation about the system's messaging capabilities for this endpoint not otherwise documented by the capability statement.  For example, the process for becoming an authorized messaging exchange partner.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*References to message definitions for messages this system can send or receive.
     */  "name": "supportedMessage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CapabilityStatement.SupportedMessage",
      "isPrimitive": false }, 
  ]
},
"CapabilityStatement.Endpoint": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Endpoint",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A list of the messaging transport protocol(s) identifiers, supported by this endpoint.
     */  "name": "protocol", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The network address of the endpoint. For solutions that do not use network addresses for routing, it can be just an identifier.
     */  "name": "address", 
    
      "min": "1", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.SupportedMessage": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.SupportedMessage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The mode of this event declaration - whether application is sender or receiver.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "EventCapabilityMode",
      "isPrimitive": true }, 
    { 
    /*Points to a message definition that identifies the messaging event, message structure, allowed responses, etc.
     */  "name": "definition", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatement.Document": {
    /*A Capability Statement documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "CapabilityStatement.Document",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Mode of this document declaration - whether an application is a producer or consumer.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "DocumentMode",
      "isPrimitive": true }, 
    { 
    /*A description of how the application supports or uses the specified document profile.  For example, when documents are created, what action is taken with consumed documents, etc.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A profile on the document Bundle that constrains which resources are present, and their contents.
     */  "name": "profile", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"CapabilityStatementKind": {
    /*How a capability statement is intended to be used.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CapabilityStatementKind",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CapabilityStatementKind-list" }, 
  ],
  "elems": [
  ]
},
"EventCapabilityMode": {
    /*The mode of a message capability statement.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EventCapabilityMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EventCapabilityMode-list" }, 
  ],
  "elems": [
  ]
},
"ResourceVersionPolicy": {
    /*How the system supports versioning for a resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResourceVersionPolicy",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ResourceVersionPolicy-list" }, 
  ],
  "elems": [
  ]
},
"DocumentMode": {
    /*Whether the application produces or consumes documents.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DocumentMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DocumentMode-list" }, 
  ],
  "elems": [
  ]
},
"RestfulCapabilityMode": {
    /*The mode of a RESTful capability statement.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RestfulCapabilityMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "RestfulCapabilityMode-list" }, 
  ],
  "elems": [
  ]
},
"TypeRestfulInteraction": {
    /*Operations supported by REST at the type or instance level.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TypeRestfulInteraction",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TypeRestfulInteraction-list" }, 
  ],
  "elems": [
  ]
},
"SystemRestfulInteraction": {
    /*Operations supported by REST at the system level.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SystemRestfulInteraction",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SystemRestfulInteraction-list" }, 
  ],
  "elems": [
  ]
},
"ConditionalReadStatus": {
    /*A code that indicates how the server supports conditional read.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConditionalReadStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConditionalReadStatus-list" }, 
  ],
  "elems": [
  ]
},
"ReferenceHandlingPolicy": {
    /*A set of flags that defines how references are supported.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ReferenceHandlingPolicy",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ReferenceHandlingPolicy-list" }, 
  ],
  "elems": [
  ]
},
"ConditionalDeleteStatus": {
    /*A code that indicates how the server supports conditional delete.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConditionalDeleteStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConditionalDeleteStatus-list" }, 
  ],
  "elems": [
  ]
},
"CarePlan": {
    /*Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CarePlan",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this care plan by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Identifies the protocol, questionnaire, guideline or other specification the care plan should be conducted in accordance with.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A care plan that is fulfilled in whole or in part by this care plan.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Completed or terminated care plan whose function is taken by this new care plan.
     */  "name": "replaces", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger care plan of which this particular care plan is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "CarePlanStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates the level of authority/intentionality associated with the care plan and where the care plan fits into the workflow chain.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "CarePlanIntent",
      "isPrimitive": true }, 
    { 
    /*Identifies what "kind" of plan this is to support differentiation between multiple co-existing plans; e.g. "Home health", "psychiatric", "asthma", "disease management", "wellness plan", etc.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Human-friendly name for the care plan.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A description of the scope and nature of the plan.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the patient or group whose intended care is described by the plan.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the original context in which this particular care plan was created.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates when the plan did (or is intended to) come into effect and end.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Identifies the individual(s) or organization who is responsible for the content of the care plan.
     */  "name": "author", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies all people and organizations who are expected to be involved in the care envisioned by this plan.
     */  "name": "careTeam", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the conditions/problems/concerns/diagnoses/etc. whose management and/or mitigation are handled by this plan.
     */  "name": "addresses", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies portions of the patient's record that specifically influenced the formation of the plan.  These might include comorbidities, recent procedures, limitations, recent assessments, etc.
     */  "name": "supportingInfo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the intended objective(s) of carrying out the care plan.
     */  "name": "goal", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies a planned action to occur as part of the plan.  For example, a medication to be used, lab tests to perform, self-monitoring, education, etc.
     */  "name": "activity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CarePlan.Activity",
      "isPrimitive": false }, 
    { 
    /*General notes about the care plan not covered elsewhere.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"CarePlan.Activity": {
    /*Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
     */
  "name": "CarePlan.Activity",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies the outcome at the point when the status of the activity is assessed.  For example, the outcome of an education activity could be patient understands (or not).
     */  "name": "outcomeCodeableConcept", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Details of the outcome or action resulting from the activity.  The reference to an "event" resource, such as Procedure or Encounter or Observation, is the result/outcome of the activity itself.  The activity can be conveyed using CarePlan.activity.detail OR using the CarePlan.activity.reference (a reference to a “request” resource).
     */  "name": "outcomeReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Notes about the adherence/status/progress of the activity.
     */  "name": "progress", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*The details of the proposed activity represented in a specific resource.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A simple summary of a planned activity suitable for a general care plan system (e.g. form driven) that doesn't know about specific resources such as procedure etc.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "1", 
      "type": "CarePlan.Detail",
      "isPrimitive": false }, 
  ]
},
"CarePlan.Detail": {
    /*Describes the intention of how one or more practitioners intend to deliver care for a particular patient, group or community for a period of time, possibly limited to care for a specific condition or set of conditions.
     */
  "name": "CarePlan.Detail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A description of the kind of resource the in-line definition of a care plan activity is representing.  The CarePlan.activity.detail is an in-line definition when a resource is not referenced using CarePlan.activity.reference.  For example, a MedicationRequest, a ServiceRequest, or a CommunicationRequest.
     */  "name": "kind", 
    
      "min": "0", 
      "max": "1", 
      "type": "CarePlanActivityKind",
      "isPrimitive": true }, 
    { 
    /*Identifies the protocol, questionnaire, guideline or other specification the planned activity should be conducted in accordance with.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Detailed description of the type of planned activity; e.g. what lab test, what procedure, what kind of encounter.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Provides the rationale that drove the inclusion of this particular activity as part of the plan or the reason why the activity was prohibited.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource, such as the health condition(s), whose existence justifies this request and drove the inclusion of this particular activity as part of the plan.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Internal reference that identifies the goals that this activity is intended to contribute towards meeting.
     */  "name": "goal", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies what progress is being made for the specific activity.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "CarePlanActivityStatus",
      "isPrimitive": true }, 
    { 
    /*Provides reason why the activity isn't yet started, is on hold, was cancelled, etc.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*If true, indicates that the described activity is one that must NOT be engaged in when following the plan.  If false, or missing, indicates that the described activity is one that should be engaged in when following the plan.
     */  "name": "doNotPerform", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The period, timing or frequency upon which the described activity is to occur.
     */
        {   "name": "scheduledTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "scheduledPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "scheduledString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Identifies the facility where the activity will occur; e.g. home, hospital, specific clinic, etc.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies who's expected to be involved in the activity.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the food, drug or other product to be consumed or supplied in the activity.
     */
        {   "name": "productCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "productReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*Identifies the quantity expected to be consumed in a given day.
     */  "name": "dailyAmount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Identifies the quantity expected to be supplied, administered or consumed by the subject.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*This provides a textual description of constraints on the intended activity occurrence, including relation to other activities.  It may also include objectives, pre-conditions and end-conditions.  Finally, it may convey specifics about the activity such as body site, method, route, etc.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CarePlanActivityKind": {
    /*Resource types defined as part of FHIR that can be represented as in-line definitions of a care plan activity.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CarePlanActivityKind",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CarePlanActivityKind-list" }, 
  ],
  "elems": [
  ]
},
"CarePlanStatus": {
    /*Indicates whether the plan is currently being acted upon, represents future intentions or is now a historical record.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CarePlanStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CarePlanStatus-list" }, 
  ],
  "elems": [
  ]
},
"CarePlanActivityStatus": {
    /*Indicates where the activity is at in its overall life cycle.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CarePlanActivityStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CarePlanActivityStatus-list" }, 
  ],
  "elems": [
  ]
},
"CarePlanIntent": {
    /*Codes indicating the degree of authority/intentionality associated with a care planIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CarePlanIntent",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CarePlanIntent-list" }, 
  ],
  "elems": [
  ]
},
"CareTeam": {
    /*The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CareTeam",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this care team by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the current state of the care team.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "CareTeamStatus",
      "isPrimitive": true }, 
    { 
    /*Identifies what kind of team.  This is to support differentiation between multiple co-existing teams, such as care plan team, episode of care team, longitudinal care team.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A label for human use intended to distinguish like teams.  E.g. the "red" vs. "green" trauma teams.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the patient or group whose intended care is handled by the team.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care that establishes the context for this care team.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates when the team did (or is intended to) come into effect and end.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Identifies all people and organizations who are expected to be involved in the care team.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CareTeam.Participant",
      "isPrimitive": false }, 
    { 
    /*Describes why the care team exists.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Condition(s) that this care team addresses.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization responsible for the care team.
     */  "name": "managingOrganization", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A central contact detail for the care team (that applies to all members).
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Comments made about the CareTeam.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"CareTeam.Participant": {
    /*The Care Team includes all the people and organizations who plan to participate in the coordination and delivery of care for a patient.
     */
  "name": "CareTeam.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates specific responsibility of an individual within the care team, such as "Primary care physician", "Trained social worker counselor", "Caregiver", etc.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specific person or organization who is participating/expected to participate in the care team.
     */  "name": "member", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization of the practitioner.
     */  "name": "onBehalfOf", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates when the specific member or organization did (or is intended to) come into effect and end.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"CareTeamStatus": {
    /*Indicates the status of the care team.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CareTeamStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CareTeamStatus-list" }, 
  ],
  "elems": [
  ]
},
"ChargeItem": {
    /*The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ChargeItem",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this event performer or other systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*References the source of pricing information, rules of application for the code this ChargeItem uses.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The current state of the ChargeItem.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ChargeItemStatus",
      "isPrimitive": true }, 
    { 
    /*ChargeItems can be grouped to larger ChargeItems covering the whole set.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A code that identifies the charge, like a billing code.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The individual or set of individuals the action is being or was performed on.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care that establishes the context for this event.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Date/time(s) or duration when the charged service was applied.
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "occurrenceTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates who or what performed or participated in the charged service.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ChargeItem.Participant",
      "isPrimitive": false }, 
    { 
    /*The organization requesting the service.
     */  "name": "performingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization performing the service.
     */  "name": "requestingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The financial cost center permits the tracking of charge attribution.
     */  "name": "costCenter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Quantity of which the charge item has been serviced.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The anatomical location where the related service has been applied.
     */  "name": "bodysite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Factor overriding the factor determined by the rules associated with the code.
     */  "name": "factorOverride", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Total price of the charge overriding the list price associated with the code.
     */  "name": "priceOverride", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*If the list price or the rule based factor associated with the code is overridden, this attribute can capture a text to indicate the  reason for this action.
     */  "name": "overrideReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The device, practitioner, etc. who entered the charge item.
     */  "name": "enterer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date the charge item was entered.
     */  "name": "enteredDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Describes why the event occurred in coded or textual form.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicated the rendered service that caused this charge.
     */  "name": "service", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Account into which this ChargeItems belongs.
     */  "name": "account", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Comments made about the event by the performer, subject or other participants.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Further information supporting this charge.
     */  "name": "supportingInformation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ChargeItem.Participant": {
    /*The resource ChargeItem describes the provision of healthcare provider products for a certain patient, therefore referring not only to the product, but containing in addition details of the provision, like date, time, amounts and participating organizations and persons. Main Usage of the ChargeItem is to enable the billing process and internal cost allocation.
     */
  "name": "ChargeItem.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the type of performance or participation(e.g. primary surgeon, anaesthesiologiest, etc.).
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The device, practitioner, etc. who performed or participated in the service.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ChargeItemStatus": {
    /*Codes identifying the lifecycle stage of a ChargeItemIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ChargeItemStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ChargeItemStatus-list" }, 
  ],
  "elems": [
  ]
},
"Claim": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Claim",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The business identifier for the instance: claim number, pre-determination or pre-authorization number.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The category of claim, eg, oral, pharmacy, vision, insitutional, professional.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A finer grained suite of claim subtype codes which may convey Inpatient vs Outpatient and/or a specialty service. In the US the BillType.
     */  "name": "subType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Complete (Bill or Claim), Proposed (Pre-Authorization), Exploratory (Pre-determination).
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Use",
      "isPrimitive": true }, 
    { 
    /*Patient Resource.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The billable period for which charges are being submitted.
     */  "name": "billablePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The date when the enclosed suite of services were performed or completed.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Person who created the invoice/claim/pre-determination or pre-authorization.
     */  "name": "enterer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The Insurer who is target of the request.
     */  "name": "insurer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The provider which is responsible for the bill, claim pre-determination, pre-authorization.
     */  "name": "provider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Immediate (STAT), best effort (NORMAL), deferred (DEFER).
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*In the case of a Pre-Determination/Pre-Authorization the provider may request that funds in the amount of the expected Benefit be reserved ('Patient' or 'Provider') to pay for the Benefits determined on the subsequent claim(s). 'None' explicitly indicates no funds reserving is requested.
     */  "name": "fundsReserve", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Other claims which are related to this claim such as prior claim versions or for related services.
     */  "name": "related", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Related",
      "isPrimitive": false }, 
    { 
    /*Prescription to support the dispensing of Pharmacy or Vision products.
     */  "name": "prescription", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Original prescription which has been superceded by this prescription to support the dispensing of pharmacy services, medications or products. For example, a physician may prescribe a medication which the pharmacy determines is contraindicated, or for which the patient has an intolerance, and therefor issues a new precription for an alternate medication which has the same theraputic intent. The prescription from the pharmacy becomes the 'prescription' and that from the physician becomes the 'original prescription'.
     */  "name": "originalPrescription", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The party to be reimbursed for the services.
     */  "name": "payee", 
    
      "min": "0", 
      "max": "1", 
      "type": "Claim.Payee",
      "isPrimitive": false }, 
    { 
    /*The referral resource which lists the date, practitioner, reason and other supporting information.
     */  "name": "referral", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Facility where the services were provided.
     */  "name": "facility", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The members of the team who provided the overall service as well as their role and whether responsible and qualifications.
     */  "name": "careTeam", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.CareTeam",
      "isPrimitive": false }, 
    { 
    /*Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues. Often there are mutiple jurisdiction specific valuesets which are required.
     */  "name": "information", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Information",
      "isPrimitive": false }, 
    { 
    /*List of patient diagnosis for which care is sought.
     */  "name": "diagnosis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Diagnosis",
      "isPrimitive": false }, 
    { 
    /*Ordered list of patient procedures performed to support the adjudication.
     */  "name": "procedure", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Procedure",
      "isPrimitive": false }, 
    { 
    /*Financial instrument by which payment information for health care.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Insurance",
      "isPrimitive": false }, 
    { 
    /*An accident which resulted in the need for healthcare services.
     */  "name": "accident", 
    
      "min": "0", 
      "max": "1", 
      "type": "Claim.Accident",
      "isPrimitive": false }, 
    { 
    /*First tier of goods and services.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Item",
      "isPrimitive": false }, 
    { 
    /*The total value of the claim.
     */  "name": "total", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
  ]
},
"Claim.Related": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Related",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Other claims which are related to this claim such as prior claim versions or for related services.
     */  "name": "claim", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*For example prior or umbrella.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*An alternate organizational reference to the case or file to which this particular claim pertains - eg Property/Casualy insurer claim # or Workers Compensation case # .
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
  ]
},
"Claim.Payee": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Payee",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of Party to be reimbursed: Subscriber, provider, other.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*organization | patient | practitioner | relatedperson.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Party to be reimbursed: Subscriber, provider, other.
     */  "name": "party", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Claim.CareTeam": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.CareTeam",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of the careTeam which serves to order and provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Member of the team who provided the overall service.
     */  "name": "provider", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The party who is billing and responsible for the claimed good or service rendered to the patient.
     */  "name": "responsible", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The lead, assisting or supervising practitioner and their discipline if a multidisiplinary team.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The qualification which is applicable for this service.
     */  "name": "qualification", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Claim.Information": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Information",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of the information element which serves to provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The general class of the information supplied: information; exception; accident, employment; onset, etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought which may influence the adjudication.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date when or period to which this information refers.
     */
        {   "name": "timingDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "timingPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
     */
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*For example, provides the reason for: the additional stay, or missing tooth or any other situation where a reason code is required in addition to the content.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Claim.Diagnosis": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Diagnosis",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of diagnosis which serves to provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The diagnosis.
     */
        {   "name": "diagnosisCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "diagnosisReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The type of the Diagnosis, for example: admitting, primary, secondary, discharge.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The package billing code, for example DRG, based on the assigned grouping code system.
     */  "name": "packageCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Claim.Procedure": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Procedure",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of procedures which serves to order and provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Date and optionally time the procedure was performed .
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The procedure code.
     */
        {   "name": "procedureCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "procedureReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Claim.Insurance": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Insurance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of coverage which serves to provide a link and convey coordination of benefit order.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A flag to indicate that this Coverage is the focus for adjudication. The Coverage against which the claim is to be adjudicated.
     */  "name": "focal", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The business identifier for the instance: claim number, pre-determination or pre-authorization number.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Reference to the program or plan identification, underwriter or payor.
     */  "name": "coverage", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The contract number of a business agreement which describes the terms and conditions.
     */  "name": "businessArrangement", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of references from the Insurer to which these services pertain.
     */  "name": "preAuthRef", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The Coverages adjudication details.
     */  "name": "claimResponse", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Claim.Accident": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Accident",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Date of an accident which these services are addressing.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Type of accident: work, auto, etc.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Accident Place.
     */
        {   "name": "locationAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "locationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Claim.Item": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*CareTeam applicable for this service or product line.
     */  "name": "careTeamSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Diagnosis applicable for this service or product line.
     */  "name": "diagnosisSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Procedures applicable for this service or product line.
     */  "name": "procedureSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Exceptions, special conditions and supporting information pplicable for this service or product line.
     */  "name": "informationSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The type of reveneu or cost center providing the product and/or service.
     */  "name": "revenue", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Health Care Service Type Codes  to identify the classification of service or benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If this is an actual service or product line, ie. not a Group, then use code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,RXNorm,ACHI,CCI). If a grouping item then use a group code to indicate the type of thing being grouped eg. 'glasses' or 'compound'.
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*For programs which require reason codes for the inclusion or covering of this billed item under the program or sub-program.
     */  "name": "programCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date or dates when the enclosed suite of services were performed or completed.
     */
        {   "name": "servicedDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "servicedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Where the service was provided.
     */
        {   "name": "locationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "locationAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "locationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*If the item is a node then this is the fee for the product or service, otherwise this is the total of the fees for the children of the group.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The quantity times the unit price for an addittional service or product or charge. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of Unique Device Identifiers associated with this line item.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Physical service site on the patient (limb, tooth, etc.).
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A region or surface of the site, eg. limb region or tooth surface(s).
     */  "name": "subSite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A billed item may include goods or services provided in multiple encounters.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Second tier of goods and services.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.Detail",
      "isPrimitive": false }, 
  ]
},
"Claim.Detail": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.Detail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The type of reveneu or cost center providing the product and/or service.
     */  "name": "revenue", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Health Care Service Type Codes  to identify the classification of service or benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If this is an actual service or product line, ie. not a Group, then use code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI). If a grouping item then use a group code to indicate the type of thing being grouped eg. 'glasses' or 'compound'.
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*For programs which require reson codes for the inclusion, covering, of this billed item under the program or sub-program.
     */  "name": "programCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*If the item is a node then this is the fee for the product or service, otherwise this is the total of the fees for the children of the group.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The quantity times the unit price for an addittional service or product or charge. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of Unique Device Identifiers associated with this line item.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Third tier of goods and services.
     */  "name": "subDetail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Claim.SubDetail",
      "isPrimitive": false }, 
  ]
},
"Claim.SubDetail": {
    /*A provider issued list of services and products provided, or to be provided, to a patient which is provided to an insurer for payment recovery.
     */
  "name": "Claim.SubDetail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The type of reveneu or cost center providing the product and/or service.
     */  "name": "revenue", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Health Care Service Type Codes  to identify the classification of service or benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI).
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*For programs which require reson codes for the inclusion, covering, of this billed item under the program or sub-program.
     */  "name": "programCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The fee for an addittional service or product or charge.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The quantity times the unit price for an addittional service or product or charge. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of Unique Device Identifiers associated with this line item.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Use": {
    /*Complete, proposed, exploratory, otherIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Use",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "Use-list" }, 
  ],
  "elems": [
  ]
},
"FinancialResourceStatusCodes": {
    /*A code specifying the state of the resource instance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FinancialResourceStatusCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FinancialResourceStatusCodes-list" }, 
  ],
  "elems": [
  ]
},
"ClaimResponse": {
    /*This resource provides the adjudication details from the processing of a Claim resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ClaimResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The category of claim, eg, oral, pharmacy, vision, insitutional, professional.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A finer grained suite of claim subtype codes which may convey Inpatient vs Outpatient and/or a specialty service. In the US the BillType.
     */  "name": "subType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Complete (Bill or Claim), Proposed (Pre-Authorization), Exploratory (Pre-determination).
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Use",
      "isPrimitive": true }, 
    { 
    /*Patient Resource.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date when the enclosed suite of services were performed or completed.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The Insurer who produced this adjudicated response.
     */  "name": "insurer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "requestProvider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Original request resource referrence.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Transaction: error, complete, partial processing.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "ClaimProcessingCodes",
      "isPrimitive": true }, 
    { 
    /*A description of the status of the adjudication.
     */  "name": "disposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Party to be reimbursed: Subscriber, provider, other.
     */  "name": "payeeType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The first tier service adjudications for submitted services.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Item",
      "isPrimitive": false }, 
    { 
    /*The first tier service adjudications for payor added services.
     */  "name": "addItem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.AddItem",
      "isPrimitive": false }, 
    { 
    /*Mutually exclusive with Services Provided (Item).
     */  "name": "error", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Error",
      "isPrimitive": false }, 
    { 
    /*Totals for amounts submitted, co-pays, benefits payable etc.
     */  "name": "total", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Total",
      "isPrimitive": false }, 
    { 
    /*Payment details for the claim if the claim has been paid.
     */  "name": "payment", 
    
      "min": "0", 
      "max": "1", 
      "type": "ClaimResponse.Payment",
      "isPrimitive": false }, 
    { 
    /*Status of funds reservation (For provider, for Patient, None).
     */  "name": "reserved", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The form to be used for printing the content.
     */  "name": "form", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Note text.
     */  "name": "processNote", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.ProcessNote",
      "isPrimitive": false }, 
    { 
    /*Request for additional supporting or authorizing information, such as: documents, images or resources.
     */  "name": "communicationRequest", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Financial instrument by which payment information for health care.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Insurance",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.Item": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "itemSequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudication results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Adjudication",
      "isPrimitive": false }, 
    { 
    /*The second tier service adjudications for submitted services.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Detail",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.Adjudication": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Adjudication",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code indicating: Co-Pay, deductible, eligible, benefit, tax, etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Adjudication reason such as limit reached.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Monetary amount associated with the code.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A non-monetary value for example a percentage. Mutually exclusive to the amount element above.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"ClaimResponse.Detail": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Detail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "detailSequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Adjudication",
      "isPrimitive": false }, 
    { 
    /*The third tier service adjudications for submitted services.
     */  "name": "subDetail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.SubDetail",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.SubDetail": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.SubDetail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "subDetailSequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Adjudication",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.AddItem": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.AddItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*List of input service items which this service line is intended to replace.
     */  "name": "itemSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The sequence number of the addition within the line item submitted which contains the error. This value is omitted when the error is not related to an Addition.
     */  "name": "detailSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The sequence number of the addition within the line item submitted which contains the error. This value is omitted when the error is not related to an Addition.
     */  "name": "subdetailSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A code to indicate the Professional Service or Product supplied.
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The fee charged for the professional service or product..
     */  "name": "fee", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClaimResponse.Adjudication",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.Error": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Error",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The sequence number of the line item submitted which contains the error. This value is omitted when the error is elsewhere.
     */  "name": "itemSequence", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The sequence number of the addition within the line item submitted which contains the error. This value is omitted when the error is not related to an Addition.
     */  "name": "detailSequence", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The sequence number of the addition within the line item submitted which contains the error. This value is omitted when the error is not related to an Addition.
     */  "name": "subDetailSequence", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*An error code,from a specified code system, which details why the claim could not be adjudicated.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.Total": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Total",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code indicating: Submitted, Co-Pay, deductable, elegible, benefit, tax, etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Monitory amount associated with the code.
     */  "name": "amount", 
    
      "min": "1", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.Payment": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Payment",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether this represents partial or complete payment of the claim.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Adjustment to the payment of this transaction which is not related to adjudication of this transaction.
     */  "name": "adjustment", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Reason for the payment adjustment.
     */  "name": "adjustmentReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Estimated payment data.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Payable less any payment adjustment.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Payment identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.ProcessNote": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.ProcessNote",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An integer associated with each note which may be referred to from each service line item.
     */  "name": "number", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The note purpose: Print/Display.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "NoteType",
      "isPrimitive": true }, 
    { 
    /*The note text.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. "en" for English, or "en-US" for American English versus "en-EN" for England English.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ClaimResponse.Insurance": {
    /*This resource provides the adjudication details from the processing of a Claim resource.
     */
  "name": "ClaimResponse.Insurance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line item.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The instance number of the Coverage which is the focus for adjudication. The Coverage against which the claim is to be adjudicated.
     */  "name": "focal", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Reference to the program or plan identification, underwriter or payor.
     */  "name": "coverage", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The contract number of a business agreement which describes the terms and conditions.
     */  "name": "businessArrangement", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of references from the Insurer to which these services pertain.
     */  "name": "preAuthRef", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The Coverages adjudication details.
     */  "name": "claimResponse", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ClaimProcessingCodes": {
    /*The result of the claim processingIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ClaimProcessingCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ClaimProcessingCodes-list" }, 
  ],
  "elems": [
  ]
},
"ClinicalImpression": {
    /*A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ClinicalImpression",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this clinical impression by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Identifies the workflow status of the assessment.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ClinicalImpressionStatus",
      "isPrimitive": true }, 
    { 
    /*Categorizes the type of clinical assessment performed.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A summary of the context and/or cause of the assessment - why / where was it performed, and what patient events/status prompted it.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The patient or group of individuals assessed as part of this record.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care this impression was created as part of.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The point in time or period over which the subject was assessed.
     */
        {   "name": "effectiveDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "effectivePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates when the documentation of the assessment was complete.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The clinician performing the assessment.
     */  "name": "assessor", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A reference to the last assessment that was conducted on this patient. Assessments are often/usually ongoing in nature; a care provider (practitioner or team) will make new assessments on an ongoing basis as new data arises or the patient's conditions changes.
     */  "name": "previous", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*This a list of the relevant problems/conditions for a patient.
     */  "name": "problem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*One or more sets of investigations (signs, symptoms, etc.). The actual grouping of investigations varies greatly depending on the type and context of the assessment. These investigations may include data generated during the assessment process, or data previously generated and recorded that is pertinent to the outcomes.
     */  "name": "investigation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClinicalImpression.Investigation",
      "isPrimitive": false }, 
    { 
    /*Reference to a specific published clinical protocol that was followed during this assessment, and/or that provides evidence in support of the diagnosis.
     */  "name": "protocol", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A text summary of the investigations and the diagnosis.
     */  "name": "summary", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Specific findings or diagnoses that was considered likely or relevant to ongoing treatment.
     */  "name": "finding", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ClinicalImpression.Finding",
      "isPrimitive": false }, 
    { 
    /*Estimate of likely outcome.
     */  "name": "prognosisCodeableConcept", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*RiskAssessment expressing likely outcome.
     */  "name": "prognosisReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Action taken as part of assessment procedure.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Commentary about the impression, typically recorded after the impression itself was made, though supplemental notes by the original author could also appear.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"ClinicalImpression.Investigation": {
    /*A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.
     */
  "name": "ClinicalImpression.Investigation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A name/code for the group ("set") of investigations. Typically, this will be something like "signs", "symptoms", "clinical", "diagnostic", but the list is not constrained, and others such groups such as (exposure|family|travel|nutritional) history may be used.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A record of a specific investigation that was undertaken.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ClinicalImpression.Finding": {
    /*A record of a clinical assessment performed to determine what problem(s) may affect the patient and before planning the treatments or management strategies that are best to manage a patient's condition. Assessments are often 1:1 with a clinical consultation / encounter,  but this varies greatly depending on the clinical workflow. This resource is called "ClinicalImpression" rather than "ClinicalAssessment" to avoid confusion with the recording of assessment tools such as Apgar score.
     */
  "name": "ClinicalImpression.Finding",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Specific text or code for finding or diagnosis, which may include ruled-out or resolved conditions.
     */  "name": "itemCodeableConcept", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specific reference for finding or diagnosis, which may include ruled-out or resolved conditions.
     */  "name": "itemReference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Which investigations support finding or diagnosis.
     */  "name": "basis", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ClinicalImpressionStatus": {
    /*The workflow state of a clinical impression.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ClinicalImpressionStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ClinicalImpressionStatus-list" }, 
  ],
  "elems": [
  ]
},
"CodeSystem": {
    /*The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CodeSystem",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this code system when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this code system is (or will be) published. This is used in [Coding](datatypes.html#Coding).system.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this code system when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the code system when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the code system author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. This is used in [Coding](datatypes.html#Coding).version.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the code system. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the code system.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this code system. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this code system is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the code system was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the code system changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the code system.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the code system from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate code system instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the code system is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this code system is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the code system and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the code system.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*If code comparison is case sensitive when codes within this system are compared to each other.
     */  "name": "caseSensitive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Canonical URL of value set that contains the entire code system.
     */  "name": "valueSet", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The meaning of the hierarchy of concepts.
     */  "name": "hierarchyMeaning", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeSystemHierarchyMeaning",
      "isPrimitive": true }, 
    { 
    /*True If code system defines a post-composition grammar.
     */  "name": "compositional", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*This flag is used to signify that the code system has not (or does not) maintain the definitions, and a version must be specified when referencing this code system.
     */  "name": "versionNeeded", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*How much of the content of the code system - the concepts and codes it defines - are represented in this resource.
     */  "name": "content", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeSystemContentMode",
      "isPrimitive": true }, 
    { 
    /*References the code system that this code system supplement is adding designations and properties to.
     */  "name": "supplements", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The total number of concepts defined by the code system. Where the code system has a compositional grammar, the count refers to the number of base (primitive) concepts.
     */  "name": "count", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*A filter that can be used in a value set compose statement when selecting concepts using a filter.
     */  "name": "filter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeSystem.Filter",
      "isPrimitive": false }, 
    { 
    /*A property defines an additional slot through which additional information can be provided about a concept.
     */  "name": "property", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeSystem.Property",
      "isPrimitive": false }, 
    { 
    /*Concepts that are in the code system. The concept definitions are inherently hierarchical, but the definitions must be consulted to determine what the meaning of the hierarchical relationships are.
     */  "name": "concept", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeSystem.Concept",
      "isPrimitive": false }, 
  ]
},
"CodeSystem.Filter": {
    /*The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
     */
  "name": "CodeSystem.Filter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The code that identifies this filter when it is used in the instance.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A description of how or why the filter is used.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of operators that can be used with the filter.
     */  "name": "operator", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "FilterOperator",
      "isPrimitive": true }, 
    { 
    /*A description of what the value for the filter should be.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CodeSystem.Property": {
    /*The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
     */
  "name": "CodeSystem.Property",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that is used to identify the property. The code is used internally (in CodeSystem.concept.property.code) and also externally, such as in property filters.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Reference to the formal meaning of the property. One possible source of meaning is the [Concept Properties](codesystem-concept-properties.html) code system.
     */  "name": "uri", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A description of the property- why it is defined, and how its value might be used.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of the property value. Properties of type "code" contain a code defined by the code system (e.g. a reference to another defined concept).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "PropertyType",
      "isPrimitive": true }, 
  ]
},
"CodeSystem.Concept": {
    /*The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
     */
  "name": "CodeSystem.Concept",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code - a text symbol - that uniquely identifies the concept within the code system.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A human readable string that is the recommended default way to present this concept to a user.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The formal definition of the concept. The code system resource does not make formal definitions required, because of the prevalence of legacy systems. However, they are highly recommended, as without them there is no formal meaning associated with the concept.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional representations for the concept - other languages, aliases, specialized purposes, used for particular purposes, etc.
     */  "name": "designation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeSystem.Designation",
      "isPrimitive": false }, 
    { 
    /*A property value for this concept.
     */  "name": "property", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeSystem.Property1",
      "isPrimitive": false }, 
    { 
    /*Defines children of a concept to produce a hierarchy of concepts. The nature of the relationships is variable (is-a/contains/categorizes) - see hierarchyMeaning.
     */  "name": "concept", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeSystem.Concept",
      "isPrimitive": false }, 
  ]
},
"CodeSystem.Designation": {
    /*The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
     */
  "name": "CodeSystem.Designation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The language this designation is defined for.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A code that details how this designation would be used.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The text value for this designation.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CodeSystem.Property1": {
    /*The CodeSystem resource is used to declare the existence of and describe a code system or code system supplement and its key properties, and optionally define a part or all of its content.
     */
  "name": "CodeSystem.Property1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that is a reference to CodeSystem.property.code.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The value of this property.
     */
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
    ], 
  ]
},
"FilterOperator": {
    /*The kind of operation to perform as a part of a property based filter.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FilterOperator",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FilterOperator-list" }, 
  ],
  "elems": [
  ]
},
"PropertyType": {
    /*The type of a property valueIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PropertyType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "PropertyType-list" }, 
  ],
  "elems": [
  ]
},
"CodeSystemHierarchyMeaning": {
    /*The meaning of the hierarchy of concepts in a code systemIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CodeSystemHierarchyMeaning",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CodeSystemHierarchyMeaning-list" }, 
  ],
  "elems": [
  ]
},
"CodeSystemContentMode": {
    /*How much of the content of the code system - the concepts and codes it defines - are represented in a code system resourceIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CodeSystemContentMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CodeSystemContentMode-list" }, 
  ],
  "elems": [
  ]
},
"Communication": {
    /*An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency was notified about a reportable condition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Communication",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this communication by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A protocol, guideline, or other definition that was adhered to in whole or in part by this communication event.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*An order, proposal or plan fulfilled in whole or in part by this Communication.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Part of this action.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Prior communication that this communication is in response to.
     */  "name": "inResponseTo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The status of the transmission.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EventStatus",
      "isPrimitive": true }, 
    { 
    /*Captures the reason for the current state of the Communication.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of message conveyed such as alert, notification, reminder, instruction, etc.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Characterizes how quickly the planned or in progress communication must be addressed. Includes concepts such as stat, urgent, routine.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    { 
    /*A channel that was used for this communication (e.g. email, fax).
     */  "name": "medium", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient or group that was the focus of this communication.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The entity (e.g. person, organization, clinical information system, care team or device) which was the target of the communication. If receipts need to be tracked by individual, a separate resource instance will need to be created for each recipient.  Multiple recipient communications are intended where either a receipt(s) is not tracked (e.g. a mass mail-out) or is captured in aggregate (all emails confirmed received by a particular time).
     */  "name": "recipient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Description of the purpose/content, similar to a subject line in an email.
     */  "name": "topic", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Other resources that pertain to this communication and to which this communication should be associated.
     */  "name": "about", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter within which the communication was sent.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The time when this communication was sent.
     */  "name": "sent", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The time when this communication arrived at the destination.
     */  "name": "received", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The entity (e.g. person, organization, clinical information system, or device) which was the source of the communication.
     */  "name": "sender", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The reason or justification for the communication.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource whose existence justifies this communication.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Text, attachment(s), or resource(s) that was communicated to the recipient.
     */  "name": "payload", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Communication.Payload",
      "isPrimitive": false }, 
    { 
    /*Additional notes or commentary about the communication by the sender, receiver or other interested parties.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"Communication.Payload": {
    /*An occurrence of information being transmitted; e.g. an alert that was sent to a responsible provider, a public health agency was notified about a reportable condition.
     */
  "name": "Communication.Payload",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*A communicated content (or for multi-part communications, one portion of the communication).
     */
        {   "name": "contentString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "contentAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "contentReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"EventStatus": {
    /*The status of the communication.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EventStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EventStatus-list" }, 
  ],
  "elems": [
  ]
},
"RequestPriority": {
    /*Codes indicating the relative importance of a communication.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RequestPriority",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "RequestPriority-list" }, 
  ],
  "elems": [
  ]
},
"CommunicationRequest": {
    /*A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CommunicationRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this communication request by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A plan or proposal that is fulfilled in whole or in part by this request.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Completed or terminated request(s) whose function is taken by this new request.
     */  "name": "replaces", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.
     */  "name": "groupIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the proposal or order.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestStatus",
      "isPrimitive": true }, 
    { 
    /*The type of message to be sent such as alert, notification, reminder, instruction, etc.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Characterizes how quickly the proposed act must be initiated. Includes concepts such as stat, urgent, routine.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    { 
    /*A channel that was used for this communication (e.g. email, fax).
     */  "name": "medium", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient or group that is the focus of this communication request.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The entity (e.g. person, organization, clinical information system, device, group, or care team) which is the intended target of the communication.
     */  "name": "recipient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Other resources that pertain to this communication request and to which this communication request should be associated.
     */  "name": "about", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care within which the communication request was created.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Text, attachment(s), or resource(s) to be communicated to the recipient.
     */  "name": "payload", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CommunicationRequest.Payload",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The time when this communication is to occur.
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*For draft requests, indicates the date of initial creation.  For requests with other statuses, indicates the date of activation.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The device, individual, or organization who initiated the request and has responsibility for its activation.
     */  "name": "requester", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The entity (e.g. person, organization, clinical information system, or device) which is to be the source of the communication.
     */  "name": "sender", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes why the request is being made in coded or textual form.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource whose existence justifies this request.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Comments made about the request by the requester, sender, recipient, subject or other participants.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"CommunicationRequest.Payload": {
    /*A request to convey information; e.g. the CDS system proposes that an alert be sent to a responsible provider, the CDS system proposes that the public health agency be notified about a reportable condition.
     */
  "name": "CommunicationRequest.Payload",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The communicated content (or for multi-part communications, one portion of the communication).
     */
        {   "name": "contentString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "contentAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "contentReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"RequestStatus": {
    /*The status of the communication request.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RequestStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "RequestStatus-list" }, 
  ],
  "elems": [
  ]
},
"CompartmentDefinition": {
    /*A compartment definition that defines how resources are accessed on a server.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CompartmentDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this compartment definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this compartment definition is (or will be) published.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the compartment definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the compartment definition.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this compartment definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this compartment definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the compartment definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the compartment definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the compartment definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the compartment definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate compartment definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the compartment definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this compartment definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Which compartment this definition describes.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CompartmentType",
      "isPrimitive": true }, 
    { 
    /*Whether the search syntax is supported,.
     */  "name": "search", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Information about how a resource is related to the compartment.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CompartmentDefinition.Resource",
      "isPrimitive": false }, 
  ]
},
"CompartmentDefinition.Resource": {
    /*A compartment definition that defines how resources are accessed on a server.
     */
  "name": "CompartmentDefinition.Resource",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of a resource supported by the server.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*The name of a search parameter that represents the link to the compartment. More than one may be listed because a resource may be linked to a compartment in more than one way,.
     */  "name": "param", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional documentation about the resource and compartment.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"CompartmentType": {
    /*Which compartment a compartment definition describesIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CompartmentType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CompartmentType-list" }, 
  ],
  "elems": [
  ]
},
"Composition": {
    /*A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Composition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A version-independent identifier for the Composition. This identifier stays constant as the composition is changed over time.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The workflow/clinical status of this composition. The status is a marker for the clinical standing of the document.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "CompositionStatus",
      "isPrimitive": true }, 
    { 
    /*Specifies the particular kind of composition (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the composition.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A categorization for the type of the composition - helps for indexing and searching. This may be implied by or derived from the code specified in the Composition Type.
     */  "name": "class", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Who or what the composition is about. The composition can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of livestock, or a set of patients that share a common exposure).
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the clinical encounter or type of care this documentation is associated with.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The composition editing time, when the composition was last logically changed by the author.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Identifies who is responsible for the information in the composition, not necessarily who typed it in.
     */  "name": "author", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Official human-readable label for the composition.
     */  "name": "title", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The code specifying the level of confidentiality of the Composition.
     */  "name": "confidentiality", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConfidentialityClassification",
      "isPrimitive": true }, 
    { 
    /*A participant who has attested to the accuracy of the composition/document.
     */  "name": "attester", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Composition.Attester",
      "isPrimitive": false }, 
    { 
    /*Identifies the organization or group who is responsible for ongoing maintenance of and access to the composition/document information.
     */  "name": "custodian", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Relationships that this composition has with other compositions or documents that already exist.
     */  "name": "relatesTo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Composition.RelatesTo",
      "isPrimitive": false }, 
    { 
    /*The clinical service, such as a colonoscopy or an appendectomy, being documented.
     */  "name": "event", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Composition.Event",
      "isPrimitive": false }, 
    { 
    /*The root of the sections that make up the composition.
     */  "name": "section", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Composition.Section",
      "isPrimitive": false }, 
  ]
},
"Composition.Attester": {
    /*A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
     */
  "name": "Composition.Attester",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of attestation the authenticator offers.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "CompositionAttestationMode",
      "isPrimitive": true }, 
    { 
    /*When the composition was attested by the party.
     */  "name": "time", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Who attested the composition in the specified way.
     */  "name": "party", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Composition.RelatesTo": {
    /*A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
     */
  "name": "Composition.RelatesTo",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of relationship that this composition has with anther composition or document.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "DocumentRelationshipType",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The target composition/document of this relationship.
     */
        {   "name": "targetIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "targetReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Composition.Event": {
    /*A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
     */
  "name": "Composition.Event",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the typeCode, such as a "History and Physical Report" in which the procedure being documented is necessarily a "History and Physical" act.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The period of time covered by the documentation. There is no assertion that the documentation is a complete representation for this period, only that it documents events during this time.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The description and/or reference of the event(s) being documented. For example, this could be used to document such a colonoscopy or an appendectomy.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Composition.Section": {
    /*A set of healthcare-related information that is assembled together into a single logical package that provides a single coherent statement of meaning, establishes its own context and that has clinical attestation with regard to who is making the statement. A Composition defines the structure and narrative content necessary for a document. However, a Composition alone does not constitute a document. Rather, the Composition must be the first entry in a Bundle where Bundle.type=document, and any other resources referenced from Composition must be included as subsequent entries in the Bundle (for example Patient, Practitioner, Encounter, etc.).
     */
  "name": "Composition.Section",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The label for this particular section.  This will be part of the rendered content for the document, and is often used to build a table of contents.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A code identifying the kind of content contained within the section. This must be consistent with the section title.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies who is responsible for the information in this section, not necessarily who typed it in.
     */  "name": "author", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A human-readable narrative that contains the attested content of the section, used to represent the content of the resource to a human. The narrative need not encode all the structured data, but is required to contain sufficient detail to make it "clinically safe" for a human to just read the narrative.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "Narrative",
      "isPrimitive": false }, 
    { 
    /*How the entry list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.
     */  "name": "mode", 
    
      "min": "0", 
      "max": "1", 
      "type": "ListMode",
      "isPrimitive": true }, 
    { 
    /*Specifies the order applied to the items in the section entries.
     */  "name": "orderedBy", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A reference to the actual resource from which the narrative in the section is derived.
     */  "name": "entry", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*If the section is empty, why the list is empty. An empty section typically has some text explaining the empty reason.
     */  "name": "emptyReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A nested sub-section within this section.
     */  "name": "section", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Composition.Section",
      "isPrimitive": false }, 
  ]
},
"CompositionStatus": {
    /*The workflow/clinical status of the composition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CompositionStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CompositionStatus-list" }, 
  ],
  "elems": [
  ]
},
"ConfidentialityClassification": {
    /*Codes specifying the level of confidentiality of the composition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConfidentialityClassification",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConfidentialityClassification-list" }, 
  ],
  "elems": [
  ]
},
"DocumentRelationshipType": {
    /*The type of relationship between documents.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DocumentRelationshipType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DocumentRelationshipType-list" }, 
  ],
  "elems": [
  ]
},
"CompositionAttestationMode": {
    /*The way in which a person authenticated a composition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CompositionAttestationMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CompositionAttestationMode-list" }, 
  ],
  "elems": [
  ]
},
"ListMode": {
    /*The processing mode that applies to this section.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ListMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ListMode-list" }, 
  ],
  "elems": [
  ]
},
"ConceptMap": {
    /*A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConceptMap",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this concept map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this concept map is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this concept map when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the concept map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the concept map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the concept map. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the concept map.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this concept map. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this concept map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the concept map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the concept map changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the concept map.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the concept map from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate concept map instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the concept map is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this concept map is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the concept map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the concept map.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Identifier for the source value set that contains the concepts that are being mapped and provides context for the mappings.
     */
        {   "name": "sourceUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "sourceCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
    [ /* Choice */ 
    /*The target value set provides context for the mappings. Note that the mapping is made between concepts, not between value sets, but the value set provides important context about how the concept mapping choices are made.
     */
        {   "name": "targetUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "targetCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
    { 
    /*A group of mappings that all have the same source and target system.
     */  "name": "group", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ConceptMap.Group",
      "isPrimitive": false }, 
  ]
},
"ConceptMap.Group": {
    /*A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.
     */
  "name": "ConceptMap.Group",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that identifies the source system where the concepts to be mapped are defined.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The specific version of the code system, as determined by the code system authority.
     */  "name": "sourceVersion", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An absolute URI that identifies the target system that the concepts will be mapped to.
     */  "name": "target", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The specific version of the code system, as determined by the code system authority.
     */  "name": "targetVersion", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Mappings for an individual concept in the source to one or more concepts in the target.
     */  "name": "element", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ConceptMap.Element",
      "isPrimitive": false }, 
    { 
    /*What to do when there is no match for the source concept in the target system designated for the group and no mapping is able to be made.
     */  "name": "unmapped", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConceptMap.Unmapped",
      "isPrimitive": false }, 
  ]
},
"ConceptMap.Element": {
    /*A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.
     */
  "name": "ConceptMap.Element",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identity (code or path) or the element/item being mapped.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The display for the code. The display is only provided to help editors when editing the concept map.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A concept from the target value set that this concept maps to.
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ConceptMap.Target",
      "isPrimitive": false }, 
  ]
},
"ConceptMap.Target": {
    /*A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.
     */
  "name": "ConceptMap.Target",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identity (code or path) or the element/item that the map refers to.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The display for the code. The display is only provided to help editors when editing the concept map.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The equivalence between the source and target concepts (counting for the dependencies and products). The equivalence is read from target to source (e.g. the target is 'wider' than the source).
     */  "name": "equivalence", 
    
      "min": "1", 
      "max": "1", 
      "type": "ConceptMapEquivalence",
      "isPrimitive": true }, 
    { 
    /*A description of status/issues in mapping that conveys additional information not represented in  the structured data.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A set of additional dependencies for this mapping to hold. This mapping is only applicable if the specified element can be resolved, and it has the specified value.
     */  "name": "dependsOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ConceptMap.DependsOn",
      "isPrimitive": false }, 
    { 
    /*A set of additional outcomes from this mapping to other elements. To properly execute this mapping, the specified element must be mapped to some data element or source that is in context. The mapping may still be useful without a place for the additional data elements, but the equivalence cannot be relied on.
     */  "name": "product", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ConceptMap.DependsOn",
      "isPrimitive": false }, 
  ]
},
"ConceptMap.DependsOn": {
    /*A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.
     */
  "name": "ConceptMap.DependsOn",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A reference to an element that holds a coded value that corresponds to a code system property. The idea is that the information model carries an element somwhere that is labeled to correspond with a code system property.
     */  "name": "property", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*An absolute URI that identifies the code system of the dependency code (if the source/dependency is a value set that crosses code systems).
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Identity (code or path) or the element/item/ValueSet/text that the map depends on / refers to.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The display for the code. The display is only provided to help editors when editing the concept map.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ConceptMap.Unmapped": {
    /*A statement of relationships from one set of concepts to one or more other concepts - either code systems or data elements, or classes in class models.
     */
  "name": "ConceptMap.Unmapped",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Defines which action to take if there is no match for the source concept in the target system designated for the group. One of 3 actions is possible: use the unmapped code (this is useful when doing a mapping between versions, and only a few codes have changed), use a fixed code (a default code), or alternatively, a reference to a different concept map can be provided (by canonical URL).
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "ConceptMapGroupUnmappedMode",
      "isPrimitive": true }, 
    { 
    /*The fixed code to use when the mode = 'fixed'  - all unmapped codes are mapped to a single fixed code.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The display for the code. The display is only provided to help editors when editing the concept map.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The canonical URI of an additional ConceptMap resource instance to use for mapping if this ConceptMap resource contains no suitable matching concept in the target system that the source concept can be mapped to.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"ConceptMapGroupUnmappedMode": {
    /*Defines which action to take if there is no match in the group.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConceptMapGroupUnmappedMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConceptMapGroupUnmappedMode-list" }, 
  ],
  "elems": [
  ]
},
"Condition": {
    /*A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Condition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this condition by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The clinical status of the condition.
     */  "name": "clinicalStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConditionClinicalStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The verification status to support the clinical status of the condition.
     */  "name": "verificationStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConditionVerificationStatus",
      "isPrimitive": true }, 
    { 
    /*A category assigned to the condition.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A subjective assessment of the severity of the condition as evaluated by the clinician.
     */  "name": "severity", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identification of the condition, problem or diagnosis.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The anatomical location where this condition manifests itself.
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the patient or group who the condition record is associated with.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Encounter during which the condition was first asserted.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Estimated or actual date or date-time  the condition began, in the opinion of the clinician.
     */
        {   "name": "onsetDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "onsetAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "onsetPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "onsetRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "onsetString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    [ /* Choice */ 
    /*The date or estimated date that the condition resolved or went into remission. This is called "abatement" because of the many overloaded connotations associated with "remission" or "resolution" - Conditions are never really resolved, but they can abate.
     */
        {   "name": "abatementDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "abatementAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "abatementPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "abatementRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "abatementString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*The date on which the existence of the Condition was first asserted or acknowledged.
     */  "name": "assertedDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Individual who recorded the record and takes responsibility for its content.
     */  "name": "recorder", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Individual who is making the condition statement.
     */  "name": "asserter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Clinical stage or grade of a condition. May include formal severity assessments.
     */  "name": "stage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Condition.Stage",
      "isPrimitive": false }, 
    { 
    /*Supporting evidence / manifestations that are the basis of the Condition's verification status, such as evidence that confirmed or refuted the condition.
     */  "name": "evidence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Condition.Evidence",
      "isPrimitive": false }, 
    { 
    /*Additional information about the Condition. This is a general notes/comments entry  for description of the Condition, its diagnosis and prognosis.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"Condition.Stage": {
    /*A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.
     */
  "name": "Condition.Stage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A simple summary of the stage such as "Stage 3". The determination of the stage is disease-specific.
     */  "name": "summary", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Reference to a formal record of the evidence on which the staging assessment is based.
     */  "name": "assessment", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The kind of staging, such as pathological or clinical staging.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Condition.Evidence": {
    /*A clinical condition, problem, diagnosis, or other event, situation, issue, or clinical concept that has risen to a level of concern.
     */
  "name": "Condition.Evidence",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A manifestation or symptom that led to the recording of this condition.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Links to other relevant information, including pathology reports.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ConditionVerificationStatus": {
    /*The verification status to support or decline the clinical status of the condition or diagnosis.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConditionVerificationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConditionVerificationStatus-list" }, 
  ],
  "elems": [
  ]
},
"ConditionClinicalStatusCodes": {
    /*The clinical status of the condition or diagnosis.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConditionClinicalStatusCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConditionClinicalStatusCodes-list" }, 
  ],
  "elems": [
  ]
},
"Consent": {
    /*A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Consent",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier for this copy of the Consent Statement.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the current state of this consent.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EventStatus",
      "isPrimitive": true }, 
    { 
    /*A selector of the type of consent being presented: ADR, Privacy, Treatment, Research.  This list is now extensible.
     */  "name": "scope", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A classification of the type of consents found in the statement. This element supports indexing and retrieval of consent statements.
     */  "name": "category", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient/healthcare consumer to whom this consent applies.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*When this  Consent was issued / created / indexed.
     */  "name": "dateTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Either the Grantor, which is the entity responsible for granting the rights listed in a Consent Directive or the Grantee, which is the entity responsible for complying with the Consent Directive, including any obligations or limitations on authorizations and enforcement of prohibitions.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization that manages the consent, and the framework within which it is executed.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The source on which this consent statement is based. The source might be a scanned original paper form, or a reference to a consent that links back to such a source, a reference to a document repository (e.g. XDS) that stores the original consent document.
     */
        {   "name": "sourceAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "sourceIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "sourceReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.
     */  "name": "policy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Consent.Policy",
      "isPrimitive": false }, 
    { 
    /*A reference to the specific base computable regulation or policy.
     */  "name": "policyRule", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether a treatment instruction (e.g. artificial respiration yes or no) was verified with the patient, his/her family or another authorized person.
     */  "name": "verification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Consent.Verification",
      "isPrimitive": false }, 
    { 
    /*An exception to the base policy of this consent. An exception can be an addition or removal of access permissions.
     */  "name": "provision", 
    
      "min": "0", 
      "max": "1", 
      "type": "Consent.Provision",
      "isPrimitive": false }, 
  ]
},
"Consent.Policy": {
    /*A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
     */
  "name": "Consent.Policy",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Entity or Organization having regulatory jurisdiction or accountability for  enforcing policies pertaining to Consent Directives.
     */  "name": "authority", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The references to the policies that are included in this consent scope. Policies may be organizational, but are often defined jurisdictionally, or in law.
     */  "name": "uri", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
  ]
},
"Consent.Verification": {
    /*A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
     */
  "name": "Consent.Verification",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Has the instruction been verified.
     */  "name": "verified", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Who verified the instruction (Patient, Relative or other Authorized Person).
     */  "name": "verifiedWith", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date verification was collected.
     */  "name": "verificationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"Consent.Provision": {
    /*A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
     */
  "name": "Consent.Provision",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Action  to take - permit or deny - when the rule conditions are met.  Not permitted in root rule, required in all nested rules.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "ConsentProvisionType",
      "isPrimitive": true }, 
    { 
    /*The timeframe in this rule is valid.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Who or what is controlled by this rule. Use group to identify a set of actors by some property they share (e.g. 'admitting officers').
     */  "name": "actor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Consent.Actor",
      "isPrimitive": false }, 
    { 
    /*Actions controlled by this Rule.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A security label, comprised of 0..* security label fields (Privacy tags), which define which resources are controlled by this exception.
     */  "name": "securityLabel", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The context of the activities a user is taking - why the user is accessing the data - that are controlled by this rule.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The class of information covered by this rule. The type can be a FHIR resource type, a profile on a type, or a CDA document, or some other type that indicates what sort of information the consent relates to.
     */  "name": "class", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*If this code is found in an instance, then the rule applies.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Clinical or Operational Relevant period of time that bounds the data controlled by this rule.
     */  "name": "dataPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The resources controlled by this rule if specific resources are referenced.
     */  "name": "data", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Consent.Data",
      "isPrimitive": false }, 
    { 
    /*Rules which provide exceptions to the base rule or subrules.
     */  "name": "provision", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Consent.Provision",
      "isPrimitive": false }, 
  ]
},
"Consent.Actor": {
    /*A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
     */
  "name": "Consent.Actor",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*How the individual is involved in the resources content that is described in the exception.
     */  "name": "role", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The resource that identifies the actor. To identify actors by type, use group to identify a set of actors by some property they share (e.g. 'admitting officers').
     */  "name": "reference", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Consent.Data": {
    /*A record of a healthcare consumer’s  choices, which permits or denies identified recipient(s) or recipient role(s) to perform one or more actions within a given policy context, for specific purposes and periods of time.
     */
  "name": "Consent.Data",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*How the resource reference is interpreted when testing consent restrictions.
     */  "name": "meaning", 
    
      "min": "1", 
      "max": "1", 
      "type": "ConsentDataMeaning",
      "isPrimitive": true }, 
    { 
    /*A reference to a specific resource that defines which resources are covered by this consent.
     */  "name": "reference", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ConsentProvisionType": {
    /*How a rule statement is applied, such as adding additional consent or removing consentIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConsentProvisionType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConsentProvisionType-list" }, 
  ],
  "elems": [
  ]
},
"ConsentDataMeaning": {
    /*How a resource reference is interpreted when testing consent restrictionsIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ConsentDataMeaning",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ConsentDataMeaning-list" }, 
  ],
  "elems": [
  ]
},
"Contract": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Contract",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier for this Contract or a derivative that references a Source Contract.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "ContractResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The minimal content derived from the basal information source at a specific stage in its lifecycle.
     */  "name": "contentDerivative", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*When this  Contract was issued.
     */  "name": "issued", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Relevant time or time-period when this Contract is applicable.
     */  "name": "applies", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The target entity impacted by or of interest to parties to the agreement.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A formally or informally recognized grouping of people, principals, organizations, or jurisdictions formed for the purpose of achieving some form of collective action such as the promulgation, administration and enforcement of contracts and policies.
     */  "name": "authority", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Recognized governance framework or system operating with a circumscribed scope in accordance with specified principles, policies, processes or procedures for managing rights, actions, or behaviors of parties or principals relative to resources.
     */  "name": "domain", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Type of Contract such as an insurance policy, real estate contract, a will, power of attorny, Privacy or Security policy , trust framework agreement, etc.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*More specific type or specialization of an overarching or more general contract such as auto insurance, home owner  insurance, prenupial agreement, Advanced-Directive, or privacy consent.
     */  "name": "subType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*One or more Contract Provisions, which may be related and conveyed as a group, and may contain nested groups.
     */  "name": "term", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Term",
      "isPrimitive": false }, 
    { 
    /*Parties with legal standing in the Contract, including the principal parties, the grantor(s) and grantee(s), which are any person or organization bound by the contract, and any ancillary parties, which facilitate the execution of the contract such as a notary or witness.
     */  "name": "signer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Signer",
      "isPrimitive": false }, 
    { 
    /*The "patient friendly language" versionof the Contract in whole or in parts. "Patient friendly language" means the representation of the Contract and Contract Provisions in a manner that is readily accessible and understandable by a layperson in accordance with best practices for communication styles that ensure that those agreeing to or signing the Contract understand the roles, actions, obligations, responsibilities, and implication of the agreement.
     */  "name": "friendly", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Friendly",
      "isPrimitive": false }, 
    { 
    /*List of Legal expressions or representations of this Contract.
     */  "name": "legal", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Legal",
      "isPrimitive": false }, 
    { 
    /*List of Computable Policy Rule Language Representations of this Contract.
     */  "name": "rule", 
    
      "min": "0", 
      "max": "1", 
      "type": "Contract.Rule",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Legally binding Contract: This is the signed and legally recognized representation of the Contract, which is considered the "source of truth" and which would be the basis for legal action related to enforcement of this Contract.
     */
        {   "name": "legallyBindingAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "legallyBindingReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Contract.Term": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Term",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier for this particular Contract Provision.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*When this Contract Provision was issued.
     */  "name": "issued", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Relevant time or time-period when this Contract Provision is applicable.
     */  "name": "applies", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Subtype of this Contract Provision, e.g. life time maximum payment for a contract term for specific valued item, e.g. disability payment.
     */  "name": "subType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The matter of concern in the context of this provision of the agrement.
     */  "name": "offer", 
    
      "min": "1", 
      "max": "1", 
      "type": "Contract.Offer",
      "isPrimitive": false }, 
    { 
    /*Contract Term Asset List.
     */  "name": "asset", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Asset",
      "isPrimitive": false }, 
    { 
    /*An actor taking a role in an activity for which it can be assigned some degree of responsibility for the activity taking place.
     */  "name": "agent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Agent",
      "isPrimitive": false }, 
    { 
    /*Action stipulated by this Contract Provision.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Reason or purpose for the action stipulated by this Contract Provision.
     */  "name": "actionReason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Nested group of Contract Provisions.
     */  "name": "group", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Term",
      "isPrimitive": false }, 
  ]
},
"Contract.Offer": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Offer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The owner of an asset has the residual control rights over the asset: the right to decide all usages of the asset in any way not inconsistent with a prior contract, custom, or law (Hart, 1995, p. 30).
     */  "name": "topic", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Type of Contract Provision such as specific requirements, purposes for actions, obligations, prohibitions, e.g. life time maximum benefit.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of decision made by a grantor with respect to an offer made by a grantee.
     */  "name": "decision", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Human readable form of this Contract Offer.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The id of the clause or question text of the offer in the referenced questionnaire/response.
     */  "name": "linkId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Contract.Asset": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Asset",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Categorization of the type of asset.
     */  "name": "class", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Code in the content.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Time period of the asset.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Time period of the data for the asset.
     */  "name": "dataPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Data defined by this Asset.
     */  "name": "data", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.Data",
      "isPrimitive": false }, 
    { 
    /*Contract Valued Item List.
     */  "name": "valuedItem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contract.ValuedItem",
      "isPrimitive": false }, 
    { 
    /*A set of security labels that define which terms are controlled by this condition.
     */  "name": "securityLabel", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"Contract.Data": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Data",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*instance | related | dependents | authoredby.
     */  "name": "meaning", 
    
      "min": "0", 
      "max": "1", 
      "type": "ContractDataMeaning",
      "isPrimitive": true }, 
    { 
    /*The actual data reference.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Contract.ValuedItem": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.ValuedItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Specific type of Contract Valued Item that may be priced.
     */
        {   "name": "entityCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "entityReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*Identifies a Contract Valued Item instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the time during which this Contract ValuedItem information is effective.
     */  "name": "effectiveTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Specifies the units by which the Contract Valued Item is measured or counted, and quantifies the countable or measurable Contract Valued Item instances.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*A Contract Valued Item unit valuation measure.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of the Contract Valued Item delivered. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*An amount that expresses the weighting (based on difficulty, cost and/or resource intensiveness) associated with the Contract Valued Item delivered. The concept of Points allows for assignment of point values for a Contract Valued Item, such that a monetary amount can be assigned to each point.
     */  "name": "points", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Expresses the product of the Contract Valued Item unitQuantity and the unitPriceAmt. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
  ]
},
"Contract.Agent": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Agent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Who or what parties are assigned roles in this Contract.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Role type of agent assigned roles in this Contract.
     */  "name": "role", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Contract.Signer": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Signer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Role of this Contract signer, e.g. notary, grantee.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Party which is a signator to this Contract.
     */  "name": "party", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Legally binding Contract DSIG signature contents in Base64.
     */  "name": "signature", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Signature",
      "isPrimitive": false }, 
  ]
},
"Contract.Friendly": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Friendly",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Human readable rendering of this Contract in a format and representation intended to enhance comprehension and ensure understandability.
     */
        {   "name": "contentAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "contentReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Contract.Legal": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Legal",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Contract legal text in human renderable form.
     */
        {   "name": "contentAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "contentReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Contract.Rule": {
    /*A formal agreement between parties regarding the conduct of business, exchange of information or other matters.
     */
  "name": "Contract.Rule",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Computable Contract conveyed using a policy rule language (e.g. XACML, DKAL, SecPal).
     */
        {   "name": "contentAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "contentReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"ContractDataMeaning": {
    /*How a resource reference is interpreted when evaluating contract offersIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ContractDataMeaning",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ContractDataMeaning-list" }, 
  ],
  "elems": [
  ]
},
"ContractResourceStatusCodes": {
    /*A code specifying the state of the resource instance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ContractResourceStatusCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ContractResourceStatusCodes-list" }, 
  ],
  "elems": [
  ]
},
"Coverage": {
    /*Financial instrument which may be used to reimburse or pay for health care products and services.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Coverage",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The main (and possibly only) identifier for the coverage - often referred to as a Member Id, Certificate number, Personal Health Number or Case ID. May be constructed as the concatination of the Coverage.SubscriberID and the Coverage.dependant.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The type of coverage: social program, medical plan, accident coverage (workers compensation, auto), group health or payment by an individual or organization.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The party who 'owns' the insurance policy,  may be an individual, corporation or the subscriber's employer.
     */  "name": "policyHolder", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The party who has signed-up for or 'owns' the contractual relationship to the policy or to whom the benefit of the policy for services rendered to them or their family is due.
     */  "name": "subscriber", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The insurer assigned ID for the Subscriber.
     */  "name": "subscriberId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The party who benefits from the insurance coverage., the patient when services are provided.
     */  "name": "beneficiary", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A unique identifier for a dependent under the coverage.
     */  "name": "dependent", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The relationship of beneficiary (patient) to the subscriber.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Time period during which the coverage is in force. A missing start date indicates the start date isn't known, a missing end date means the coverage is continuing to be in force.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The program or plan underwriter or payor including both insurance and non-insurance agreements, such as patient-pay agreements. May provide multiple identifiers such as insurance company identifier or business identifier (BIN number).
     */  "name": "payor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A suite of underwrite specific classifiers, for example may be used to identify a class of coverage or employer group, Policy, Plan.
     */  "name": "class", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coverage.Class",
      "isPrimitive": false }, 
    { 
    /*The order of applicability of this coverage relative to other coverages which are currently inforce. Note, there may be gaps in the numbering and this does not imply primary, secondard etc. as the specific positioning of coverages depends upon the episode of care.
     */  "name": "order", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The insurer-specific identifier for the insurer-defined network of providers to which the beneficiary may seek treatment which will be covered at the 'in-network' rate, otherwise 'out of network' terms and conditions apply.
     */  "name": "network", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A suite of underwrite specific classifiers, for example may be used to identify a class of coverage or employer group, Policy, Plan.
     */  "name": "copay", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coverage.Copay",
      "isPrimitive": false }, 
    { 
    /*The policy(s) which constitute this insurance coverage.
     */  "name": "contract", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Coverage.Class": {
    /*Financial instrument which may be used to reimburse or pay for health care products and services.
     */
  "name": "Coverage.Class",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of classification for which an insurer-specific class tag or number and optional name is provided, for example may be used to identify a class of coverage or employer group, Policy, Plan.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*For example the Group or Plan number.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short description for the class.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Coverage.Copay": {
    /*Financial instrument which may be used to reimburse or pay for health care products and services.
     */
  "name": "Coverage.Copay",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Types of products or services such as visit, specialist vists, emergency, inpatient care, etc.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The amount of patient payments for various types of services/products, expressed as a percentage of the service/product cost or a fixed amount of currency,.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"DetectedIssue": {
    /*Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DetectedIssue",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifier associated with the detected issue record.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the status of the detected issue.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ObservationStatus",
      "isPrimitive": true }, 
    { 
    /*Identifies the general type of issue identified.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the degree of importance associated with the identified issue based on the potential impact on the patient.
     */  "name": "severity", 
    
      "min": "0", 
      "max": "1", 
      "type": "DetectedIssueSeverity",
      "isPrimitive": true }, 
    { 
    /*Indicates the patient whose record the detected issue is associated with.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date or date-time when the detected issue was initially identified.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Individual or device responsible for the issue being raised.  For example, a decision support application or a pharmacist conducting a medication review.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the resource representing the current activity or proposed activity that is potentially problematic.
     */  "name": "implicated", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A textual explanation of the detected issue.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The literature, knowledge-base or similar reference that describes the propensity for the detected issue identified.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Indicates an action that has been taken or is committed to reduce or eliminate the likelihood of the risk identified by the detected issue from manifesting.  Can also reflect an observation of known mitigating factors that may reduce/eliminate the need for any action.
     */  "name": "mitigation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DetectedIssue.Mitigation",
      "isPrimitive": false }, 
  ]
},
"DetectedIssue.Mitigation": {
    /*Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, Ineffective treatment frequency, Procedure-condition conflict, etc.
     */
  "name": "DetectedIssue.Mitigation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the action that was taken or the observation that was made that reduces/eliminates the risk associated with the identified issue.
     */  "name": "action", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates when the mitigating action was documented.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Identifies the practitioner who determined the mitigation and takes responsibility for the mitigation step occurring.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ObservationStatus": {
    /*Indicates the status of the identified issueIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ObservationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ObservationStatus-list" }, 
  ],
  "elems": [
  ]
},
"DetectedIssueSeverity": {
    /*Indicates the potential degree of impact of the identified issue on the patient.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DetectedIssueSeverity",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DetectedIssueSeverity-list" }, 
  ],
  "elems": [
  ]
},
"Device": {
    /*This resource identifies an instance or a type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.  Medical devices include durable (reusable) medical equipment, implantable devices, as well as disposable equipment used for diagnostic, treatment, and research for healthcare and public health.  Non-medical devices may include items such as a machine, cellphone, computer, application, etc.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Device",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique instance identifiers assigned to a device by manufacturers other organizations or owners.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*[Unique device identifier (UDI)](device.html#udi) assigned to device label or package.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "1", 
      "type": "Device.Udi",
      "isPrimitive": false }, 
    { 
    /*Status of the Device availability.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FHIRDeviceStatus",
      "isPrimitive": true }, 
    { 
    /*Code or identifier to identify a kind of device.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Lot number assigned by the manufacturer.
     */  "name": "lotNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A name of the manufacturer.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The date and time when the device was manufactured.
     */  "name": "manufactureDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The date and time beyond which this device is no longer valid or should not be used (if applicable).
     */  "name": "expirationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The "model" is an identifier assigned by the manufacturer to identify the product by its type. This number is shared by the all devices sold as the same type.
     */  "name": "model", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The version of the device, if the device has multiple releases under the same model, or if the device is software or carries firmware.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Patient information, If the device is affixed to a person.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An organization that is responsible for the provision and ongoing maintenance of the device.
     */  "name": "owner", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact details for an organization or a particular human that is responsible for the device.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*The place where the device can be found.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A network address on which the device may be contacted directly.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Descriptive information, usage information or implantation information that is not captured in an existing element.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Provides additional safety characteristics about a medical device.  For example devices containing latex.
     */  "name": "safety", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Device.Udi": {
    /*This resource identifies an instance or a type of a manufactured item that is used in the provision of healthcare without being substantially changed through that activity. The device may be a medical or non-medical device.  Medical devices include durable (reusable) medical equipment, implantable devices, as well as disposable equipment used for diagnostic, treatment, and research for healthcare and public health.  Non-medical devices may include items such as a machine, cellphone, computer, application, etc.
     */
  "name": "Device.Udi",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The device identifier (DI) is a mandatory, fixed portion of a UDI that identifies the labeler and the specific version or model of a device.
     */  "name": "deviceIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Name of device as used in labeling or catalog.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The identity of the authoritative source for UDI generation within a  jurisdiction.  All UDIs are globally unique within a single namespace with the appropriate repository uri as the system.  For example,  UDIs of devices managed in the U.S. by the FDA, the value is  http://hl7.org/fhir/NamingSystem/fda-udi.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The full UDI carrier as the human readable form (HRF) representation of the barcode string as printed on the packaging of the device.
     */  "name": "carrierHRF", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The full UDI carrier of the Automatic Identification and Data Capture (AIDC) technology representation of the barcode string as printed on the packaging of the device - e.g., a barcode or RFID.   Because of limitations on character sets in XML and the need to round-trip JSON data through XML, AIDC Formats *SHALL* be base64 encoded.
     */  "name": "carrierAIDC", 
    
      "min": "0", 
      "max": "1", 
      "type": "base64Binary",
      "isPrimitive": true }, 
    { 
    /*Organization that is charged with issuing UDIs for devices.  For example, the US FDA issuers include :
1) GS1: 
http://hl7.org/fhir/NamingSystem/gs1-di, 
2) HIBCC:
http://hl7.org/fhir/NamingSystem/hibcc-dI, 
3) ICCBBA for blood containers:
http://hl7.org/fhir/NamingSystem/iccbba-blood-di, 
4) ICCBA for other devices:
http://hl7.org/fhir/NamingSystem/iccbba-other-di.
     */  "name": "issuer", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A coded entry to indicate how the data was entered.
     */  "name": "entryType", 
    
      "min": "0", 
      "max": "1", 
      "type": "UDIEntryType",
      "isPrimitive": true }, 
  ]
},
"FHIRDeviceStatus": {
    /*The availability status of the device.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FHIRDeviceStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FHIRDeviceStatus-list" }, 
  ],
  "elems": [
  ]
},
"UDIEntryType": {
    /*Codes to identify how UDI data was enteredIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "UDIEntryType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "UDIEntryType-list" }, 
  ],
  "elems": [
  ]
},
"DeviceComponent": {
    /*The characteristics, operational status and capabilities of a medical-related component of a medical device.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceComponent",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique instance identifiers assigned to a device by the software, manufacturers, other organizations or owners. For example: handle ID.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The component type as defined in the object-oriented or metric nomenclature partition.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The timestamp for the most recent system change which includes device configuration or setting change.
     */  "name": "lastSystemChange", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*The link to the source Device that contains administrative device information such as manufacture, serial number, etc.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The link to the parent resource. For example: Channel is linked to its VMD parent.
     */  "name": "parent", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The current operational status of the device. For example: On, Off, Standby, etc.
     */  "name": "operationalStatus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The parameter group supported by the current device component that is based on some nomenclature, e.g. cardiovascular.
     */  "name": "parameterGroup", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The physical principle of the measurement. For example: thermal, chemical, acoustical, etc.
     */  "name": "measurementPrinciple", 
    
      "min": "0", 
      "max": "1", 
      "type": "MeasmntPrinciple",
      "isPrimitive": true }, 
    { 
    /*The production specification such as component revision, serial number, etc.
     */  "name": "productionSpecification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DeviceComponent.ProductionSpecification",
      "isPrimitive": false }, 
    { 
    /*The language code for the human-readable text string produced by the device. This language code will follow the IETF language tag. Example: en-US.
     */  "name": "languageCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Other device properties expressed as a `type` which identifies the property and a value(s) either as a quantity or a code.
     */  "name": "property", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DeviceComponent.Property",
      "isPrimitive": false }, 
  ]
},
"DeviceComponent.ProductionSpecification": {
    /*The characteristics, operational status and capabilities of a medical-related component of a medical device.
     */
  "name": "DeviceComponent.ProductionSpecification",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The specification type, such as, serial number, part number, hardware revision, software revision, etc.
     */  "name": "specType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The internal component unique identification. This is a provision for manufacture specific standard components using a private OID. 11073-10101 has a partition for private OID semantic that the manufacturer can make use of.
     */  "name": "componentId", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The printable string defining the component.
     */  "name": "productionSpec", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"DeviceComponent.Property": {
    /*The characteristics, operational status and capabilities of a medical-related component of a medical device.
     */
  "name": "DeviceComponent.Property",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The code for the device property identifying the property being reported such as 'time capability'.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The property value when the property being reported is a quantity such as the resolution of a real time clock.
     */  "name": "valueQuantity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The property value when the property being reported is a code, such as the code indicating that the device supports a real time clock using absolute time.
     */  "name": "valueCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MeasmntPrinciple": {
    /*Different measurement principle supported by the device.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MeasmntPrinciple",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MeasmntPrinciple-list" }, 
  ],
  "elems": [
  ]
},
"DeviceMetric": {
    /*Describes a measurement, calculation or setting capability of a medical device.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceMetric",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique instance identifiers assigned to a device by the device or gateway software, manufacturers, other organizations or owners. For example: handle ID.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Describes the type of the metric. For example: Heart Rate, PEEP Setting, etc.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Describes the unit that an observed value determined for this metric will have. For example: Percent, Seconds, etc.
     */  "name": "unit", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Describes the link to the  Device that this DeviceMetric belongs to and that contains administrative device information such as manufacturer, serial number, etc.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the link to the  DeviceComponent that this DeviceMetric belongs to and that provide information about the location of this DeviceMetric in the containment structure of the parent Device. An example would be a DeviceComponent that represents a Channel. This reference can be used by a client application to distinguish DeviceMetrics that have the same type, but should be interpreted based on their containment location.
     */  "name": "parent", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates current operational state of the device. For example: On, Off, Standby, etc.
     */  "name": "operationalStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "DeviceMetricOperationalStatus",
      "isPrimitive": true }, 
    { 
    /*Describes the color representation for the metric. This is often used to aid clinicians to track and identify parameter types by color. In practice, consider a Patient Monitor that has ECG/HR and Pleth for example; the parameters are displayed in different characteristic colors, such as HR-blue, BP-green, and PR and SpO2- magenta.
     */  "name": "color", 
    
      "min": "0", 
      "max": "1", 
      "type": "DeviceMetricColor",
      "isPrimitive": true }, 
    { 
    /*Indicates the category of the observation generation process. A DeviceMetric can be for example a setting, measurement, or calculation.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "DeviceMetricCategory",
      "isPrimitive": true }, 
    { 
    /*Describes the measurement repetition time. This is not necessarily the same as the update period. The measurement repetition time can range from milliseconds up to hours. An example for a measurement repetition time in the range of milliseconds is the sampling rate of an ECG. An example for a measurement repetition time in the range of hours is a NIBP that is triggered automatically every hour. The update period may be different than the measurement repetition time, if the device does not update the published observed value with the same frequency as it was measured.
     */  "name": "measurementPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Timing",
      "isPrimitive": false }, 
    { 
    /*Describes the calibrations that have been performed or that are required to be performed.
     */  "name": "calibration", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DeviceMetric.Calibration",
      "isPrimitive": false }, 
  ]
},
"DeviceMetric.Calibration": {
    /*Describes a measurement, calculation or setting capability of a medical device.
     */
  "name": "DeviceMetric.Calibration",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the type of the calibration method.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "DeviceMetricCalibrationType",
      "isPrimitive": true }, 
    { 
    /*Describes the state of the calibration.
     */  "name": "state", 
    
      "min": "0", 
      "max": "1", 
      "type": "DeviceMetricCalibrationState",
      "isPrimitive": true }, 
    { 
    /*Describes the time last calibration has been performed.
     */  "name": "time", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
  ]
},
"DeviceMetricCalibrationType": {
    /*Describes the type of a metric calibration.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceMetricCalibrationType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DeviceMetricCalibrationType-list" }, 
  ],
  "elems": [
  ]
},
"DeviceMetricColor": {
    /*Describes the typical color of representation.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceMetricColor",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DeviceMetricColor-list" }, 
  ],
  "elems": [
  ]
},
"DeviceMetricCalibrationState": {
    /*Describes the state of a metric calibration.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceMetricCalibrationState",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DeviceMetricCalibrationState-list" }, 
  ],
  "elems": [
  ]
},
"DeviceMetricOperationalStatus": {
    /*Describes the operational status of the DeviceMetric.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceMetricOperationalStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DeviceMetricOperationalStatus-list" }, 
  ],
  "elems": [
  ]
},
"DeviceMetricCategory": {
    /*Describes the category of the metric.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceMetricCategory",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DeviceMetricCategory-list" }, 
  ],
  "elems": [
  ]
},
"DeviceRequest": {
    /*Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this order by the orderer or by the receiver.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Protocol or definition followed by this request. For example: The proposed act must be performed if the indicated conditions occur, e.g.., shortness of breath, SpO2 less than x%.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Plan/proposal/order fulfilled by this request.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The request takes the place of the referenced completed or terminated request(s).
     */  "name": "priorRequest", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Composite request this is part of.
     */  "name": "groupIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the request.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestStatus",
      "isPrimitive": true }, 
    { 
    /*Whether the request is a proposal, plan, an original order or a reflex order.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates how quickly the {{title}} should be addressed with respect to other requests.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The details of the device to be used.
     */
        {   "name": "codeReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "codeCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*Specific parameters for the ordered item.  For example, the prism value for lenses.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DeviceRequest.Parameter",
      "isPrimitive": false }, 
    { 
    /*The patient who will use the device.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An encounter that provides additional context in which this request is made.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The timing schedule for the use of the device. The Schedule data type allows many different expressions, for example. "Every 8 hours"; "Three times a day"; "1/2 an hour before breakfast for 10 days from 23-Dec 2011:"; "15 Oct 2013, 17 Oct 2013 and 1 Nov 2013".
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "occurrenceTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*When the request transitioned to being actionable.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The individual who initiated the request and has responsibility for its activation.
     */  "name": "requester", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Desired type of performer for doing the diagnostic testing.
     */  "name": "performerType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The desired performer for doing the diagnostic testing.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Reason or justification for the use of this device.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Reason or justification for the use of this device.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Additional clinical information about the patient that may influence the request fulfilment.  For example, this may include where on the subject's body the device will be used (i.e. the target site).
     */  "name": "supportingInfo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Details about this request that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Key events in the history of the request.
     */  "name": "relevantHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"DeviceRequest.Parameter": {
    /*Represents a request for a patient to employ a medical device. The device may be an implantable device, or an external assistive device, such as a walker.
     */
  "name": "DeviceRequest.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code or string that identifies the device detail being asserted.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The value of the device detail.
     */
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
    ], 
  ]
},
"DeviceUseStatement": {
    /*A record of a device being used by a patient where the record is the result of a report from the patient or another clinician.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceUseStatement",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An external identifier for this statement such as an IRI.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A plan, proposal or order that is fulfilled in whole or in part by this DeviceUseStatement.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A code representing the patient or other source's judgment about the state of the device used that this statement is about.  Generally this will be active or completed.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "DeviceUseStatementStatus",
      "isPrimitive": true }, 
    { 
    /*The patient who used the device.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Allows linking the DeviceUseStatement to the underlying Request, or to other information that supports or is used to derive the DeviceUseStatement.
     */  "name": "derivedFrom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*How often the device was used.
     */
        {   "name": "timingTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "timingPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "timingDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
    ], 
    { 
    /*The time at which the statement was made/recorded.
     */  "name": "recordedOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Who reported the device was being used by the patient.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The details of the device used.
     */  "name": "device", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Reason or justification for the use of the device.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource whose existence justifies this DeviceUseStatement.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the anotomic location on the subject's body where the device was used ( i.e. the target).
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Details about the device statement that were not represented at all or sufficiently in one of the attributes provided in a class. These may include for example a comment, an instruction, or a note associated with the statement.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"DeviceUseStatementStatus": {
    /*A coded concept indicating the current status of a the Device UsageIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DeviceUseStatementStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DeviceUseStatementStatus-list" }, 
  ],
  "elems": [
  ]
},
"DiagnosticReport": {
    /*The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DiagnosticReport",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this report by the performer or other systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Details concerning a service requested.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The status of the diagnostic report.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "DiagnosticReportStatus",
      "isPrimitive": true }, 
    { 
    /*A code that classifies the clinical discipline, department or diagnostic service that created the report (e.g. cardiology, biochemistry, hematology, MRI). This is used for searching, sorting and display purposes.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code or name that describes this diagnostic report.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The subject of the report. Usually, but not always, this is a patient. However diagnostic services also perform analyses on specimens collected from a variety of other sources.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The healthcare event  (e.g. a patient and healthcare provider interaction) which this DiagnosticReport per is about.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The time or time-period the observed values are related to. When the subject of the report is a patient, this is usually either the time of the procedure or of specimen collection(s), but very often the source of the date/time is not known, only the date/time itself.
     */
        {   "name": "effectiveDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "effectivePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date and time that this version of the report was made available to providers, typically after the report was reviewed and verified.
     */  "name": "issued", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*The diagnostic service that is responsible for issuing the report.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner or organization that is responsible for the report's conclusions and interpretations.
     */  "name": "resultsInterpreter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Details about the specimens on which this diagnostic report is based.
     */  "name": "specimen", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Observations that are part of this diagnostic report. Observations can be simple name/value pairs (e.g. "atomic" results), or they can be grouping observations that include references to other members of the group (e.g. "panels").
     */  "name": "result", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*One or more links to full details of any imaging performed during the diagnostic investigation. Typically, this is imaging performed by DICOM enabled modalities, but this is not required. A fully enabled PACS viewer can use this information to provide views of the source images.
     */  "name": "imagingStudy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A list of key images associated with this report. The images are generally created during the diagnostic process, and may be directly of the patient, or of treated specimens (i.e. slides of interest).
     */  "name": "media", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DiagnosticReport.Media",
      "isPrimitive": false }, 
    { 
    /*Concise and clinically contextualized impression / summary of the diagnostic report.
     */  "name": "conclusion", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Codes for the conclusion.
     */  "name": "codedDiagnosis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Rich text representation of the entire result as issued by the diagnostic service. Multiple formats are allowed but they SHALL be semantically equivalent.
     */  "name": "presentedForm", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
  ]
},
"DiagnosticReport.Media": {
    /*The findings and interpretation of diagnostic  tests performed on patients, groups of patients, devices, and locations, and/or specimens derived from these. The report includes clinical context such as requesting and provider information, and some mix of atomic results, images, textual and coded interpretations, and formatted representation of diagnostic reports.
     */
  "name": "DiagnosticReport.Media",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A comment about the image. Typically, this is used to provide an explanation for why the image is included, or to draw the viewer's attention to important features.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Reference to the image source.
     */  "name": "link", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"DiagnosticReportStatus": {
    /*The status of the diagnostic report.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DiagnosticReportStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DiagnosticReportStatus-list" }, 
  ],
  "elems": [
  ]
},
"DocumentManifest": {
    /*A collection of documents compiled for a purpose together with metadata that applies to the collection.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DocumentManifest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A single identifier that uniquely identifies this manifest. Principally used to refer to the manifest in non-FHIR contexts.
     */  "name": "masterIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Other identifiers associated with the document manifest, including version independent  identifiers.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of this document manifest.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "DocumentReferenceStatus",
      "isPrimitive": true }, 
    { 
    /*Specifies the kind of this set of documents (e.g. Patient Summary, Discharge Summary, Prescription, etc.). The type of a set of documents may be the same as one of the documents in it - especially if there is only one - but it may be wider.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Who or what the set of documents is about. The documents can be about a person, (patient or healthcare practitioner), a device (i.e. machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure). If the documents cross more than one subject, then more than one subject is allowed here (unusual use case).
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*When the document manifest was created for submission to the server (not necessarily the same thing as the actual resource last modified time, since it may be modified, replicated, etc.).
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*An actor taking an active role in the manifest.
     */  "name": "agent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DocumentManifest.Agent",
      "isPrimitive": false }, 
    { 
    /*A patient, practitioner, or organization for which this set of documents is intended.
     */  "name": "recipient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the source system, application, or software that produced the document manifest.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Human-readable description of the source document. This is sometimes known as the "title".
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The list of Resources that consist of the parts of this manifest.
     */  "name": "content", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Related identifiers or resources associated with the DocumentManifest.
     */  "name": "related", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DocumentManifest.Related",
      "isPrimitive": false }, 
  ]
},
"DocumentManifest.Agent": {
    /*A collection of documents compiled for a purpose together with metadata that applies to the collection.
     */
  "name": "DocumentManifest.Agent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Specification of the participation type the agent played.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies who is the agent. Such as the author of the manifest, and adding  documents to it.
     */  "name": "who", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"DocumentManifest.Related": {
    /*A collection of documents compiled for a purpose together with metadata that applies to the collection.
     */
  "name": "DocumentManifest.Related",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Related identifier to this DocumentManifest.  For example, Order numbers, accession numbers, XDW workflow numbers.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Related Resource to this DocumentManifest. For example, Order, ServiceRequest,  Procedure, EligibilityRequest, etc.
     */  "name": "ref", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"DocumentReference": {
    /*A reference to a document.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DocumentReference",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Document identifier as assigned by the source of the document. This identifier is specific to this version of the document. This unique identifier may be used elsewhere to identify this version of the document.
     */  "name": "masterIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Other identifiers associated with the document, including version independent identifiers.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of this document reference.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "DocumentReferenceStatus",
      "isPrimitive": true }, 
    { 
    /*The status of the underlying document.
     */  "name": "docStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CompositionStatus",
      "isPrimitive": true }, 
    { 
    /*Specifies the particular kind of document referenced  (e.g. History and Physical, Discharge Summary, Progress Note). This usually equates to the purpose of making the document referenced.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A categorization for the type of document referenced - helps for indexing and searching. This may be implied by or derived from the code specified in the DocumentReference.type.
     */  "name": "class", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Who or what the document is about. The document can be about a person, (patient or healthcare practitioner), a device (e.g. a machine) or even a group of subjects (such as a document about a herd of farm animals, or a set of patients that share a common exposure).
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*When the document was created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*When the document reference was created.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*An actor taking an active role in the document.
     */  "name": "agent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DocumentReference.Agent",
      "isPrimitive": false }, 
    { 
    /*Which person or organization authenticates that this document is valid.
     */  "name": "authenticator", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the organization or group who is responsible for ongoing maintenance of and access to the document.
     */  "name": "custodian", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Relationships that this document has with other document references that already exist.
     */  "name": "relatesTo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DocumentReference.RelatesTo",
      "isPrimitive": false }, 
    { 
    /*Human-readable description of the source document. This is sometimes known as the "title".
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A set of Security-Tag codes specifying the level of privacy/security of the Document. Note that DocumentReference.meta.security contains the security labels of the "reference" to the document, while DocumentReference.securityLabel contains a snapshot of the security labels on the document the reference refers to.
     */  "name": "securityLabel", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The document and format referenced. There may be multiple content element repetitions, each with a different format.
     */  "name": "content", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "DocumentReference.Content",
      "isPrimitive": false }, 
    { 
    /*The clinical context in which the document was prepared.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "DocumentReference.Context",
      "isPrimitive": false }, 
  ]
},
"DocumentReference.Agent": {
    /*A reference to a document.
     */
  "name": "DocumentReference.Agent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Specification of the participation type the agent played.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies who is responsible for adding the information to the document.
     */  "name": "who", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"DocumentReference.RelatesTo": {
    /*A reference to a document.
     */
  "name": "DocumentReference.RelatesTo",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of relationship that this document has with anther document.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "DocumentRelationshipType",
      "isPrimitive": true }, 
    { 
    /*The target document of this relationship.
     */  "name": "target", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"DocumentReference.Content": {
    /*A reference to a document.
     */
  "name": "DocumentReference.Content",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The document or URL of the document along with critical metadata to prove content has integrity.
     */  "name": "attachment", 
    
      "min": "1", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*An identifier of the document encoding, structure, and template that the document conforms to beyond the base format indicated in the mimeType.
     */  "name": "format", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"DocumentReference.Context": {
    /*A reference to a document.
     */
  "name": "DocumentReference.Context",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the clinical encounter or type of care that the document content is associated with.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*This list of codes represents the main clinical acts, such as a colonoscopy or an appendectomy, being documented. In some cases, the event is inherent in the type code, such as a "History and Physical Report" in which the procedure being documented is necessarily a "History and Physical" act.
     */  "name": "event", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The time period over which the service that is described by the document was provided.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The kind of facility where the patient was seen.
     */  "name": "facilityType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This property may convey specifics about the practice setting where the content was created, often reflecting the clinical specialty.
     */  "name": "practiceSetting", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The Patient Information as known when the document was published. May be a reference to a version specific, or contained.
     */  "name": "sourcePatientInfo", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Related identifiers or resources associated with the DocumentReference.
     */  "name": "related", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DocumentReference.Related",
      "isPrimitive": false }, 
  ]
},
"DocumentReference.Related": {
    /*A reference to a document.
     */
  "name": "DocumentReference.Related",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Related identifier to this DocumentReference. If both id and ref are present they shall refer to the same thing.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Related Resource to this DocumentReference. If both id and ref are present they shall refer to the same thing.
     */  "name": "ref", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"EligibilityRequest": {
    /*The EligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an EligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EligibilityRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*Immediate (STAT), best effort (NORMAL), deferred (DEFER).
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Patient Resource.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date or dates when the enclosed suite of services were performed or completed.
     */
        {   "name": "servicedDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "servicedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date when this resource was created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Person who created the invoice/claim/pre-determination or pre-authorization.
     */  "name": "enterer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "provider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The Insurer who is target  of the request.
     */  "name": "insurer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Facility where the services were provided.
     */  "name": "facility", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Financial instrument by which payment information for health care.
     */  "name": "coverage", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The contract number of a business agreement which describes the terms and conditions.
     */  "name": "businessArrangement", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Dental, Vision, Medical, Pharmacy, Rehab etc.
     */  "name": "benefitCategory", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Dental: basic, major, ortho; Vision exam, glasses, contacts; etc.
     */  "name": "benefitSubCategory", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A list of billable services for which an authorization prior to service delivery may be required by the payor.
     */  "name": "authorization", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityRequest.Authorization",
      "isPrimitive": false }, 
  ]
},
"EligibilityRequest.Authorization": {
    /*The EligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an EligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
     */
  "name": "EligibilityRequest.Authorization",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of procedures which serves to order and provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI).
     */  "name": "service", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The fee for an addittional service or product or charge.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Facility where the services were provided.
     */  "name": "facility", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*List of patient diagnosis for which care is sought.
     */  "name": "diagnosis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityRequest.Diagnosis",
      "isPrimitive": false }, 
  ]
},
"EligibilityRequest.Diagnosis": {
    /*The EligibilityRequest provides patient and insurance coverage information to an insurer for them to respond, in the form of an EligibilityResponse, with information regarding whether the stated coverage is valid and in-force and optionally to provide the insurance details of the policy.
     */
  "name": "EligibilityRequest.Diagnosis",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The diagnosis.
     */
        {   "name": "diagnosisCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "diagnosisReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"EligibilityResponse": {
    /*This resource provides eligibility and plan details from the processing of an Eligibility resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EligibilityResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The date when the enclosed suite of services were performed or completed.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "requestProvider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Original request resource reference.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Transaction status: error, complete.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "RemittanceOutcome",
      "isPrimitive": true }, 
    { 
    /*A description of the status of the adjudication.
     */  "name": "disposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The Insurer who produced this adjudicated response.
     */  "name": "insurer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Flag indicating if the coverage provided is inforce currently  if no service date(s) specified or for the whole duration of the service dates.
     */  "name": "inforce", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The insurer may provide both the details for the requested coverage as well as details for additional coverages known to the insurer.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityResponse.Insurance",
      "isPrimitive": false }, 
    { 
    /*A reference from the Insurer to which these services pertain.
     */  "name": "preAuthRef", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of billable services for which an authorization prior to service delivery may be required by the payor.
     */  "name": "authorization", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityResponse.Authorization",
      "isPrimitive": false }, 
    { 
    /*The form to be used for printing the content.
     */  "name": "form", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Mutually exclusive with Services Provided (Item).
     */  "name": "error", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityResponse.Error",
      "isPrimitive": false }, 
  ]
},
"EligibilityResponse.Insurance": {
    /*This resource provides eligibility and plan details from the processing of an Eligibility resource.
     */
  "name": "EligibilityResponse.Insurance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A suite of updated or additional Coverages from the Insurer.
     */  "name": "coverage", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The contract resource which may provide more detailed information.
     */  "name": "contract", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Benefits and optionally current balances by Category.
     */  "name": "benefitBalance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityResponse.BenefitBalance",
      "isPrimitive": false }, 
  ]
},
"EligibilityResponse.BenefitBalance": {
    /*This resource provides eligibility and plan details from the processing of an Eligibility resource.
     */
  "name": "EligibilityResponse.BenefitBalance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Dental, Vision, Medical, Pharmacy, Rehab etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Dental: basic, major, ortho; Vision exam, glasses, contacts; etc.
     */  "name": "subCategory", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*True if the indicated class of service is excluded from the plan, missing or False indicated the service is included in the coverage.
     */  "name": "excluded", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A short name or tag for the benefit, for example MED01, or DENT2.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A richer description of the benefit, for example 'DENT2 covers 100% of basic, 50% of major but exclused Ortho, Implants and Costmetic services'.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Network designation.
     */  "name": "network", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Unit designation: individual or family.
     */  "name": "unit", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual vistis'.
     */  "name": "term", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Benefits Used to date.
     */  "name": "financial", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EligibilityResponse.Financial",
      "isPrimitive": false }, 
  ]
},
"EligibilityResponse.Financial": {
    /*This resource provides eligibility and plan details from the processing of an Eligibility resource.
     */
  "name": "EligibilityResponse.Financial",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Deductable, visits, benefit amount.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Benefits allowed.
     */
        {   "name": "allowedUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "allowedString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "allowedMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Benefits used.
     */
        {   "name": "usedUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "usedMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
    ], 
  ]
},
"EligibilityResponse.Authorization": {
    /*This resource provides eligibility and plan details from the processing of an Eligibility resource.
     */
  "name": "EligibilityResponse.Authorization",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of procedures which serves to order and provide a link.
     */  "name": "authorizationSequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*A boolean flag indicating whether a prior authorization or pre-authorization is required prior to actual service delivery.
     */  "name": "required", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Any comments regarding information or actions assciated with the pre-authorization.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"EligibilityResponse.Error": {
    /*This resource provides eligibility and plan details from the processing of an Eligibility resource.
     */
  "name": "EligibilityResponse.Error",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An error code,from a specified code system, which details why the eligibility check could not be performed.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Encounter": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Encounter",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier(s) by which this encounter is known.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*planned | arrived | triaged | in-progress | onleave | finished | cancelled +.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EncounterStatus",
      "isPrimitive": true }, 
    { 
    /*The status history permits the encounter resource to contain the status history without needing to read through the historical versions of the resource, or even have the server store them.
     */  "name": "statusHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Encounter.StatusHistory",
      "isPrimitive": false }, 
    { 
    /*Concepts representing classification of patient encounter such as ambulatory (outpatient), inpatient, emergency, home health or others due to local variations.
     */  "name": "class", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The class history permits the tracking of the encounters transitions without needing to go  through the resource history.  This would be used for a case where an admission starts of as an emergency encounter, then transisions into an inpatient scenario. Doing this and not restarting a new encounter ensures that any lab/diagnostic results can more easily follow the patient and not require re-processing and not get lost or cancelled during a kindof discharge from emergency to inpatient.
     */  "name": "classHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Encounter.ClassHistory",
      "isPrimitive": false }, 
    { 
    /*Specific type of encounter (e.g. e-mail consultation, surgical day-care, skilled nursing, rehabilitation).
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Broad categorization of the service that is to be provided (e.g. cardiology).
     */  "name": "serviceType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the urgency of the encounter.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient or group present at the encounter.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Where a specific encounter should be classified as a part of a specific episode(s) of care this field should be used. This association can facilitate grouping of related encounters together for a specific purpose, such as government reporting, issue tracking, association via a common problem.  The association is recorded on the encounter as these are typically created after the episode of care, and grouped on entry rather than editing the episode of care to append another encounter to it (the episode of care could span years).
     */  "name": "episodeOfCare", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The request this encounter satisfies (e.g. incoming referral or procedure request).
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The list of people responsible for providing the service.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Encounter.Participant",
      "isPrimitive": false }, 
    { 
    /*The appointment that scheduled this encounter.
     */  "name": "appointment", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The start and end time of the encounter.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Quantity of time the encounter lasted. This excludes the time during leaves of absence.
     */  "name": "length", 
    
      "min": "0", 
      "max": "1", 
      "type": "Duration",
      "isPrimitive": false }, 
    { 
    /*Reason the encounter takes place, expressed as a code. For admissions, this can be used for a coded admission diagnosis.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The list of diagnosis relevant to this encounter.
     */  "name": "diagnosis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Encounter.Diagnosis",
      "isPrimitive": false }, 
    { 
    /*The set of accounts that may be used for billing for this Encounter.
     */  "name": "account", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Details about the admission to a healthcare service.
     */  "name": "hospitalization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Encounter.Hospitalization",
      "isPrimitive": false }, 
    { 
    /*List of locations where  the patient has been during this encounter.
     */  "name": "location", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Encounter.Location",
      "isPrimitive": false }, 
    { 
    /*The organization that is primarily responsible for this Encounter's services. This MAY be the same as the organization on the Patient record, however it could be different, such as if the actor performing the services was from an external organization (which may be billed seperately) for an external consultation.  Refer to the example bundle showing an abbreviated set of Encounters for a colonoscopy.
     */  "name": "serviceProvider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Another Encounter of which this encounter is a part of (administratively or in time).
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Encounter.StatusHistory": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
  "name": "Encounter.StatusHistory",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*planned | arrived | triaged | in-progress | onleave | finished | cancelled +.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EncounterStatus",
      "isPrimitive": true }, 
    { 
    /*The time that the episode was in the specified status.
     */  "name": "period", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Encounter.ClassHistory": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
  "name": "Encounter.ClassHistory",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*inpatient | outpatient | ambulatory | emergency +.
     */  "name": "class", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The time that the episode was in the specified class.
     */  "name": "period", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Encounter.Participant": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
  "name": "Encounter.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Role of participant in encounter.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The period of time that the specified participant participated in the encounter. These can overlap or be sub-sets of the overall encounter's period.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Persons involved in the encounter other than the patient.
     */  "name": "individual", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Encounter.Diagnosis": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
  "name": "Encounter.Diagnosis",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Reason the encounter takes place, as specified using information from another resource. For admissions, this is the admission diagnosis. The indication will typically be a Condition (with other resources referenced in the evidence.detail), or a Procedure.
     */  "name": "condition", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Role that this diagnosis has within the encounter (e.g. admission, billing, discharge …).
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Ranking of the diagnosis (for each role type).
     */  "name": "rank", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
  ]
},
"Encounter.Hospitalization": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
  "name": "Encounter.Hospitalization",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Pre-admission identifier.
     */  "name": "preAdmissionIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The location/organization from which the patient came before admission.
     */  "name": "origin", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*From where patient was admitted (physician referral, transfer).
     */  "name": "admitSource", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether this hospitalization is a readmission and why if known.
     */  "name": "reAdmission", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Diet preferences reported by the patient.
     */  "name": "dietPreference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Special courtesies (VIP, board member).
     */  "name": "specialCourtesy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Any special requests that have been made for this hospitalization encounter, such as the provision of specific equipment or other things.
     */  "name": "specialArrangement", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Location/organization to which the patient is discharged.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Category or kind of location after discharge.
     */  "name": "dischargeDisposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Encounter.Location": {
    /*An interaction between a patient and healthcare provider(s) for the purpose of providing healthcare service(s) or assessing the health status of a patient.
     */
  "name": "Encounter.Location",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The location where the encounter takes place.
     */  "name": "location", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The status of the participants' presence at the specified location during the period specified. If the participant is is no longer at the location, then the period will have an end date/time.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "EncounterLocationStatus",
      "isPrimitive": true }, 
    { 
    /*Time period during which the patient was present at the location.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"EncounterLocationStatus": {
    /*The status of the location.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EncounterLocationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EncounterLocationStatus-list" }, 
  ],
  "elems": [
  ]
},
"EncounterStatus": {
    /*Current state of the encounterIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EncounterStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EncounterStatus-list" }, 
  ],
  "elems": [
  ]
},
"Endpoint": {
    /*The technical details of an endpoint that can be used for electronic services, such as for web services providing XDS.b or a REST endpoint for another FHIR server. This may include any security context information.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Endpoint",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for the organization that is used to identify the endpoint across multiple disparate systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*active | suspended | error | off | test.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EndpointStatus",
      "isPrimitive": true }, 
    { 
    /*A coded value that represents the technical details of the usage of this endpoint, such as what WSDLs should be used in what way. (e.g. XDS.b/DICOM/cds-hook).
     */  "name": "connectionType", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*A friendly name that this endpoint can be referred to with.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The organization that manages this endpoint (even if technically another organization is hosting this in the cloud, it is the organization associated with the data).
     */  "name": "managingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*The interval during which the endpoint is expected to be operational.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The payload type describes the acceptable content that can be communicated on the endpoint.
     */  "name": "payloadType", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The mime type to send the payload in - e.g. application/fhir+xml, application/fhir+json. If the mime type is not specified, then the sender could send any content (including no content depending on the connectionType).
     */  "name": "payloadMimeType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The uri that describes the actual end-point to connect to.
     */  "name": "address", 
    
      "min": "1", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
    { 
    /*Additional headers / information to send as part of the notification.
     */  "name": "header", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"EndpointStatus": {
    /*The status of the endpointIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EndpointStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EndpointStatus-list" }, 
  ],
  "elems": [
  ]
},
"EnrollmentRequest": {
    /*This resource provides the insurance enrollment details to the insurer regarding a specified coverage.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EnrollmentRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The date when this resource was created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The Insurer who is target  of the request.
     */  "name": "insurer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "provider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Patient Resource.
     */  "name": "candidate", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Reference to the program or plan identification, underwriter or payor.
     */  "name": "coverage", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"EnrollmentResponse": {
    /*This resource provides enrollment and plan details from the processing of an Enrollment resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EnrollmentResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*Original request resource reference.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Processing status: error, complete.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "RemittanceOutcome",
      "isPrimitive": true }, 
    { 
    /*A description of the status of the adjudication.
     */  "name": "disposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The date when the enclosed suite of services were performed or completed.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The Insurer who produced this adjudicated response.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "requestProvider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"EntryDefinition": {
    /*Catalog entries are wrappers that contextualize items included in a catalog.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EntryDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of item - medication, device, service, protocol or other.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether the entry represents an orderable item, or other.
     */  "name": "purpose", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Content of the catalog.
     */  "name": "referencedItem", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Used in supporting different identifiers for the same product, e.g. manufacturer code and retailer code.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Used in supporting related concepts, e.g. NDC to RxNorm.
     */  "name": "additionalIdentifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Classes of devices, or ATC for medication.
     */  "name": "classification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Used to support catalog exchange even for unsupported products, e.g. getting list of medications even if not prescribable.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The time period in which this catalog entry is expected to be active.
     */  "name": "validityPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Typically date of issue is different from the beginning of the validity. This can be used to see when an item was last updated.
     */  "name": "lastUpdated", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Used for examplefor Out of Formulary, or any specifics.
     */  "name": "additionalCharacteristic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*User for example for ATC classification, or.
     */  "name": "additionalClassification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Used for example, to point to a substance, or to a device used to administer a medication.
     */  "name": "relatedEntry", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EntryDefinition.RelatedEntry",
      "isPrimitive": false }, 
  ]
},
"EntryDefinition.RelatedEntry": {
    /*Catalog entries are wrappers that contextualize items included in a catalog.
     */
  "name": "EntryDefinition.RelatedEntry",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of relation to the related item: child, parent, packageContent, containerPackage, usedIn, uses, requires, etc.
     */  "name": "relationtype", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The reference to the related item.
     */  "name": "item", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"EpisodeOfCare": {
    /*An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EpisodeOfCare",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The EpisodeOfCare may be known by different identifiers for different contexts of use, such as when an external agency is tracking the Episode for funding purposes.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*planned | waitlist | active | onhold | finished | cancelled.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EpisodeOfCareStatus",
      "isPrimitive": true }, 
    { 
    /*The history of statuses that the EpisodeOfCare has been through (without requiring processing the history of the resource).
     */  "name": "statusHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EpisodeOfCare.StatusHistory",
      "isPrimitive": false }, 
    { 
    /*A classification of the type of episode of care; e.g. specialist referral, disease management, type of funded care.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The list of diagnosis relevant to this episode of care.
     */  "name": "diagnosis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "EpisodeOfCare.Diagnosis",
      "isPrimitive": false }, 
    { 
    /*The patient who is the focus of this episode of care.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization that has assumed the specific responsibilities for the specified duration.
     */  "name": "managingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The interval during which the managing organization assumes the defined responsibility.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Referral Request(s) that are fulfilled by this EpisodeOfCare, incoming referrals.
     */  "name": "referralRequest", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner that is the care manager/care coordinator for this patient.
     */  "name": "careManager", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The list of practitioners that may be facilitating this episode of care for specific purposes.
     */  "name": "team", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The set of accounts that may be used for billing for this EpisodeOfCare.
     */  "name": "account", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"EpisodeOfCare.StatusHistory": {
    /*An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.
     */
  "name": "EpisodeOfCare.StatusHistory",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*planned | waitlist | active | onhold | finished | cancelled.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EpisodeOfCareStatus",
      "isPrimitive": true }, 
    { 
    /*The period during this EpisodeOfCare that the specific status applied.
     */  "name": "period", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"EpisodeOfCare.Diagnosis": {
    /*An association between a patient and an organization / healthcare provider(s) during which time encounters may occur. The managing organization assumes a level of responsibility for the patient during this time.
     */
  "name": "EpisodeOfCare.Diagnosis",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A list of conditions/problems/diagnoses that this episode of care is intended to be providing care for.
     */  "name": "condition", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Role that this diagnosis has within the episode of care (e.g. admission, billing, discharge …).
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Ranking of the diagnosis (for each role type).
     */  "name": "rank", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
  ]
},
"EpisodeOfCareStatus": {
    /*The status of the episode of care.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EpisodeOfCareStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EpisodeOfCareStatus-list" }, 
  ],
  "elems": [
  ]
},
"EventDefinition": {
    /*The EventDefinition resource provides a reusable description of when a particular event can occur.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EventDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this event definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this event definition is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this event definition when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the event definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the event definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the event definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the event definition.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An explanatory or alternate title for the event definition giving additional information about its content.
     */  "name": "subtitle", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this event definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this event definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A code or group definition that describes the intended subject of the event definition.
     */
        {   "name": "subjectCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "subjectReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date  (and optionally time) when the event definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the event definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the event definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the event definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate event definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the event definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this event definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A detailed description of how the event definition is used from a clinical perspective.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the event definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the event definition.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
     */  "name": "approvalDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
     */  "name": "lastReviewDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The period during which the event definition content was or is planned to be in active use.
     */  "name": "effectivePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Descriptive topics related to the module. Topics provide a high-level categorization of the module that can be useful for filtering and searching.
     */  "name": "topic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A contributor to the content of the module, including authors, editors, reviewers, and endorsers.
     */  "name": "contributor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contributor",
      "isPrimitive": false }, 
    { 
    /*Related resources such as additional documentation, justification, or bibliographic references.
     */  "name": "relatedArtifact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*The trigger element defines when the event occurs.
     */  "name": "trigger", 
    
      "min": "1", 
      "max": "1", 
      "type": "TriggerDefinition",
      "isPrimitive": false }, 
  ]
},
"ExampleScenario": {
    /*Example of workflow instance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExampleScenario",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this example scenario when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this example scenario is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this example scenario when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the example scenario when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the example scenario author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the example scenario. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this example scenario. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this example scenario is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the example scenario was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the example scenario changes. (e.g. the 'content logical definition').
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the example scenario.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate example scenario instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the example scenario is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A copyright statement relating to the example scenario and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the example scenario.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*What the example scenario resource is created for. This should not be used to show the business purpose of the scenario itself, but the purpose of documenting a scenario.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Actor participating in the resource.
     */  "name": "actor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Actor",
      "isPrimitive": false }, 
    { 
    /*Each resource and each version that is present in the workflow.
     */  "name": "instance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Instance",
      "isPrimitive": false }, 
    { 
    /*Each major process - a group of operations.
     */  "name": "process", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Process",
      "isPrimitive": false }, 
    { 
    /*Another nested workflow.
     */  "name": "workflow", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"ExampleScenario.Actor": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Actor",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*ID or acronym of actor.
     */  "name": "actorId", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of actor - person or system.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ExampleScenarioActorType",
      "isPrimitive": true }, 
    { 
    /*The name of the actor as shown in the page.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The description of the actor.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
  ]
},
"ExampleScenario.Instance": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Instance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The id of the resource for referencing.
     */  "name": "resourceId", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of the resource.
     */  "name": "resourceType", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*A short name for the resource instance.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Human-friendly description of the resource instance.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A specific version of the resource.
     */  "name": "version", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Version",
      "isPrimitive": false }, 
    { 
    /*Resources contained in the instance (e.g. the observations contained in a bundle).
     */  "name": "containedInstance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.ContainedInstance",
      "isPrimitive": false }, 
  ]
},
"ExampleScenario.Version": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Version",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The identifier of a specific version of a resource.
     */  "name": "versionId", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The description of the resource version.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
  ]
},
"ExampleScenario.ContainedInstance": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.ContainedInstance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Each resource contained in the instance.
     */  "name": "resourceId", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A specific version of a resource contained in the instance.
     */  "name": "versionId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ExampleScenario.Process": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Process",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The diagram title of the group of operations.
     */  "name": "title", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A longer description of the group of operations.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Description of initial status before the process starts.
     */  "name": "preConditions", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Description of final status after the process ends.
     */  "name": "postConditions", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Each step of the process.
     */  "name": "step", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Step",
      "isPrimitive": false }, 
  ]
},
"ExampleScenario.Step": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Step",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Nested process.
     */  "name": "process", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Process",
      "isPrimitive": false }, 
    { 
    /*If there is a pause in the flow.
     */  "name": "pause", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Each interaction or action.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExampleScenario.Operation",
      "isPrimitive": false }, 
    { 
    /*Each interaction in the workflow.
     */  "name": "alternative", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExampleScenario.Alternative",
      "isPrimitive": false }, 
  ]
},
"ExampleScenario.Operation": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Operation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The sequential number of the interaction.
     */  "name": "number", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of operation - CRUD.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The human-friendly name of the interaction.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Who starts the transaction.
     */  "name": "initiator", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Who receives the transaction.
     */  "name": "receiver", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A comment to be inserted in the diagram.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Whether the initiator is deactivated right after the transaction.
     */  "name": "initiatorActive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether the receiver is deactivated right after the transaction.
     */  "name": "receiverActive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Each resource instance used by the initiator.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExampleScenario.ContainedInstance",
      "isPrimitive": false }, 
    { 
    /*Each resource instance used by the responder.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExampleScenario.ContainedInstance",
      "isPrimitive": false }, 
  ]
},
"ExampleScenario.Alternative": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Alternative",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of each alternative.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Each of the possible options in an alternative.
     */  "name": "option", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ExampleScenario.Option",
      "isPrimitive": false }, 
  ]
},
"ExampleScenario.Option": {
    /*Example of workflow instance.
     */
  "name": "ExampleScenario.Option",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A human-readable description of each option.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*What happens in each alternative option.
     */  "name": "step", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExampleScenario.Step",
      "isPrimitive": false }, 
    { 
    /*If there is a pause in the flow.
     */  "name": "pause", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"ExampleScenarioActorType": {
    /*The type of actor - system or humanIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExampleScenarioActorType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ExampleScenarioActorType-list" }, 
  ],
  "elems": [
  ]
},
"ExpansionProfile": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExpansionProfile",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this expansion profile when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this expansion profile is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this expansion profile when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the expansion profile when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the expansion profile author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the expansion profile. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this expansion profile. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this expansion profile is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the expansion profile was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the expansion profile changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the expansion profile.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the expansion profile from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate expansion profile instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the expansion profile is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Fix use of a particular code system to a particular version.
     */  "name": "fixedVersion", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExpansionProfile.FixedVersion",
      "isPrimitive": false }, 
    { 
    /*Code system, or a particular version of a code system to be excluded from value set expansions.
     */  "name": "excludedSystem", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExpansionProfile.ExcludedSystem",
      "isPrimitive": false }, 
    { 
    /*Controls whether concept designations are to be included or excluded in value set expansions.
     */  "name": "includeDesignations", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A set of criteria that provide the constraints imposed on the value set expansion by including or excluding designations.
     */  "name": "designation", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExpansionProfile.Designation",
      "isPrimitive": false }, 
    { 
    /*Controls whether the value set definition is included or excluded in value set expansions.
     */  "name": "includeDefinition", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Controls whether inactive concepts are included or excluded in value set expansions.
     */  "name": "activeOnly", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Controls whether or not the value set expansion nests codes or not (i.e. ValueSet.expansion.contains.contains).
     */  "name": "excludeNested", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Controls whether or not the value set expansion includes codes which cannot be displayed in user interfaces.
     */  "name": "excludeNotForUI", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Controls whether or not the value set expansion includes post coordinated codes.
     */  "name": "excludePostCoordinated", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Specifies the language to be used for description in the expansions i.e. the language to be used for ValueSet.expansion.contains.display.
     */  "name": "displayLanguage", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*If the value set being expanded is incomplete (because it is too big to expand), return a limited expansion (a subset) with an indicator that expansion is incomplete, using the extension [http://hl7.org/fhir/StructureDefinition/valueset-toocostly](extension-valueset-toocostly.html).
     */  "name": "limitedExpansion", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"ExpansionProfile.FixedVersion": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.FixedVersion",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The specific system for which to fix the version.
     */  "name": "system", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The version of the code system from which codes in the expansion should be included.
     */  "name": "version", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*How to manage the intersection between a fixed version in a value set, and this fixed version of the system in the expansion profile.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "SystemVersionProcessingMode",
      "isPrimitive": true }, 
  ]
},
"ExpansionProfile.ExcludedSystem": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.ExcludedSystem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI which is the code system to be excluded.
     */  "name": "system", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The version of the code system from which codes in the expansion should be excluded.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ExpansionProfile.Designation": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.Designation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Designations to be included.
     */  "name": "include", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExpansionProfile.Include",
      "isPrimitive": false }, 
    { 
    /*Designations to be excluded.
     */  "name": "exclude", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExpansionProfile.Exclude",
      "isPrimitive": false }, 
  ]
},
"ExpansionProfile.Include": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.Include",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A data group for each designation to be included.
     */  "name": "designation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExpansionProfile.Designation1",
      "isPrimitive": false }, 
  ]
},
"ExpansionProfile.Designation1": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.Designation1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The language this designation is defined for.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Which kinds of designation to include in the expansion.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"ExpansionProfile.Exclude": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.Exclude",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A data group for each designation to be excluded.
     */  "name": "designation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExpansionProfile.Designation2",
      "isPrimitive": false }, 
  ]
},
"ExpansionProfile.Designation2": {
    /*Resource to define constraints on the Expansion of a FHIR ValueSet.
     */
  "name": "ExpansionProfile.Designation2",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The language this designation is defined for.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Which kinds of designation to exclude from the expansion.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"SystemVersionProcessingMode": {
    /*How to manage the intersection between a fixed version in a value set, and a fixed version of the system in the expansion profileIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SystemVersionProcessingMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SystemVersionProcessingMode-list" }, 
  ],
  "elems": [
  ]
},
"ExplanationOfBenefit": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExplanationOfBenefit",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The EOB Business Identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExplanationOfBenefitStatus",
      "isPrimitive": true }, 
    { 
    /*The category of claim, eg, oral, pharmacy, vision, insitutional, professional.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A finer grained suite of claim subtype codes which may convey Inpatient vs Outpatient and/or a specialty service. In the US the BillType.
     */  "name": "subType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Complete (Bill or Claim), Proposed (Pre-Authorization), Exploratory (Pre-determination).
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Use",
      "isPrimitive": true }, 
    { 
    /*Patient Resource.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The billable period for which charges are being submitted.
     */  "name": "billablePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The date when the EOB was created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The person who created the explanation of benefit.
     */  "name": "enterer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The insurer which is responsible for the explanation of benefit.
     */  "name": "insurer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The provider which is responsible for the claim.
     */  "name": "provider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The referral resource which lists the date, practitioner, reason and other supporting information.
     */  "name": "referral", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Facility where the services were provided.
     */  "name": "facility", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The business identifier for the instance: invoice number, claim number, pre-determination or pre-authorization number.
     */  "name": "claim", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The business identifier for the instance: invoice number, claim number, pre-determination or pre-authorization number.
     */  "name": "claimResponse", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Processing outcome errror, partial or complete processing.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "ClaimProcessingCodes",
      "isPrimitive": true }, 
    { 
    /*A description of the status of the adjudication.
     */  "name": "disposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Other claims which are related to this claim such as prior claim versions or for related services.
     */  "name": "related", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Related",
      "isPrimitive": false }, 
    { 
    /*Prescription to support the dispensing of Pharmacy or Vision products.
     */  "name": "prescription", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Original prescription which has been superceded by this prescription to support the dispensing of pharmacy services, medications or products. For example, a physician may prescribe a medication which the pharmacy determines is contraindicated, or for which the patient has an intolerance, and therefor issues a new precription for an alternate medication which has the same theraputic intent. The prescription from the pharmacy becomes the 'prescription' and that from the physician becomes the 'original prescription'.
     */  "name": "originalPrescription", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The party to be reimbursed for the services.
     */  "name": "payee", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExplanationOfBenefit.Payee",
      "isPrimitive": false }, 
    { 
    /*Additional information codes regarding exceptions, special considerations, the condition, situation, prior or concurrent issues. Often there are mutiple jurisdiction specific valuesets which are required.
     */  "name": "information", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Information",
      "isPrimitive": false }, 
    { 
    /*The members of the team who provided the overall service as well as their role and whether responsible and qualifications.
     */  "name": "careTeam", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.CareTeam",
      "isPrimitive": false }, 
    { 
    /*Ordered list of patient diagnosis for which care is sought.
     */  "name": "diagnosis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Diagnosis",
      "isPrimitive": false }, 
    { 
    /*Ordered list of patient procedures performed to support the adjudication.
     */  "name": "procedure", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Procedure",
      "isPrimitive": false }, 
    { 
    /*Precedence (primary, secondary, etc.).
     */  "name": "precedence", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Financial instrument by which payment information for health care.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExplanationOfBenefit.Insurance",
      "isPrimitive": false }, 
    { 
    /*An accident which resulted in the need for healthcare services.
     */  "name": "accident", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExplanationOfBenefit.Accident",
      "isPrimitive": false }, 
    { 
    /*First tier of goods and services.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Item",
      "isPrimitive": false }, 
    { 
    /*The first tier service adjudications for payor added services.
     */  "name": "addItem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.AddItem",
      "isPrimitive": false }, 
    { 
    /*Totals for amounts submitted, co-pays, benefits payable etc.
     */  "name": "total", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Total",
      "isPrimitive": false }, 
    { 
    /*Payment details for the claim if the claim has been paid.
     */  "name": "payment", 
    
      "min": "0", 
      "max": "1", 
      "type": "ExplanationOfBenefit.Payment",
      "isPrimitive": false }, 
    { 
    /*The form to be used for printing the content.
     */  "name": "form", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Note text.
     */  "name": "processNote", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.ProcessNote",
      "isPrimitive": false }, 
    { 
    /*Balance by Benefit Category.
     */  "name": "benefitBalance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.BenefitBalance",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Related": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Related",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Other claims which are related to this claim such as prior claim versions or for related services.
     */  "name": "claim", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*For example prior or umbrella.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*An alternate organizational reference to the case or file to which this particular claim pertains - eg Property/Casualy insurer claim # or Workers Compensation case # .
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Payee": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Payee",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of Party to be reimbursed: Subscriber, provider, other.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*organization | patient | practitioner | relatedperson.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Party to be reimbursed: Subscriber, provider, other.
     */  "name": "party", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Information": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Information",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of the information element which serves to provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The general class of the information supplied: information; exception; accident, employment; onset, etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*System and code pertaining to the specific information regarding special conditions relating to the setting, treatment or patient  for which care is sought which may influence the adjudication.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date when or period to which this information refers.
     */
        {   "name": "timingDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "timingPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Additional data or information such as resources, documents, images etc. including references to the data or the actual inclusion of the data.
     */
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*For example, provides the reason for: the additional stay, or missing tooth or any other situation where a reason code is required in addition to the content.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.CareTeam": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.CareTeam",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of careteam which serves to order and provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The members of the team who provided the overall service.
     */  "name": "provider", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner who is billing and responsible for the claimed services rendered to the patient.
     */  "name": "responsible", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The lead, assisting or supervising practitioner and their discipline if a multidisiplinary team.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The qualification which is applicable for this service.
     */  "name": "qualification", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Diagnosis": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Diagnosis",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of diagnosis which serves to provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The diagnosis.
     */
        {   "name": "diagnosisCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "diagnosisReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The type of the Diagnosis, for example: admitting, primary, secondary, discharge.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The package billing code, for example DRG, based on the assigned grouping code system.
     */  "name": "packageCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Procedure": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Procedure",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence of procedures which serves to order and provide a link.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Date and optionally time the procedure was performed .
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The procedure code.
     */
        {   "name": "procedureCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "procedureReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"ExplanationOfBenefit.Insurance": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Insurance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Reference to the program or plan identification, underwriter or payor.
     */  "name": "coverage", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A list of references from the Insurer to which these services pertain.
     */  "name": "preAuthRef", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ExplanationOfBenefit.Accident": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Accident",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Date of an accident which these services are addressing.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Type of accident: work, auto, etc.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Where the accident occurred.
     */
        {   "name": "locationAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "locationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"ExplanationOfBenefit.Item": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Careteam applicable for this service or product line.
     */  "name": "careTeamSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Diagnosis applicable for this service or product line.
     */  "name": "diagnosisSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Procedures applicable for this service or product line.
     */  "name": "procedureSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Exceptions, special conditions and supporting information pplicable for this service or product line.
     */  "name": "informationSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The type of reveneu or cost center providing the product and/or service.
     */  "name": "revenue", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Health Care Service Type Codes  to identify the classification of service or benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If this is an actual service or product line, ie. not a Group, then use code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI). If a grouping item then use a group code to indicate the type of thing being grouped eg. 'glasses' or 'compound'.
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*For programs which require reson codes for the inclusion, covering, of this billed item under the program or sub-program.
     */  "name": "programCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date or dates when the enclosed suite of services were performed or completed.
     */
        {   "name": "servicedDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "servicedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Where the service was provided.
     */
        {   "name": "locationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "locationAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "locationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*If the item is a node then this is the fee for the product or service, otherwise this is the total of the fees for the children of the group.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The quantity times the unit price for an addittional service or product or charge. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of Unique Device Identifiers associated with this line item.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Physical service site on the patient (limb, tooth, etc.).
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A region or surface of the site, eg. limb region or tooth surface(s).
     */  "name": "subSite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A billed item may include goods or services provided in multiple encounters.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Adjudication",
      "isPrimitive": false }, 
    { 
    /*Second tier of goods and services.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Detail",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Adjudication": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Adjudication",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code indicating: Co-Pay, deductable, elegible, benefit, tax, etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Adjudication reason such as limit reached.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Monitory amount associated with the code.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A non-monetary value for example a percentage. Mutually exclusive to the amount element above.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"ExplanationOfBenefit.Detail": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Detail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The type of reveneu or cost center providing the product and/or service.
     */  "name": "revenue", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Health Care Service Type Codes  to identify the classification of service or benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If this is an actual service or product line, ie. not a Group, then use code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI). If a grouping item then use a group code to indicate the type of thing being grouped eg. 'glasses' or 'compound'.
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*For programs which require reson codes for the inclusion, covering, of this billed item under the program or sub-program.
     */  "name": "programCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*If the item is a node then this is the fee for the product or service, otherwise this is the total of the fees for the children of the group.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The quantity times the unit price for an addittional service or product or charge. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of Unique Device Identifiers associated with this line item.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Adjudication",
      "isPrimitive": false }, 
    { 
    /*Third tier of goods and services.
     */  "name": "subDetail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.SubDetail",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.SubDetail": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.SubDetail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequence", 
    
      "min": "1", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The type of reveneu or cost center providing the product and/or service.
     */  "name": "revenue", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Health Care Service Type Codes  to identify the classification of service or benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI).
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*For programs which require reson codes for the inclusion, covering, of this billed item under the program or sub-program.
     */  "name": "programCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of repetitions of a service or product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The fee for an addittional service or product or charge.
     */  "name": "unitPrice", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A real number that represents a multiplier used in determining the overall value of services delivered and/or goods received. The concept of a Factor allows for a discount or surcharge multiplier to be applied to a monetary amount.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The quantity times the unit price for an addittional service or product or charge. For example, the formula: unit Quantity * unit Price (Cost per Point) * factor Number  * points = net Amount. Quantity, factor and points are assumed to be 1 if not supplied.
     */  "name": "net", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of Unique Device Identifiers associated with this line item.
     */  "name": "udi", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Adjudication",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.AddItem": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.AddItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*List of input service items which this service line is intended to replace.
     */  "name": "itemSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The sequence number of the addition within the line item submitted which contains the error. This value is omitted when the error is not related to an Addition.
     */  "name": "detailSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The sequence number of the addition within the line item submitted which contains the error. This value is omitted when the error is not related to an Addition.
     */  "name": "subDetailSequence", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*If this is an actual service or product line, ie. not a Group, then use code to indicate the Professional Service or Product supplied (eg. CTP, HCPCS,USCLS,ICD10, NCPDP,DIN,ACHI,CCI). If a grouping item then use a group code to indicate the type of thing being grouped eg. 'glasses' or 'compound'.
     */  "name": "service", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Item typification or modifiers codes, eg for Oral whether the treatment is cosmetic or associated with TMJ, or for medical whether the treatment was outside the clinic or out of office hours.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The fee charged for the professional service or product.
     */  "name": "fee", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*A list of note references to the notes provided below.
     */  "name": "noteNumber", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The adjudications results.
     */  "name": "adjudication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Adjudication",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Total": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Total",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code indicating: Submitted, Co-Pay, deductable, elegible, benefit, tax, etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Monitory amount associated with the code.
     */  "name": "amount", 
    
      "min": "1", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Payment": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Payment",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether this represents partial or complete payment of the claim.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Adjustment to the payment of this transaction which is not related to adjudication of this transaction.
     */  "name": "adjustment", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Reason for the payment adjustment.
     */  "name": "adjustmentReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Estimated payment date.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Payable less any payment adjustment.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Payment identifer.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.ProcessNote": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.ProcessNote",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An integer associated with each note which may be referred to from each service line item.
     */  "name": "number", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The note purpose: Print/Display.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "NoteType",
      "isPrimitive": true }, 
    { 
    /*The note text.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. "en" for English, or "en-US" for American English versus "en-EN" for England English.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.BenefitBalance": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.BenefitBalance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Dental, Vision, Medical, Pharmacy, Rehab etc.
     */  "name": "category", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Dental: basic, major, ortho; Vision exam, glasses, contacts; etc.
     */  "name": "subCategory", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*True if the indicated class of service is excluded from the plan, missing or False indicated the service is included in the coverage.
     */  "name": "excluded", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A short name or tag for the benefit, for example MED01, or DENT2.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A richer description of the benefit, for example 'DENT2 covers 100% of basic, 50% of major but exclused Ortho, Implants and Costmetic services'.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Network designation.
     */  "name": "network", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Unit designation: individual or family.
     */  "name": "unit", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The term or period of the values such as 'maximum lifetime benefit' or 'maximum annual vistis'.
     */  "name": "term", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Benefits Used to date.
     */  "name": "financial", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ExplanationOfBenefit.Financial",
      "isPrimitive": false }, 
  ]
},
"ExplanationOfBenefit.Financial": {
    /*This resource provides: the claim details; adjudication details from the processing of a Claim; and optionally account balance information, for informing the subscriber of the benefits provided.
     */
  "name": "ExplanationOfBenefit.Financial",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Deductable, visits, benefit amount.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Benefits allowed.
     */
        {   "name": "allowedUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "allowedString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "allowedMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Benefits used.
     */
        {   "name": "usedUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "usedMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
    ], 
  ]
},
"ExplanationOfBenefitStatus": {
    /*A code specifying the state of the resource instance.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExplanationOfBenefitStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ExplanationOfBenefitStatus-list" }, 
  ],
  "elems": [
  ]
},
"FamilyMemberHistory": {
    /*Significant health conditions for a person related to the patient relevant in the context of care for the patient.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FamilyMemberHistory",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this family member history by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A protocol or questionnaire that was adhered to in whole or in part by this event.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A code specifying the status of the record of the family history of a specific family member.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "FamilyHistoryStatus",
      "isPrimitive": true }, 
    { 
    /*Describes why the family member's history is not available.
     */  "name": "dataAbsentReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The person who this history concerns.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date (and possibly time) when the family member history was recorded or last updated.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*This will either be a name or a description; e.g. "Aunt Susan", "my cousin with the red hair".
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of relationship this person has to the patient (father, mother, brother etc.).
     */  "name": "relationship", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Administrative Gender - the gender that the relative is considered to have for administration and record keeping purposes.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "AdministrativeGender",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The actual or approximate date of birth of the relative.
     */
        {   "name": "bornPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "bornDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "bornString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    [ /* Choice */ 
    /*The age of the relative at the time the family member history is recorded.
     */
        {   "name": "ageAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "ageRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "ageString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*If true, indicates that the age value specified is an estimated value.
     */  "name": "estimatedAge", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Deceased flag or the actual or approximate age of the relative at the time of death for the family member history record.
     */
        {   "name": "deceasedBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "deceasedAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "deceasedRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "deceasedDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "deceasedString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Describes why the family member history occurred in coded or textual form.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates a Condition, Observation, AllergyIntolerance, or QuestionnaireResponse that justifies this family member history event.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*This property allows a non condition-specific note to the made about the related person. Ideally, the note would be in the condition property, but this is not always possible.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*The significant Conditions (or condition) that the family member had. This is a repeating section to allow a system to represent more than one condition per resource, though there is nothing stopping multiple resources - one per condition.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "FamilyMemberHistory.Condition",
      "isPrimitive": false }, 
  ]
},
"FamilyMemberHistory.Condition": {
    /*Significant health conditions for a person related to the patient relevant in the context of care for the patient.
     */
  "name": "FamilyMemberHistory.Condition",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The actual condition specified. Could be a coded condition (like MI or Diabetes) or a less specific string like 'cancer' depending on how much is known about the condition and the capabilities of the creating system.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates what happened as a result of this condition.  If the condition resulted in death, deceased date is captured on the relation.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Either the age of onset, range of approximate age or descriptive string can be recorded.  For conditions with multiple occurrences, this describes the first known occurrence.
     */
        {   "name": "onsetAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "onsetRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "onsetPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "onsetString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*An area where general notes can be placed about this specific condition.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"FamilyHistoryStatus": {
    /*A code that identifies the status of the family history record.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FamilyHistoryStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FamilyHistoryStatus-list" }, 
  ],
  "elems": [
  ]
},
"Flag": {
    /*Prospective warnings of potential issues when providing care to the patient.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Flag",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this flag by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Supports basic workflow.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "FlagStatus",
      "isPrimitive": true }, 
    { 
    /*Allows a flag to be divided into different categories like clinical, administrative etc. Intended to be used as a means of filtering which flags are displayed to particular user or in a given context.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The coded value or textual component of the flag to display to the user.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient, location, group, organization, or practitioner etc. this is about record this flag is associated with.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The period of time from the activation of the flag to inactivation of the flag. If the flag is active, the end of the period should be unspecified.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*This alert is only relevant during the encounter.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The person, organization or device that created the flag.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"FlagStatus": {
    /*Indicates whether this flag is active and needs to be displayed to a user, or whether it is no longer needed or entered in error.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FlagStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FlagStatus-list" }, 
  ],
  "elems": [
  ]
},
"Goal": {
    /*Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Goal",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this goal by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates whether the goal has been reached and is still considered relevant.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "GoalStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates a category the goal falls within.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies the mutually agreed level of importance associated with reaching/sustaining the goal.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Human-readable and/or coded description of a specific desired objective of care, such as "control blood pressure" or "negotiate an obstacle course" or "dance with child at wedding".
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies the patient, group or organization for whom the goal is being established.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date or event after which the goal should begin being pursued.
     */
        {   "name": "startDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "startCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates what should be done by when.
     */  "name": "target", 
    
      "min": "0", 
      "max": "1", 
      "type": "Goal.Target",
      "isPrimitive": false }, 
    { 
    /*Identifies when the current status.  I.e. When initially created, when achieved, when cancelled, etc.
     */  "name": "statusDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Captures the reason for the current status.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates whose goal this is - patient goal, practitioner goal, etc.
     */  "name": "expressedBy", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The identified conditions and other health record elements that are intended to be addressed by the goal.
     */  "name": "addresses", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Any comments related to the goal.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Identifies the change (or lack of change) at the point when the status of the goal is assessed.
     */  "name": "outcomeCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Details of what's changed (or not changed).
     */  "name": "outcomeReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Goal.Target": {
    /*Describes the intended objective(s) for a patient, group or organization care, for example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.
     */
  "name": "Goal.Target",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The parameter whose value is being tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.
     */  "name": "measure", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The target value of the focus to be achieved to signify the fulfillment of the goal, e.g. 150 pounds, 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any focus value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any focus value at or above the low value.
     */
        {   "name": "detailQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "detailRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "detailCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*Indicates either the date or the duration after start by which the goal should be met.
     */
        {   "name": "dueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "dueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
    ], 
  ]
},
"GoalStatus": {
    /*Indicates whether the goal has been met and is still being targetedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GoalStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GoalStatus-list" }, 
  ],
  "elems": [
  ]
},
"GraphDefinition": {
    /*A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GraphDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this graph definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this graph definition is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The identifier that is used to identify this version of the graph definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the graph definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the graph definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this graph definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this graph definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the graph definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the graph definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the graph definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the graph definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate graph definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the graph definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this graph definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The type of FHIR resource at which instances of this graph start.
     */  "name": "start", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*The profile that describes the use of the base resource.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Links this graph makes rules about.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "GraphDefinition.Link",
      "isPrimitive": false }, 
  ]
},
"GraphDefinition.Link": {
    /*A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.
     */
  "name": "GraphDefinition.Link",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A FHIR expression that identifies one of FHIR References to other resources.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Which slice (if profiled).
     */  "name": "sliceName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Minimum occurrences for this link.
     */  "name": "min", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Maximum occurrences for this link.
     */  "name": "max", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Information about why this link is of interest in this graph definition.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Potential target for the link.
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "GraphDefinition.Target",
      "isPrimitive": false }, 
  ]
},
"GraphDefinition.Target": {
    /*A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.
     */
  "name": "GraphDefinition.Target",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of resource this link refers to.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*A set of parameters to look up.
     */  "name": "params", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Profile for the target resource.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Compartment Consistency Rules.
     */  "name": "compartment", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "GraphDefinition.Compartment",
      "isPrimitive": false }, 
    { 
    /*Additional links from target resource.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "GraphDefinition.Link",
      "isPrimitive": false }, 
  ]
},
"GraphDefinition.Compartment": {
    /*A formal computable definition of a graph of resources - that is, a coherent set of resources that form a graph by following references. The Graph Definition resource defines a set and makes rules about the set.
     */
  "name": "GraphDefinition.Compartment",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Defines how the compartment rule is used - whether it it is used to test whether resources are subject to the rule, or whether it is a rule that must be followed.
     */  "name": "use", 
    
      "min": "1", 
      "max": "1", 
      "type": "GraphCompartmentUse",
      "isPrimitive": true }, 
    { 
    /*Identifies the compartment.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CompartmentType",
      "isPrimitive": true }, 
    { 
    /*identical | matching | different | no-rule | custom.
     */  "name": "rule", 
    
      "min": "1", 
      "max": "1", 
      "type": "GraphCompartmentRule",
      "isPrimitive": true }, 
    { 
    /*Custom rule, as a FHIRPath expression.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Documentation for FHIRPath expression.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"GraphCompartmentUse": {
    /*Defines how a compartment rule is usedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GraphCompartmentUse",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GraphCompartmentUse-list" }, 
  ],
  "elems": [
  ]
},
"GraphCompartmentRule": {
    /*How a compartment must be linkedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GraphCompartmentRule",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GraphCompartmentRule-list" }, 
  ],
  "elems": [
  ]
},
"Group": {
    /*Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Group",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique business identifier for this group.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates whether the record for the group is available for use or is merely being retained for historical purposes.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Identifies the broad classification of the kind of resources the group includes.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "GroupType",
      "isPrimitive": true }, 
    { 
    /*If true, indicates that the resource refers to a specific group of real individuals.  If false, the group defines a set of intended individuals.
     */  "name": "actual", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Provides a specific type of resource the group includes; e.g. "cow", "syringe", etc.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A label assigned to the group for human identification and communication.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A count of the number of resource instances that are part of the group.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*Identifies the traits shared by members of the group.
     */  "name": "characteristic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Group.Characteristic",
      "isPrimitive": false }, 
    { 
    /*Identifies the resource instances that are members of the group.
     */  "name": "member", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Group.Member",
      "isPrimitive": false }, 
  ]
},
"Group.Characteristic": {
    /*Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
     */
  "name": "Group.Characteristic",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that identifies the kind of trait being asserted.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The value of the trait that holds (or does not hold - see 'exclude') for members of the group.
     */
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
    { 
    /*If true, indicates the characteristic is one that is NOT held by members of the group.
     */  "name": "exclude", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The period over which the characteristic is tested; e.g. the patient had an operation during the month of June.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Group.Member": {
    /*Represents a defined collection of entities that may be discussed or acted upon collectively but which are not expected to act collectively and are not formally or legally recognized; i.e. a collection of entities that isn't an Organization.
     */
  "name": "Group.Member",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A reference to the entity that is a member of the group. Must be consistent with Group.type.
     */  "name": "entity", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The period that the member was in the group, if known.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*A flag to indicate that the member is no longer in the group, but previously may have been a member.
     */  "name": "inactive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"GroupType": {
    /*Types of resources that are part of groupIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GroupType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GroupType-list" }, 
  ],
  "elems": [
  ]
},
"GuidanceResponse": {
    /*A guidance response is the formal response to a guidance request, including any output parameters returned by the evaluation, as well as the description of any proposed actions to be taken.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GuidanceResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The id of the request associated with this response. If an id was given as part of the request, it will be reproduced here to enable the requester to more easily identify the response in a multi-request scenario.
     */  "name": "requestId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Allows a service to provide  unique, business identifiers for the response.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*An identifier, CodeableConcept or canonical reference to the guidance that was requested.
     */
        {   "name": "moduleUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "moduleCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "moduleCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*The status of the response. If the evaluation is completed successfully, the status will indicate success. However, in order to complete the evaluation, the engine may require more information. In this case, the status will be data-required, and the response will contain a description of the additional required information. If the evaluation completed successfully, but the engine determines that a potentially more accurate response could be provided if more data was available, the status will be data-requested, and the response will contain a description of the additional requested information.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "GuidanceResponseStatus",
      "isPrimitive": true }, 
    { 
    /*The patient for which the request was processed.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Allows the context of the guidance response to be provided if available. In a service context, this would likely be unavailable.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates when the guidance response was processed.
     */  "name": "occurrenceDateTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Provides a reference to the device that performed the guidance.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the reason for the guidance response in coded or textual form.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the reason the request was initiated. This is typically provided as a parameter to the evaluation and echoed by the service, although for some use cases, such as subscription- or event-based scenarios, it may provide an indication of the cause for the response.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Provides a mechanism to communicate additional information about the response.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Messages resulting from the evaluation of the artifact or artifacts. As part of evaluating the request, the engine may produce informational or warning messages. These messages will be provided by this element.
     */  "name": "evaluationMessage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The output parameters of the evaluation, if any. Many modules will result in the return of specific resources such as procedure or communication requests that are returned as part of the operation result. However, modules may define specific outputs that would be returned as the result of the evaluation, and these would be returned in this element.
     */  "name": "outputParameters", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The actions, if any, produced by the evaluation of the artifact.
     */  "name": "result", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*If the evaluation could not be completed due to lack of information, or additional information would potentially result in a more accurate response, this element will a description of the data required in order to proceed with the evaluation. A subsequent request to the service should include this data.
     */  "name": "dataRequirement", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement",
      "isPrimitive": false }, 
  ]
},
"GuidanceResponseStatus": {
    /*The status of a guidance responseIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GuidanceResponseStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GuidanceResponseStatus-list" }, 
  ],
  "elems": [
  ]
},
"HealthcareService": {
    /*The details of a healthcare service available at a location.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "HealthcareService",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*External identifiers for this item.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*This flag is used to mark the record to not be used. This is not used when a center is closed for maintenance, or for holidays, the notAvailable period is to be used for this.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The organization that provides this healthcare service.
     */  "name": "providedBy", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the broad category of service being performed or delivered.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specific type of service that may be delivered or performed.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Collection of specialties handled by the service site. This is more of a medical term.
     */  "name": "specialty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The location(s) where this healthcare service may be provided.
     */  "name": "location", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Further description of the service as it would be presented to a consumer while searching.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Any additional description of the service and/or any specific issues not covered by the other attributes, which can be displayed as further detail under the serviceName.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Extra details about the service that can't be placed in the other fields.
     */  "name": "extraDetails", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*If there is a photo/symbol associated with this HealthcareService, it may be included here to facilitate quick identification of the service in a list.
     */  "name": "photo", 
    
      "min": "0", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*List of contacts related to this specific healthcare service.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*The location(s) that this service is available to (not where the service is provided).
     */  "name": "coverageArea", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The code(s) that detail the conditions under which the healthcare service is available/offered.
     */  "name": "serviceProvisionCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Does this service have specific eligibility requirements that need to be met in order to use the service?
     */  "name": "eligibility", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Describes the eligibility conditions for the service.
     */  "name": "eligibilityNote", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Program Names that can be used to categorize the service.
     */  "name": "programName", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Collection of characteristics (attributes).
     */  "name": "characteristic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Ways that the service accepts referrals, if this is not provided then it is implied that no referral is required.
     */  "name": "referralMethod", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates whether or not a prospective consumer will require an appointment for a particular service at a site to be provided by the Organization. Indicates if an appointment is required for access to this service.
     */  "name": "appointmentRequired", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A collection of times that the Service Site is available.
     */  "name": "availableTime", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "HealthcareService.AvailableTime",
      "isPrimitive": false }, 
    { 
    /*The HealthcareService is not available during this period of time due to the provided reason.
     */  "name": "notAvailable", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "HealthcareService.NotAvailable",
      "isPrimitive": false }, 
    { 
    /*A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.
     */  "name": "availabilityExceptions", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Technical endpoints providing access to services operated for the specific healthcare services defined at this resource.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"HealthcareService.AvailableTime": {
    /*The details of a healthcare service available at a location.
     */
  "name": "HealthcareService.AvailableTime",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates which days of the week are available between the start and end Times.
     */  "name": "daysOfWeek", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DaysOfWeek",
      "isPrimitive": true }, 
    { 
    /*Is this always available? (hence times are irrelevant) e.g. 24 hour service.
     */  "name": "allDay", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The opening time of day. Note: If the AllDay flag is set, then this time is ignored.
     */  "name": "availableStartTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
    { 
    /*The closing time of day. Note: If the AllDay flag is set, then this time is ignored.
     */  "name": "availableEndTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
  ]
},
"HealthcareService.NotAvailable": {
    /*The details of a healthcare service available at a location.
     */
  "name": "HealthcareService.NotAvailable",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The reason that can be presented to the user as to why this time is not available.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Service is not available (seasonally or for a public holiday) from this date.
     */  "name": "during", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"DaysOfWeek": {
    /*The days of the week.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "DaysOfWeek",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "DaysOfWeek-list" }, 
  ],
  "elems": [
  ]
},
"ImagingStudy": {
    /*Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImagingStudy",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*DICOM Study Instance UID, and Accession Number.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The current state of the ImagingStudy.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ImagingStudyStatus",
      "isPrimitive": true }, 
    { 
    /*A list of all the series.modality values that are actual acquisition modalities, i.e. those in the DICOM Context Group 29 (value set OID 1.2.840.10008.6.1.19).
     */  "name": "modality", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The subject, typically a patient, of the imaging study.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode at which the request is initiated.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date and time the study started.
     */  "name": "started", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*A list of the diagnostic requests that resulted in this imaging study being performed.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The requesting/referring physician.
     */  "name": "referrer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Who read the study and interpreted the images or other content.
     */  "name": "interpreter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The network service providing access (e.g., query, view, or retrieval) for the study. See implementation notes for information about using DICOM endpoints. A study-level endpoint applies to each series in the study, unless overridden by a series-level endpoint with the same Endpoint.connectionType.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Number of Series in the Study. This value given may be larger than the number of series elements this Resource contains due to resource availability, security, or other factors. This element should be present if any series elements are present.
     */  "name": "numberOfSeries", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*Number of SOP Instances in Study. This value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.
     */  "name": "numberOfInstances", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*A reference to the performed Procedure.
     */  "name": "procedureReference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The code for the performed procedure type.
     */  "name": "procedureCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The principal physical location where the ImagingStudy was performed.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Description of clinical condition indicating why the ImagingStudy was requested.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource whose existence justifies this Study.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Institution-generated description or classification of the Study performed.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Each study has one or more series of images or other content.
     */  "name": "series", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImagingStudy.Series",
      "isPrimitive": false }, 
  ]
},
"ImagingStudy.Series": {
    /*Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
     */
  "name": "ImagingStudy.Series",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Formal identifier for this series.
     */  "name": "identifier", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The numeric identifier of this series in the study.
     */  "name": "number", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*The modality of this series sequence.
     */  "name": "modality", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*A description of the series.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Number of SOP Instances in the Study. The value given may be larger than the number of instance elements this resource contains due to resource availability, security, or other factors. This element should be present if any instance elements are present.
     */  "name": "numberOfInstances", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*The network service providing access (e.g., query, view, or retrieval) for this series. See implementation notes for information about using DICOM endpoints. A series-level endpoint, if present, has precedence over a study-level endpoint with the same Endpoint.connectionType.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The anatomic structures examined. See DICOM Part 16 Annex L (http://dicom.nema.org/medical/dicom/current/output/chtml/part16/chapter_L.html) for DICOM to SNOMED-CT mappings. The bodySite may indicate the laterality of body part imaged; if so, it shall be consistent with any content of ImagingStudy.series.laterality.
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The laterality of the (possibly paired) anatomic structures examined. E.g., the left knee, both lungs, or unpaired abdomen. If present, shall be consistent with any laterality information indicated in ImagingStudy.series.bodySite.
     */  "name": "laterality", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The specimen imaged, e.g., for whole slide imaging of a biopsy.
     */  "name": "specimen", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date and time the series was started.
     */  "name": "started", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Indicates who or what performed the series and how they were involved.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImagingStudy.Performer",
      "isPrimitive": false }, 
    { 
    /*A single SOP instance within the series, e.g. an image, or presentation state.
     */  "name": "instance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImagingStudy.Instance",
      "isPrimitive": false }, 
  ]
},
"ImagingStudy.Performer": {
    /*Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
     */
  "name": "ImagingStudy.Performer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Distinguishes the type of involvement of the performer in the series.
     */  "name": "function", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates who or what performed the series.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ImagingStudy.Instance": {
    /*Representation of the content produced in a DICOM imaging study. A study comprises a set of series, each of which includes a set of Service-Object Pair Instances (SOP Instances - images or other data) acquired or produced in a common context.  A series is of only one modality (e.g. X-ray, CT, MR, ultrasound), but a study may have multiple series of different modalities.
     */
  "name": "ImagingStudy.Instance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Formal identifier for this image or other content.
     */  "name": "identifier", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The number of instance in the series.
     */  "name": "number", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*DICOM instance  type.
     */  "name": "sopClass", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The description of the instance.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ImagingStudyStatus": {
    /*The status of the ImagingStudyIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImagingStudyStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ImagingStudyStatus-list" }, 
  ],
  "elems": [
  ]
},
"Immunization": {
    /*Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Immunization",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique identifier assigned to this immunization record.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the current status of the immunization event.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ImmunizationStatusCodes",
      "isPrimitive": true }, 
    { 
    /*Indicates the reason the immunization event was not performed.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Vaccine that was administered or was to be administered.
     */  "name": "vaccineCode", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient who either received or did not receive the immunization.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The visit or admission or other contact between patient and health care provider the immunization was performed as part of.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date vaccine administered or was to be administered.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*An indication that the content of the record is based on information from the person who administered the vaccine. This reflects the context under which the data was originally recorded.
     */  "name": "primarySource", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The source of the data when the report of the immunization event is not based on information from the person who administered the vaccine.
     */  "name": "reportOrigin", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The service delivery location where the vaccine administration occurred.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Name of vaccine manufacturer.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Lot number of the  vaccine product.
     */  "name": "lotNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Date vaccine batch expires.
     */  "name": "expirationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Body site where vaccine was administered.
     */  "name": "site", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The path by which the vaccine product is taken into the body.
     */  "name": "route", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The quantity of vaccine product that was administered.
     */  "name": "doseQuantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Indicates who performed the immunization event.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Immunization.Performer",
      "isPrimitive": false }, 
    { 
    /*Extra information about the immunization that is not conveyed by the other attributes.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Reasons why the vaccine was administered.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Condition, Observation or DiagnosticReport that supports why the immunization was administered.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indication if a dose is considered to be subpotent. By default, a dose should be considered to be potent.
     */  "name": "isPotent", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Reason why a dose is considered to be subpotent.
     */  "name": "subpotentReason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Educational material presented to the patient (or guardian) at the time of vaccine administration.
     */  "name": "education", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Immunization.Education",
      "isPrimitive": false }, 
    { 
    /*Indicates a patient's eligibility for a funding program.
     */  "name": "programEligibility", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the source of the vaccine actually administered. This may be different than the patient eligibility (e.g. the patient may be eligible for a publically purchased vaccine but due to inventory issues, vaccine purchased with private funds was actually administered).
     */  "name": "fundingSource", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Immunization.Performer": {
    /*Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
     */
  "name": "Immunization.Performer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the type of performance (e.g. ordering provider, administering provider, etc.).
     */  "name": "function", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The practitioner or organization who performed the action.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Immunization.Education": {
    /*Describes the event of a patient being administered a vaccine or a record of an immunization as reported by a patient, a clinician or another party.
     */
  "name": "Immunization.Education",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier of the material presented to the patient.
     */  "name": "documentType", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Reference pointer to the educational material given to the patient if the information was on line.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Date the educational material was published.
     */  "name": "publicationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Date the educational material was given to the patient.
     */  "name": "presentationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"ImmunizationStatusCodes": {
    /*A set of codes indicating the current status of an ImmunizationIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImmunizationStatusCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ImmunizationStatusCodes-list" }, 
  ],
  "elems": [
  ]
},
"ImmunizationEvaluation": {
    /*Describes a comparison of an immunization event against published recommendations to determine if the administration is "valid" in relation to those  recommendations.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImmunizationEvaluation",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique identifier assigned to this immunization evaluation record.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the current status of the evaluation of the vaccination administration event.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ImmunizationEvaluationStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The individual for whom the evaluation is being done.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date the evaluation of the vaccine administration event was performed.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Indicates the authority who published the protocol (e.g. ACIP).
     */  "name": "authority", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The vaccine preventable disease the dose is being evaluated against.
     */  "name": "targetDisease", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The vaccine administration event being evaluated.
     */  "name": "immunizationEvent", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates if the dose is valid or not valid with respect to the published recommendations.
     */  "name": "doseStatus", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Provides an explanation as to why the vaccine administration event is valid or not relative to the published recommendations.
     */  "name": "doseStatusReason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Additional information about the evaluation.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*One possible path to achieve presumed immunity against a disease - within the context of an authority.
     */  "name": "series", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Nominal position in a series.
     */
        {   "name": "doseNumberPositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "doseNumberString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    [ /* Choice */ 
    /*The recommended number of doses to achieve immunity.
     */
        {   "name": "seriesDosesPositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "seriesDosesString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
  ]
},
"ImmunizationEvaluationStatusCodes": {
    /*The status of the evaluation being doneIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImmunizationEvaluationStatusCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ImmunizationEvaluationStatusCodes-list" }, 
  ],
  "elems": [
  ]
},
"ImmunizationRecommendation": {
    /*A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImmunizationRecommendation",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique identifier assigned to this particular recommendation record.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The patient the recommendation(s) are for.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date the immunization recommendation(s) were created.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Indicates the authority who published the protocol (e.g. ACIP).
     */  "name": "authority", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Vaccine administration recommendations.
     */  "name": "recommendation", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ImmunizationRecommendation.Recommendation",
      "isPrimitive": false }, 
  ]
},
"ImmunizationRecommendation.Recommendation": {
    /*A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.
     */
  "name": "ImmunizationRecommendation.Recommendation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Vaccine(s) or vaccine group that pertain to the recommendation.
     */  "name": "vaccineCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The targeted disease for the recommendation.
     */  "name": "targetDisease", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Vaccine(s) which should not be used to fulfill the recommendation.
     */  "name": "contraindicatedVaccineCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the patient status with respect to the path to immunity for the target disease.
     */  "name": "forecastStatus", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The reason for the assigned forecast status.
     */  "name": "forecastReason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Vaccine date recommendations.  For example, earliest date to administer, latest date to administer, etc.
     */  "name": "dateCriterion", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImmunizationRecommendation.DateCriterion",
      "isPrimitive": false }, 
    { 
    /*Contains the description about the protocol under which the vaccine was administered.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*One possible path to achieve presumed immunity against a disease - within the context of an authority.
     */  "name": "series", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Nominal position of the recommended dose in a series (e.g. dose 2 is the next recommended dose).
     */
        {   "name": "doseNumberPositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "doseNumberString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    [ /* Choice */ 
    /*The recommended number of doses to achieve immunity.
     */
        {   "name": "seriesDosesPositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "seriesDosesString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Immunization event history and/or evaluation that supports the status and recommendation.
     */  "name": "supportingImmunization", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Patient Information that supports the status and recommendation.  This includes patient observations, adverse reactions and allergy/intolerance information.
     */  "name": "supportingPatientInformation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ImmunizationRecommendation.DateCriterion": {
    /*A patient's point-in-time set of recommendations (i.e. forecasting) according to a published schedule with optional supporting justification.
     */
  "name": "ImmunizationRecommendation.DateCriterion",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Date classification of recommendation.  For example, earliest date to give, latest date to give, etc.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The date whose meaning is specified by dateCriterion.code.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ImplementationGuide",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this implementation guide when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this implementation guide is (or will be) published.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The identifier that is used to identify this version of the implementation guide when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the implementation guide author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the implementation guide. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this implementation guide. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this implementation guide is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the implementation guide was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the implementation guide changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the implementation guide.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the implementation guide from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate implementation guide instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the implementation guide is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A copyright statement relating to the implementation guide and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the implementation guide.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The version of the FHIR specification on which this ImplementationGuide is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 3.3.0 for this version.
     */  "name": "fhirVersion", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Another implementation guide that this implementation depends on. Typically, an implementation guide uses value sets, profiles etc.defined in other implementation guides.
     */  "name": "dependsOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.DependsOn",
      "isPrimitive": false }, 
    { 
    /*A set of profiles that all resources covered by this implementation guide must conform to.
     */  "name": "global", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Global",
      "isPrimitive": false }, 
    { 
    /*The information needed by an IG publisher tool to publish the whole implementation guide.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "ImplementationGuide.Definition",
      "isPrimitive": false }, 
    { 
    /*Information about an assembled implementation guide, created by the publication tooling.
     */  "name": "manifest", 
    
      "min": "0", 
      "max": "1", 
      "type": "ImplementationGuide.Manifest",
      "isPrimitive": false }, 
  ]
},
"ImplementationGuide.DependsOn": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.DependsOn",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The canonical URL of the Implementation guide for the dependency.
     */  "name": "uri", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The version of the IG that is depended on, when the correct version is required to understand the IG correctly.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Global": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Global",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of resource that all instances must conform to.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*A reference to the profile that all instances must conform to.
     */  "name": "profile", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Definition": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Definition",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A logical group of resources. Logical groups can be used when building pages.
     */  "name": "package", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Package",
      "isPrimitive": false }, 
    { 
    /*A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.
     */  "name": "resource", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Resource",
      "isPrimitive": false }, 
    { 
    /*A page / section in the implementation guide. The root page is the implementation guide home page.
     */  "name": "page", 
    
      "min": "0", 
      "max": "1", 
      "type": "ImplementationGuide.Page",
      "isPrimitive": false }, 
    { 
    /*Defines how IG is built by tools.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Parameter",
      "isPrimitive": false }, 
    { 
    /*A template for building resources.
     */  "name": "template", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Template",
      "isPrimitive": false }, 
  ]
},
"ImplementationGuide.Package": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Package",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name for the group, as used in ImplementationGuide.definition.resource.package and ImplementationGuide.definition.page.package.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Human readable text describing the package.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Resource": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Resource",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Where this resource is found.
     */  "name": "reference", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A human assigned name for the resource. All resources SHOULD have a name, but the name may be extracted from the resource (e.g. ValueSet.name).
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A description of the reason that a resource has been included in the implementation guide.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.
     */
        {   "name": "exampleBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "exampleCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
    { 
    /*Reference to the id of the pack this resource appears in.
     */  "name": "package", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Page": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Page",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The source address for the page.
     */
        {   "name": "nameUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "nameReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*A short title used to represent this page in navigational structures such as table of contents, bread crumbs, etc.
     */  "name": "title", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A code that indicates how the page is generated.
     */  "name": "generation", 
    
      "min": "1", 
      "max": "1", 
      "type": "GuidePageGeneration",
      "isPrimitive": true }, 
    { 
    /*Nested Pages/Sections under this page.
     */  "name": "page", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Page",
      "isPrimitive": false }, 
  ]
},
"ImplementationGuide.Parameter": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*apply-business-version | apply-jurisdiction | path-resource | path-pages | path-tx-cache | expansion-profile | rule-broken-links | generate-xml | generate-json | generate-turtle | html-template.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "GuideParameterCode",
      "isPrimitive": true }, 
    { 
    /*Value for named type.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Template": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Template",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of template specified.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The source location for the template.
     */  "name": "source", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The scope in which the template applies.
     */  "name": "scope", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Manifest": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Manifest",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A pointer to official web page, PDF or other rendering of the implementation guide.
     */  "name": "rendering", 
    
      "min": "0", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
    { 
    /*A resource that is part of the implementation guide. Conformance resources (value set, structure definition, capability statements etc.) are obvious candidates for inclusion, but any kind of resource can be included as an example resource.
     */  "name": "resource", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Resource1",
      "isPrimitive": false }, 
    { 
    /*Information about a page within the IG.
     */  "name": "page", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ImplementationGuide.Page1",
      "isPrimitive": false }, 
    { 
    /*Indicates a relative path to an image that exists within the IG.
     */  "name": "image", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates the relative path of an additional non-page, non-image file that is part of the IG - e.g. zip, jar and similar files that could be the target of a hyperlink in a derived IG.
     */  "name": "other", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Resource1": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Resource1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Where this resource is found.
     */  "name": "reference", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*If true or a reference, indicates the resource is an example instance.  If a reference is present, indicates that the example is an example of the specified profile.
     */
        {   "name": "exampleBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "exampleCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
    { 
    /*The relative path for primary page for this resource within the IG.
     */  "name": "relativePath", 
    
      "min": "0", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
  ]
},
"ImplementationGuide.Page1": {
    /*A set of rules of how FHIR is used to solve a particular problem. This resource is used to gather all the parts of an implementation guide into a logical whole and to publish a computable definition of all the parts.
     */
  "name": "ImplementationGuide.Page1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Relative path to the page.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Label for the page intended for human display.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The name of an anchor available on the page.
     */  "name": "anchor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"GuideParameterCode": {
    /*Code of parameter that is input to the guideIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GuideParameterCode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GuideParameterCode-list" }, 
  ],
  "elems": [
  ]
},
"GuidePageGeneration": {
    /*A code that indicates how the page is generatedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "GuidePageGeneration",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "GuidePageGeneration-list" }, 
  ],
  "elems": [
  ]
},
"Invoice": {
    /*Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Invoice",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier of this Invoice, often used for reference in corresponcence about this invoice or for tracking of payments.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The current state of the Invoice.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "InvoiceStatus",
      "isPrimitive": true }, 
    { 
    /*In case of Invoice cancellation a reason must be given (entered in error, superseded by corrected invoice etc.).
     */  "name": "cancelledReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Type of Invoice depending on domain, realm an usage (eg. internal/external, dental, preliminary).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The individual or set of individuals receiving the goods and services billed in this invoice.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The individual or Organization responsible for balancing of this invoice.
     */  "name": "recipient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Date/time(s) of when this Invoice was posted.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Indicates who or what performed or participated in the charged service.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Invoice.Participant",
      "isPrimitive": false }, 
    { 
    /*The organizationissuing the Invoice.
     */  "name": "issuer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Account which is supposed to be balanced with this Invoice.
     */  "name": "account", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Each line item represents one charge for goods ond services rendered. Details such as date, code and amount are found in the referenced ChargeItem resource.
     */  "name": "lineItem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Invoice.LineItem",
      "isPrimitive": false }, 
    { 
    /*The total amount for the Invoice may be calculated as the sum of the line items with surcharges/deductions that apply in certain conditions.  The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the total price was calculated.
     */  "name": "totalPriceComponent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Invoice.PriceComponent",
      "isPrimitive": false }, 
    { 
    /*Invoice total , taxes excluded.
     */  "name": "totalNet", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Invoice total, tax included.
     */  "name": "totalGross", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Payment details such as banking details, period of payment, deductables, methods of payment.
     */  "name": "paymentTerms", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Comments made about the invoice by the issuer, subject or other participants.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"Invoice.Participant": {
    /*Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.
     */
  "name": "Invoice.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes the type of involvement (e.g. transcriptionist, creator etc.). If the invoice has been created automatically, the Participant may be a billing engine or another kind of device.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The device, practitioner, etc. who performed or participated in the service.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Invoice.LineItem": {
    /*Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.
     */
  "name": "Invoice.LineItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Sequence in which the items appear on the invoice.
     */  "name": "sequence", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The ChargeItem contains information such as the billing code, date, amount etc.
     */  "name": "chargeItem", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The price for a ChargeItem may be calculated as a base price with surcharges/deductions that apply in certain conditions. A ChargeItemDefinition resource that defines the prices, factors and conditions that apply to a billing code is currently under developement. The priceComponent element can be used to offer transparency to the recipient of the Invoice of how the prices have been calculated.
     */  "name": "priceComponent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Invoice.PriceComponent",
      "isPrimitive": false }, 
  ]
},
"Invoice.PriceComponent": {
    /*Invoice containing collected ChargeItems from an Account with calculated individual and total price for Billing purpose.
     */
  "name": "Invoice.PriceComponent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This code identifies the type of the component.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "InvoicePriceComponentType",
      "isPrimitive": true }, 
    { 
    /*A code that identifies the component. Codes may be used to differentiate between kinds of taxes, surcharges, discounts etc.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The amount calculated for this component.
     */  "name": "factor", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*The factor that has been applied on the base price for calculating this component.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"InvoiceStatus": {
    /*Codes identifying the lifecycle stage of an InvoiceIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "InvoiceStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "InvoiceStatus-list" }, 
  ],
  "elems": [
  ]
},
"InvoicePriceComponentType": {
    /*Codes indicating the details of what is/was done.  These will vary significantly based on the type of request resource and will often be example/preferred rather than extensible/required.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "InvoicePriceComponentType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "InvoicePriceComponentType-list" }, 
  ],
  "elems": [
  ]
},
"ItemInstance": {
    /*A physical, countable instance of an item, for example one box or one unit.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ItemInstance",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The quantity or amount of instances. For example if several units are being counted for inventory, this quantity can be more than one, provided they are not unique. Seriallized items are considered unique and as such would have a quantity max 1. This element is required and its presence asserts that the reource refers to a physical item.
     */  "name": "count", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The location where the item is phisically located.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The patient that the item is associated with (implanted in, given to).
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The manufacture or preparation date and time. Times are necessary for several examples - for example biologically derived products, prepared or coumpounded medication, rapidly decaying isotopes.
     */  "name": "manufactureDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The expiry or preparation date and time.
     */  "name": "expiryDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The Software version associated with the device, typically only used for devices with embedded software or firmware.
     */  "name": "currentSWVersion", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The lot or batch number.
     */  "name": "lotNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The serial number if available.
     */  "name": "serialNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The machine-readable AIDC string in base64 encoding. Can correspond to the UDI pattern in devices.
     */  "name": "carrierAIDC", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The human-readable barcode string. Can correspond to the UDI pattern in devices.
     */  "name": "carrierHRF", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Library": {
    /*The Library resource is a general-purpose container for knowledge asset definitions. It can be used to describe and expose existing knowledge assets such as logic libraries and information model descriptions, as well as to describe a collection of knowledge assets.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Library",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this library when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this library is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this library when it is represented in other formats, or referenced in a specification, model, design or an instance. e.g. CMS or NQF identifiers for a measure artifact. Note that at least one identifier is required for non-experimental active artifacts.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the library when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the library author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the library. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the library.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An explanatory or alternate title for the library giving additional information about its content.
     */  "name": "subtitle", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this library. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this library is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Identifies the type of library such as a Logic Library, Model Definition, Asset Collection, or Module Definition.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*A code or group definition that describes the intended subject of the contents of the library.
     */
        {   "name": "subjectCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "subjectReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date  (and optionally time) when the library was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the library changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the library.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the library from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate library instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the library is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this library is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A detailed description of how the library is used from a clinical perspective.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the library and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the library.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
     */  "name": "approvalDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
     */  "name": "lastReviewDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The period during which the library content was or is planned to be in active use.
     */  "name": "effectivePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Descriptive topics related to the content of the library. Topics provide a high-level categorization of the library that can be useful for filtering and searching.
     */  "name": "topic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A contributor to the content of the library, including authors, editors, reviewers, and endorsers.
     */  "name": "contributor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contributor",
      "isPrimitive": false }, 
    { 
    /*Related artifacts such as additional documentation, justification, or bibliographic references.
     */  "name": "relatedArtifact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*The parameter element defines parameters used by the library.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ParameterDefinition",
      "isPrimitive": false }, 
    { 
    /*Describes a set of data that must be provided in order to be able to successfully perform the computations defined by the library.
     */  "name": "dataRequirement", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement",
      "isPrimitive": false }, 
    { 
    /*The content of the library as an Attachment. The content may be a reference to a url, or may be directly embedded as a base-64 string. Either way, the contentType of the attachment determines how to interpret the content.
     */  "name": "content", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
  ]
},
"Linkage": {
    /*Identifies two or more records (resource instances) that are referring to the same real-world "occurrence".If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Linkage",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates whether the asserted set of linkages are considered to be "in effect".
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Identifies the user or organization responsible for asserting the linkages and who establishes the context for evaluating the nature of each linkage.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies one of the records that is considered to refer to the same real-world occurrence as well as how the items should be evaluated within the collection of linked items.
     */  "name": "item", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Linkage.Item",
      "isPrimitive": false }, 
  ]
},
"Linkage.Item": {
    /*Identifies two or more records (resource instances) that are referring to the same real-world "occurrence".
     */
  "name": "Linkage.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Distinguishes which item is "source of truth" (if any) and which items are no longer considered to be current representations.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "LinkageType",
      "isPrimitive": true }, 
    { 
    /*The resource instance being linked as part of the group.
     */  "name": "resource", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"LinkageType": {
    /*Used to distinguish different roles a resource can play within a set of linked resourcesIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "LinkageType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "LinkageType-list" }, 
  ],
  "elems": [
  ]
},
"List": {
    /*A set of information summarized from a list of other resources.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "List",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for the List assigned for business purposes outside the context of FHIR.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Indicates the current state of this list.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ListStatus",
      "isPrimitive": true }, 
    { 
    /*How this list was prepared - whether it is a working list that is suitable for being maintained on an ongoing basis, or if it represents a snapshot of a list of items from another source, or whether it is a prepared list where items may be marked as added, modified or deleted.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "ListMode",
      "isPrimitive": true }, 
    { 
    /*A label for the list assigned by the author.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*This code defines the purpose of the list - why it was created.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The common subject (or patient) of the resources that are in the list if there is one.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter that is the context in which this list was created.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date that the list was prepared.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The entity responsible for deciding what the contents of the list were. Where the list was created by a human, this is the same as the author of the list.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*What order applies to the items in the list.
     */  "name": "orderedBy", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Comments that apply to the overall list.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Entries in this list.
     */  "name": "entry", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "List.Entry",
      "isPrimitive": false }, 
    { 
    /*If the list is empty, why the list is empty.
     */  "name": "emptyReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"List.Entry": {
    /*A set of information summarized from a list of other resources.
     */
  "name": "List.Entry",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The flag allows the system constructing the list to indicate the role and significance of the item in the list.
     */  "name": "flag", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*True if this item is marked as deleted in the list.
     */  "name": "deleted", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*When this item was added to the list.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*A reference to the actual resource from which data was derived.
     */  "name": "item", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ListStatus": {
    /*The current state of the listIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ListStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ListStatus-list" }, 
  ],
  "elems": [
  ]
},
"Location": {
    /*Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Location",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique code or number identifying the location to its users.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status property covers the general availability of the resource, not the current value which may be covered by the operationStatus, or by a schedule/slots if they are configured for the location.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "LocationStatus",
      "isPrimitive": true }, 
    { 
    /*The Operational status covers operation values most relevant to beds (but can also apply to rooms/units/chair/etc. such as an isolation unit/dialysis chair). This typically covers concepts such as contamination, housekeeping and other activities like maintenance.
     */  "name": "operationalStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Name of the location as used by humans. Does not need to be unique.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of alternate names that the location is known as or was known as in the past.
     */  "name": "alias", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Description of the Location, which helps in finding or referencing the place.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates whether a resource instance represents a specific location or a class of locations.
     */  "name": "mode", 
    
      "min": "0", 
      "max": "1", 
      "type": "LocationMode",
      "isPrimitive": true }, 
    { 
    /*Indicates the type of function performed at the location.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The contact details of communication devices available at the location. This can include phone numbers, fax numbers, mobile numbers, email addresses and web sites.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Physical location.
     */  "name": "address", 
    
      "min": "0", 
      "max": "1", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*Physical form of the location, e.g. building, room, vehicle, road.
     */  "name": "physicalType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The absolute geographic location of the Location, expressed using the WGS84 datum (This is the same co-ordinate system used in KML).
     */  "name": "position", 
    
      "min": "0", 
      "max": "1", 
      "type": "Location.Position",
      "isPrimitive": false }, 
    { 
    /*The organization responsible for the provisioning and upkeep of the location.
     */  "name": "managingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Another Location which this Location is physically part of.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*What days/times during a week is this location usually open.
     */  "name": "hoursOfOperation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Location.HoursOfOperation",
      "isPrimitive": false }, 
    { 
    /*A description of when the locations opening ours are different to normal, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as detailed in the opening hours Times.
     */  "name": "availabilityExceptions", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Technical endpoints providing access to services operated for the location.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Location.Position": {
    /*Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
     */
  "name": "Location.Position",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Longitude. The value domain and the interpretation are the same as for the text of the longitude element in KML (see notes below).
     */  "name": "longitude", 
    
      "min": "1", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Latitude. The value domain and the interpretation are the same as for the text of the latitude element in KML (see notes below).
     */  "name": "latitude", 
    
      "min": "1", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Altitude. The value domain and the interpretation are the same as for the text of the altitude element in KML (see notes below).
     */  "name": "altitude", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"Location.HoursOfOperation": {
    /*Details and position information for a physical place where services are provided and resources and participants may be stored, found, contained, or accommodated.
     */
  "name": "Location.HoursOfOperation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates which days of the week are available between the start and end Times.
     */  "name": "daysOfWeek", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DaysOfWeek",
      "isPrimitive": true }, 
    { 
    /*The Location is open all day.
     */  "name": "allDay", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Time that the Location opens.
     */  "name": "openingTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
    { 
    /*Time that the Location closes.
     */  "name": "closingTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
  ]
},
"LocationMode": {
    /*Indicates whether a resource instance represents a specific location or a class of locations.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "LocationMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "LocationMode-list" }, 
  ],
  "elems": [
  ]
},
"LocationStatus": {
    /*Indicates whether the location is still in use.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "LocationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "LocationStatus-list" }, 
  ],
  "elems": [
  ]
},
"Measure": {
    /*The Measure resource provides the definition of a quality measure.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Measure",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this measure when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this measure is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this measure when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the measure when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the measure author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the measure. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the measure.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An explanatory or alternate title for the measure giving additional information about its content.
     */  "name": "subtitle", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this measure. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this measure is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The intended subjects for the measure. If this element is not provided, a Patient subject is assumed, but the subject of the measure can be anything.
     */
        {   "name": "subjectCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "subjectReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date  (and optionally time) when the measure was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the measure changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the measure.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the measure from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate measure instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the measure is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this measure is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A detailed description, from a clinical perspective, of how the measure is used.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the measure and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the measure.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
     */  "name": "approvalDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
     */  "name": "lastReviewDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The period during which the measure content was or is planned to be in active use.
     */  "name": "effectivePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Descriptive topics related to the content of the measure. Topics provide a high-level categorization grouping types of measures that can be useful for filtering and searching.
     */  "name": "topic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A contributor to the content of the measure, including authors, editors, reviewers, and endorsers.
     */  "name": "contributor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contributor",
      "isPrimitive": false }, 
    { 
    /*Related artifacts such as additional documentation, justification, or bibliographic references.
     */  "name": "relatedArtifact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*A reference to a Library resource containing the formal logic used by the measure.
     */  "name": "library", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Notices and disclaimers regarding the use of the measure or related to intellectual property (such as code systems) referenced by the measure.
     */  "name": "disclaimer", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Indicates how the calculation is performed for the measure, including proportion, ratio, continuous-variable, and cohort. The value set is extensible, allowing additional measure scoring types to be represented.
     */  "name": "scoring", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If this is a composite measure, the scoring method used to combine the component measures to determine the composite score.
     */  "name": "compositeScoring", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates whether the measure is used to examine a process, an outcome over time, a patient-reported outcome, or a structure measure such as utilization.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A description of the risk adjustment factors that may impact the resulting score for the measure and how they may be accounted for when computing and reporting measure results.
     */  "name": "riskAdjustment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Describes how to combine the information calculated, based on logic in each of several populations, into one summarized result.
     */  "name": "rateAggregation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Provides a succinct statement of the need for the measure. Usually includes statements pertaining to importance criterion: impact, gap in care, and evidence.
     */  "name": "rationale", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Provides a summary of relevant clinical guidelines or other clinical recommendations supporting the measure.
     */  "name": "clinicalRecommendationStatement", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Information on whether an increase or decrease in score is the preferred result (e.g., a higher score indicates better quality OR a lower score indicates better quality OR quality is within a range).
     */  "name": "improvementNotation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Provides a description of an individual term used within the measure.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Additional guidance for the measure including how it can be used in a clinical context, and the intent of the measure.
     */  "name": "guidance", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The measure set, e.g. Preventive Care and Screening.
     */  "name": "set", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A group of population criteria for the measure.
     */  "name": "group", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Measure.Group",
      "isPrimitive": false }, 
    { 
    /*The supplemental data criteria for the measure report, specified as either the name of a valid CQL expression within a referenced library, or a valid FHIR Resource Path.
     */  "name": "supplementalData", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Measure.SupplementalData",
      "isPrimitive": false }, 
  ]
},
"Measure.Group": {
    /*The Measure resource provides the definition of a quality measure.
     */
  "name": "Measure.Group",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates a meaning for the group. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing groups to be correlated across measures.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The human readable description of this population group.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A population criteria for the measure.
     */  "name": "population", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Measure.Population",
      "isPrimitive": false }, 
    { 
    /*The stratifier criteria for the measure report, specified as either the name of a valid CQL expression defined within a referenced library or a valid FHIR Resource Path.
     */  "name": "stratifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Measure.Stratifier",
      "isPrimitive": false }, 
  ]
},
"Measure.Population": {
    /*The Measure resource provides the definition of a quality measure.
     */
  "name": "Measure.Population",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of population criteria.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The human readable description of this population criteria.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The name of a valid referenced CQL expression (may be namespaced) that defines this population criteria.
     */  "name": "criteria", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Measure.Stratifier": {
    /*The Measure resource provides the definition of a quality measure.
     */
  "name": "Measure.Stratifier",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates a meaning for the stratifier. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing stratifiers to be correlated across measures.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The human readable description of this stratifier criteria.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The criteria for the stratifier. This must be the name of an expression defined within a referenced library.
     */  "name": "criteria", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The path to an element that defines the stratifier, specified as a valid FHIR resource path.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Measure.SupplementalData": {
    /*The Measure resource provides the definition of a quality measure.
     */
  "name": "Measure.SupplementalData",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates a meaning for the supplemental data. This can be as simple as a unique identifier, or it can establish meaning in a broader context by drawing from a terminology, allowing supplemental data to be correlated across measures.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*An indicator of the intended usage for the supplemental data element. Supplemental data indicates the data is additional information requested to augment the measure information. Risk adjustment factor indicates the data is additional information used to calculate risk adjustment factors when applying a risk model to the measure calculation.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The human readable description of this supplemental data.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The criteria for the supplemental data. This must be the name of a valid expression defined within a referenced library. The criteria defines the data to be returned for this element.
     */  "name": "criteria", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The supplemental data to be supplied as part of the measure response, specified as a valid FHIR Resource Path.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"MeasureReport": {
    /*The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MeasureReport",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A formal identifier that is used to identify this MeasureReport when it is represented in other formats or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The MeasureReport status. No data will be available until the MeasureReport status is complete.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "MeasureReportStatus",
      "isPrimitive": true }, 
    { 
    /*The type of measure report. This may be an individual report, which provides the score for the measure for an individual member of the population; a subject-listing, which returns the list of members that meet the various criteria in the measure; or a summary report, which returns a population count for each of the criteria in the measure.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "MeasureReportType",
      "isPrimitive": true }, 
    { 
    /*A reference to the Measure that was calculated to produce this report.
     */  "name": "measure", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Optional subject identifying the individual or individuals the report is for.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date this measure report was generated.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The individual, location, group, or organization that is reporting the data.
     */  "name": "reporter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The reporting period for which the report was calculated.
     */  "name": "period", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The results of the calculation, one for each population group in the measure.
     */  "name": "group", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MeasureReport.Group",
      "isPrimitive": false }, 
    { 
    /*A reference to a Bundle containing the Resources that were used in the calculation of this measure.
     */  "name": "evaluatedResources", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MeasureReport.Group": {
    /*The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
     */
  "name": "MeasureReport.Group",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The meaning of the population group as defined in the measure definition.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The populations that make up the population group, one for each type of population appropriate for the measure.
     */  "name": "population", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MeasureReport.Population",
      "isPrimitive": false }, 
    { 
    /*The measure score for this population group, calculated as appropriate for the measure type and scoring method, and based on the contents of the populations defined in the group.
     */  "name": "measureScore", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*When a measure includes multiple stratifiers, there will be a stratifier group for each stratifier defined by the measure.
     */  "name": "stratifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MeasureReport.Stratifier",
      "isPrimitive": false }, 
  ]
},
"MeasureReport.Population": {
    /*The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
     */
  "name": "MeasureReport.Population",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of the population.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of members of the population.
     */  "name": "count", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*This element refers to a List of subject level MeasureReport resources, one for each subject in this population.
     */  "name": "subjects", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MeasureReport.Stratifier": {
    /*The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
     */
  "name": "MeasureReport.Stratifier",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The meaning of this stratifier, as defined in the measure definition.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This element contains the results for a single stratum within the stratifier. For example, when stratifying on administrative gender, there will be four strata, one for each possible gender value.
     */  "name": "stratum", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MeasureReport.Stratum",
      "isPrimitive": false }, 
  ]
},
"MeasureReport.Stratum": {
    /*The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
     */
  "name": "MeasureReport.Stratum",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The value for this stratum, expressed as a CodeableConcept. When defining stratifiers on complex values, the value must be rendered such that the value for each stratum within the stratifier is unique.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The populations that make up the stratum, one for each type of population appropriate to the measure.
     */  "name": "population", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MeasureReport.Population1",
      "isPrimitive": false }, 
    { 
    /*The measure score for this stratum, calculated as appropriate for the measure type and scoring method, and based on only the members of this stratum.
     */  "name": "measureScore", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"MeasureReport.Population1": {
    /*The MeasureReport resource contains the results of the calculation of a measure; and optionally a reference to the resources involved in that calculation.
     */
  "name": "MeasureReport.Population1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of the population.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The number of members of the population in this stratum.
     */  "name": "count", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*This element refers to a List of subject level MeasureReport resources, one for each subject in this population in this stratum.
     */  "name": "subjects", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MeasureReportStatus": {
    /*The status of the measure reportIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MeasureReportStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MeasureReportStatus-list" }, 
  ],
  "elems": [
  ]
},
"MeasureReportType": {
    /*The type of the measure reportIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MeasureReportType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MeasureReportType-list" }, 
  ],
  "elems": [
  ]
},
"Media": {
    /*A photo, video, or audio recording acquired or used in healthcare. The actual content may be inline or provided by direct reference.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Media",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers associated with the image - these may include identifiers for the image itself, identifiers for the context of its collection (e.g. series ids) and context ids such as accession numbers or other workflow identifiers.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A procedure that is fulfilled in whole or in part by the creation of this media.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger event of which this particular event is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The current state of the {{title}}.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EventStatus",
      "isPrimitive": true }, 
    { 
    /*A code that classifies whether the media is an image, video or audio recording or some other media category.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Details of the type of the media - usually, how it was acquired (what type of device). If images sourced from a DICOM system, are wrapped in a Media resource, then this is the modality.
     */  "name": "modality", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The name of the imaging view e.g. Lateral or Antero-posterior (AP).
     */  "name": "view", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Who/What this Media is a record of.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care that establishes the context for this media.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date and time(s) at which the media was collected.
     */
        {   "name": "createdDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "createdPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date and time this version of the media was made available to providers, typically after having been reviewed.
     */  "name": "issued", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*The person who administered the collection of the image.
     */  "name": "operator", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes why the event occurred in coded or textual form.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the site on the subject's body where the observation was made (i.e. the target site).
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The name of the device / manufacturer of the device  that was used to make the recording.
     */  "name": "deviceName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The device used to collect the media.
     */  "name": "device", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Height of the image in pixels (photo/video).
     */  "name": "height", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Width of the image in pixels (photo/video).
     */  "name": "width", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The number of frames in a photo. This is used with a multi-page fax, or an imaging acquisition context that takes multiple slices in a single image, or an animated gif. If there is more than one frame, this SHALL have a value in order to alert interface software that a multi-frame capable rendering widget is required.
     */  "name": "frames", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*The duration of the recording in seconds - for audio and video.
     */  "name": "duration", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The actual content of the media - inline or by direct reference to the media source file.
     */  "name": "content", 
    
      "min": "1", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*Comments made about the media by the performer, subject or other participants.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"Medication": {
    /*This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Medication",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code (or set of codes) that specify this medication, or a textual description if no code is available. Usage note: This could be a standard medication code such as a code from RxNorm, SNOMED CT, IDMP etc. It could also be a national or local formulary code, optionally with translations to other code systems.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code to indicate if the medication is in active use.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "MedicationStatus",
      "isPrimitive": true }, 
    { 
    /*Describes the details of the manufacturer of the medication product.  This is not intended to represent the distributor of a medication product.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the form of the item.  Powder; tablets; capsule.
     */  "name": "form", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specific amount of the drug in the packaged product.  For example, when specifying a product that has the same strength (For example, Insulin glargine 100 unit per mL solution for injection), this attribute provides additional clarification of the package amount (For example, 3 mL, 10mL, etc.).
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Identifies a particular constituent of interest in the product.
     */  "name": "ingredient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Medication.Ingredient",
      "isPrimitive": false }, 
    { 
    /*Information that only applies to packages (not products).
     */  "name": "batch", 
    
      "min": "0", 
      "max": "1", 
      "type": "Medication.Batch",
      "isPrimitive": false }, 
  ]
},
"Medication.Ingredient": {
    /*This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.
     */
  "name": "Medication.Ingredient",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The actual ingredient - either a substance (simple ingredient) or another medication.
     */
        {   "name": "itemCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "itemReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indication of whether this ingredient affects the therapeutic action of the drug.
     */  "name": "isActive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Specifies how many (or how much) of the items there are in this Medication.  For example, 250 mg per tablet.  This is expressed as a ratio where the numerator is 250mg and the denominator is 1 tablet.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Ratio",
      "isPrimitive": false }, 
  ]
},
"Medication.Batch": {
    /*This resource is primarily used for the identification and definition of a medication for the purposes of prescribing, dispensing, and administering a medication as well as for making statements about medication use.
     */
  "name": "Medication.Batch",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The assigned lot number of a batch of the specified product.
     */  "name": "lotNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*When this specific batch of product will expire.
     */  "name": "expirationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*An identifier assigned to a drug at the point of manufacturing and repackaging (at the package or pallet level), sufficient to facilitate the identification, validation, authentication, and tracking and tracking of drugs.
     */  "name": "serialNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"MedicationStatus": {
    /*A coded concept defining if the medication is in active useIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MedicationStatus-list" }, 
  ],
  "elems": [
  ]
},
"MedicationAdministration": {
    /*Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationAdministration",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*External identifier - FHIR will generate its own internal identifiers (probably URLs) which do not need to be explicitly managed by the resource.  The identifier here is one that would be used by another non-FHIR system - for example an automated medication pump would provide a record each time it operated; an administration while the patient was off the ward might be made with a different system and entered after the event. This identifier is particularly important when these records require updates.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A protocol, guideline, orderset, or other definition that was adhered to in whole or in part by this event.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A larger event of which this particular event is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Will generally be set to show that the administration has been completed.  For some long running administrations such as infusions, it is possible for an administration to be started but not completed or it may be paused while some other process is under way.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "MedicationAdministrationStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates the type of medication administration and where the medication is expected to be consumed or administered.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the medication that was administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.
     */
        {   "name": "medicationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "medicationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The person or animal or group receiving the medication.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The visit, admission, or other contact between patient and health care provider during which the medication administration was performed.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Additional information (for example, patient height and weight) that supports the administration of the medication.
     */  "name": "supportingInformation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*A specific date/time or interval of time during which the administration took place (or did not take place, when the 'notGiven' attribute is true). For many administrations, such as swallowing a tablet the use of dateTime is more appropriate.
     */
        {   "name": "effectiveDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "effectivePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates who or what performed the medication administration and how they were involved.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicationAdministration.Performer",
      "isPrimitive": false }, 
    { 
    /*A code indicating why the administration was not performed.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code indicating why the medication was given.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Condition or observation that supports why the medication was administered.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The original request, instruction or authority to perform the administration.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The device used in administering the medication to the patient.  For example, a particular infusion pump.
     */  "name": "device", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Extra information about the medication administration that is not conveyed by the other attributes.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Describes the medication dosage information details e.g. dose, rate, site, route, etc.
     */  "name": "dosage", 
    
      "min": "0", 
      "max": "1", 
      "type": "MedicationAdministration.Dosage",
      "isPrimitive": false }, 
    { 
    /*A summary of the events of interest that have occurred, such as when the administration was verified.
     */  "name": "eventHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationAdministration.Performer": {
    /*Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
     */
  "name": "MedicationAdministration.Performer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Distinguishes the type of involvement of the performer in the medication administration.
     */  "name": "function", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates who or what performed the medication administration.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationAdministration.Dosage": {
    /*Describes the event of a patient consuming or otherwise being administered a medication.  This may be as simple as swallowing a tablet or it may be a long running infusion.  Related resources tie this event to the authorizing prescription, and the specific encounter between patient and health care practitioner.
     */
  "name": "MedicationAdministration.Dosage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Free text dosage can be used for cases where the dosage administered is too complex to code. When coded dosage is present, the free text dosage may still be present for display to humans.

The dosage instructions should reflect the dosage of the medication that was administered.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A coded specification of the anatomic site where the medication first entered the body.  For example, "left arm".
     */  "name": "site", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code specifying the route or physiological path of administration of a therapeutic agent into or onto the patient.  For example, topical, intravenous, etc.
     */  "name": "route", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A coded value indicating the method by which the medication is intended to be or was introduced into or on the body.  This attribute will most often NOT be populated.  It is most commonly used for injections.  For example, Slow Push, Deep IV.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The amount of the medication given at one administration event.   Use this value when the administration is essentially an instantaneous event such as a swallowing a tablet or giving an injection.
     */  "name": "dose", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the speed with which the medication was or will be introduced into the patient.  Typically the rate for an infusion e.g. 100 ml per 1 hour or 100 ml/hr.  May also be expressed as a rate per unit of time e.g. 500 ml per 2 hours.  Other examples:  200 mcg/min or 200 mcg/1 minute; 1 liter/8 hours.
     */
        {   "name": "rateRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "rateQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
    ], 
  ]
},
"MedicationAdministrationStatus": {
    /*A set of codes indicating the current status of a MedicationAdministration.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationAdministrationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MedicationAdministrationStatus-list" }, 
  ],
  "elems": [
  ]
},
"MedicationDispense": {
    /*Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationDispense",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier assigned by the dispensing facility - this is an identifier assigned outside FHIR.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The procedure that trigger the dispense.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A code specifying the state of the set of dispense events.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "MedicationDispenseStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates the type of medication dispense and where the medication is expected to be consumed or administered.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.
     */
        {   "name": "medicationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "medicationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*A link to a resource representing the person or the group to whom the medication will be given.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care that establishes the context for this event.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Additional information that supports the medication being dispensed.
     */  "name": "supportingInformation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates who or what performed the event.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicationDispense.Performer",
      "isPrimitive": false }, 
    { 
    /*The principal physical location where the dispense was performed.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the medication order that is being dispensed against.
     */  "name": "authorizingPrescription", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the type of dispensing event that is performed. For example, Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The amount of medication that has been dispensed. Includes unit of measure.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The amount of medication expressed as a timing amount.
     */  "name": "daysSupply", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The time when the dispensed product was packaged and reviewed.
     */  "name": "whenPrepared", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The time the dispensed product was provided to the patient or their representative.
     */  "name": "whenHandedOver", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Identification of the facility/location where the medication was shipped to, as part of the dispense event.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the person who picked up the medication.  This will usually be a patient or their caregiver, but some cases exist where it can be a healthcare professional.
     */  "name": "receiver", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Extra information about the dispense that could not be conveyed in the other attributes.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Indicates how the medication is to be used by the patient.
     */  "name": "dosageInstruction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Dosage",
      "isPrimitive": false }, 
    { 
    /*Indicates whether or not substitution was made as part of the dispense.  In some cases substitution will be expected but does not happen, in other cases substitution is not expected but does happen.  This block explains what substitution did or did not happen and why.  If nothing is specified, substitution was not done.
     */  "name": "substitution", 
    
      "min": "0", 
      "max": "1", 
      "type": "MedicationDispense.Substitution",
      "isPrimitive": false }, 
    { 
    /*Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. drug-drug interaction, duplicate therapy, dosage alert etc.
     */  "name": "detectedIssue", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Indicates the reason why a dispense was not performed.
     */
        {   "name": "statusReasonCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "statusReasonReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*A summary of the events of interest that have occurred, such as when the dispense was verified.
     */  "name": "eventHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationDispense.Performer": {
    /*Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.
     */
  "name": "MedicationDispense.Performer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Distinguishes the type of performer in the dispense.  For example, date enterer, packager, final checker.
     */  "name": "function", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The device, practitioner, etc. who performed the action.  It should be assumed that the actor is the dispenser of the medication.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationDispense.Substitution": {
    /*Indicates that a medication product is to be or has been dispensed for a named person/patient.  This includes a description of the medication product (supply) provided and the instructions for administering the medication.  The medication dispense is the result of a pharmacy system responding to a medication order.
     */
  "name": "MedicationDispense.Substitution",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*True if the dispenser dispensed a different drug or product from what was prescribed.
     */  "name": "wasSubstituted", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A code signifying whether a different drug was dispensed from what was prescribed.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the reason for the substitution (or lack of substitution) from what was prescribed.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The person or organization that has primary responsibility for the substitution.
     */  "name": "responsibleParty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationDispenseStatus": {
    /*A coded concept specifying the state of the dispense event.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationDispenseStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MedicationDispenseStatus-list" }, 
  ],
  "elems": [
  ]
},
"MedicationRequest": {
    /*An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This records identifiers associated with this medication request that are defined by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate. For example a reimbursement system might issue its own id for each prescription that is created.  This is particularly important where FHIR only provides part of an entire workflow process where records must be tracked through an entire system.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A code specifying the current state of the order.  Generally, this will be active or completed state.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "MedicationRequestStatus",
      "isPrimitive": true }, 
    { 
    /*Whether the request is a proposal, plan, or an original order.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "MedicationRequestIntent",
      "isPrimitive": true }, 
    { 
    /*Indicates the type of medication request (for example, where the medication is expected to be consumed or administered (i.e. inpatient or outpatient) or the type of treatment (i.e. chemotherapy or endocrine).
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates how quickly the Medication Request should be addressed with respect to other requests.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Identifies the medication being requested. This is a link to a resource that represents the medication which may be the details of the medication or simply an attribute carrying a code that identifies the medication from a known list of medications.
     */
        {   "name": "medicationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "medicationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*A link to a resource representing the person or set of individuals to whom the medication will be given.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A link to an encounter, or episode of care, that identifies the particular occurrence or set occurrences of contact between patient and health care provider.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Include additional information (for example, patient height and weight) that supports the ordering of the medication.
     */  "name": "supportingInformation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date (and perhaps time) when the prescription was initially written or authored on.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The individual, organization, or device that initiated the request and has responsibility for its activation.
     */  "name": "requester", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The specified desired performer of the medication treatment (e.g. the performer of the medication administration).
     */  "name": "performer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the type of performer of the administration of the medication.
     */  "name": "performerType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The person who entered the order on behalf of another individual for example in the case of a verbal or a telephone order.
     */  "name": "recorder", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The reason or the indication for ordering the medication.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Condition or observation that supports why the medication was ordered.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The URL pointing to a protocol, guideline, orderset, or other definition that is adhered to in whole or in part by this MedicationRequest.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A plan or request that is fulfilled in whole or in part by this medication request.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition or prescription.
     */  "name": "groupIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Captures the reason for the current state of the MedicationRequest.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be required for delivering the requested service.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Extra information about the prescription that could not be conveyed by the other attributes.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Indicates how the medication is to be used by the patient.
     */  "name": "dosageInstruction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Dosage",
      "isPrimitive": false }, 
    { 
    /*Indicates the specific details for the dispense or medication supply part of a medication request (also known as a Medication Prescription or Medication Order).  Note that this information is not always sent with the order.  There may be in some settings (e.g. hospitals) institutional or system support for completing the dispense details in the pharmacy department.
     */  "name": "dispenseRequest", 
    
      "min": "0", 
      "max": "1", 
      "type": "MedicationRequest.DispenseRequest",
      "isPrimitive": false }, 
    { 
    /*Indicates whether or not substitution can or should be part of the dispense. In some cases substitution must happen, in other cases substitution must not happen. This block explains the prescriber's intent. If nothing is specified substitution may be done.
     */  "name": "substitution", 
    
      "min": "0", 
      "max": "1", 
      "type": "MedicationRequest.Substitution",
      "isPrimitive": false }, 
    { 
    /*A link to a resource representing an earlier order related order or prescription.
     */  "name": "priorPrescription", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates an actual or potential clinical issue with or between one or more active or proposed clinical actions for a patient; e.g. Drug-drug interaction, duplicate therapy, dosage alert etc.
     */  "name": "detectedIssue", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Links to Provenance records for past versions of this resource or fulfilling request or event resources that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the resource.
     */  "name": "eventHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationRequest.DispenseRequest": {
    /*An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
     */
  "name": "MedicationRequest.DispenseRequest",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*This indicates the validity period of a prescription (stale dating the Prescription).
     */  "name": "validityPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*An integer indicating the number of times, in addition to the original dispense, (aka refills or repeats) that the patient can receive the prescribed medication. Usage Notes: This integer does not include the original order dispense. This means that if an order indicates dispense 30 tablets plus "3 repeats", then the order can be dispensed a total of 4 times and the patient can receive a total of 120 tablets.  A prescriber may explicitly say that zero refills are permitted after the initial dispense.
     */  "name": "numberOfRepeatsAllowed", 
    
      "min": "0", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*The amount that is to be dispensed for one fill.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Identifies the period time over which the supplied product is expected to be used, or the length of time the dispense is expected to last.
     */  "name": "expectedSupplyDuration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Duration",
      "isPrimitive": false }, 
    { 
    /*Indicates the intended dispensing Organization specified by the prescriber.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicationRequest.Substitution": {
    /*An order or request for both supply of the medication and the instructions for administration of the medication to a patient. The resource is called "MedicationRequest" rather than "MedicationPrescription" or "MedicationOrder" to generalize the use across inpatient and outpatient settings, including care plans, etc., and to harmonize with workflow patterns.
     */
  "name": "MedicationRequest.Substitution",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*True if the prescriber allows a different drug to be dispensed from what was prescribed.
     */  "name": "allowed", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Indicates the reason for the substitution, or why substitution must or must not be performed.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MedicationRequestStatus": {
    /*A coded concept specifying the state of the prescribing event. Describes the lifecycle of the prescriptionIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationRequestStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MedicationRequestStatus-list" }, 
  ],
  "elems": [
  ]
},
"MedicationRequestIntent": {
    /*The kind of medication orderIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationRequestIntent",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MedicationRequestIntent-list" }, 
  ],
  "elems": [
  ]
},
"MedicationStatement": {
    /*A record of a medication that is being consumed by a patient.   A MedicationStatement may indicate that the patient may be taking the medication now, or has taken the medication in the past or will be taking the medication in the future.  The source of this information can be the patient, significant other (such as a family member or spouse), or a clinician.  A common scenario where this information is captured is during the history taking process during a patient visit or stay.   The medication information may come from sources such as the patient's memory, from a prescription bottle,  or from a list of medications the patient, clinician or other party maintains. 

The primary difference between a medication statement and a medication administration is that the medication administration has complete administration information and is based on actual administration information from the person who administered the medication.  A medication statement is often, if not always, less specific.  There is no required date/time when the medication was administered, in fact we only know that a source has reported the patient is taking this medication, where details such as time, quantity, or rate or even medication product may be incomplete or missing or less precise.  As stated earlier, the medication statement information may come from the patient's memory, from a prescription bottle or from a list of medications the patient, clinician or other party maintains.  Medication administration is more formal and is not missing detailed information.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationStatement",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*External identifier - FHIR will generate its own internal identifiers (probably URLs) which do not need to be explicitly managed by the resource.  The identifier here is one that would be used by another non-FHIR system - for example an automated medication pump would provide a record each time it operated; an administration while the patient was off the ward might be made with a different system and entered after the event.  Particularly important if these records have to be updated.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A plan, proposal or order that is fulfilled in whole or in part by this event.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger event of which this particular event is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A code representing the patient or other source's judgment about the state of the medication used that this statement is about.  Generally this will be active or completed.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "MedicationStatementStatus",
      "isPrimitive": true }, 
    { 
    /*Captures the reason for the current state of the MedicationStatement.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates type of medication statement and where the medication is expected to be consumed or administered.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the medication being administered. This is either a link to a resource representing the details of the medication or a simple attribute carrying a code that identifies the medication from a known list of medications.
     */
        {   "name": "medicationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "medicationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The person, animal or group who is/was taking the medication.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care that establishes the context for this MedicationStatement.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The interval of time during which it is being asserted that the patient is/was/will be taking the medication ( or was not taking, when the MedicationStatement.taken element is No).
     */
        {   "name": "effectiveDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "effectivePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date when the medication statement was asserted by the information source.
     */  "name": "dateAsserted", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The person or organization that provided the information about the taking of this medication. Note: Use derivedFrom when a MedicationStatement is derived from other resources, e.g. Claim or MedicationRequest.
     */  "name": "informationSource", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Allows linking the MedicationStatement to the underlying MedicationRequest, or to other information that supports or is used to derive the MedicationStatement.
     */  "name": "derivedFrom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A reason for why the medication is being/was taken.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Condition or observation that supports why the medication is being/was taken.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Provides extra information about the medication statement that is not conveyed by the other attributes.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Indicates how the medication is/was or should be taken by the patient.
     */  "name": "dosage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Dosage",
      "isPrimitive": false }, 
  ]
},
"MedicationStatementStatus": {
    /*A coded concept indicating the current status of a MedicationStatement.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicationStatementStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MedicationStatementStatus-list" }, 
  ],
  "elems": [
  ]
},
"MedicinalProduct": {
    /*Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProduct",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business idenfifier for this product. Could be an MPID.
     */  "name": "identifier", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Regulatory type, e.g. Investigational or Authorized.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The dose form for a single part product, or combined form of a multiple part product.
     */  "name": "combinedPharmaceuticalDoseForm", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether the Medicinal Product is subject to additional monitoring for regulatory reasons.
     */  "name": "additionalMonitoringIndicator", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether the Medicinal Product is subject to special measures for regulatory reasons.
     */  "name": "specialMeasures", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*If authorised for use in children.
     */  "name": "paediatricUseIndicator", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates if the medicinal product has an orphan designation for the treatment of a rare disease.
     */  "name": "orphanDesignationStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Allows the product to be classified by various systems.
     */  "name": "productClassification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Product regulatory authorization.
     */  "name": "marketingAuthorization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Package representation for the product.
     */  "name": "packagedMedicinalProduct", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Pharmaceutical aspects of product.
     */  "name": "pharmaceuticalProduct", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Clinical particulars, indications etc.
     */  "name": "clinicalParticulars", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Supporting documentation, typically for regulatory submission.
     */  "name": "attachedDocument", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A master file for to the medicinal product (e.g. Pharmacovigilance System Master File).
     */  "name": "masterFile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The product's name, including full name and possibly coded parts.
     */  "name": "name", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "MedicinalProduct.Name",
      "isPrimitive": false }, 
    { 
    /*Reference to another product, e.g. for linking authorised to investigational product.
     */  "name": "crossReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*An operation applied to the product, for manufacturing or adminsitrative purpose.
     */  "name": "manufacturingBusinessOperation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProduct.ManufacturingBusinessOperation",
      "isPrimitive": false }, 
  ]
},
"MedicinalProduct.Name": {
    /*Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).
     */
  "name": "MedicinalProduct.Name",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The full product name.
     */  "name": "fullName", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Coding words or phrases of the name.
     */  "name": "namePart", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProduct.NamePart",
      "isPrimitive": false }, 
    { 
    /*Country where the name applies.
     */  "name": "countryLanguage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProduct.CountryLanguage",
      "isPrimitive": false }, 
  ]
},
"MedicinalProduct.NamePart": {
    /*Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).
     */
  "name": "MedicinalProduct.NamePart",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A fragment of a product name.
     */  "name": "part", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Idenifying type for this part of the name (e.g. strength part).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"MedicinalProduct.CountryLanguage": {
    /*Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).
     */
  "name": "MedicinalProduct.CountryLanguage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Country code for where this name applies.
     */  "name": "country", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Jurisdiction code for where this name applies.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Language code for this name.
     */  "name": "language", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MedicinalProduct.ManufacturingBusinessOperation": {
    /*Detailed definition of a medicinal product, typically for uses other than direct patient care (e.g. regulatory use).
     */
  "name": "MedicinalProduct.ManufacturingBusinessOperation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of manufacturing operation.
     */  "name": "operationType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Regulatory authorization reference number.
     */  "name": "authorisationReferenceNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Regulatory authorization date.
     */  "name": "effectiveDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*To indicate if this proces is commercially confidential.
     */  "name": "confidentialityIndicator", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The manufacturer or establishment associated with the process.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A regulator which oversees the operation.
     */  "name": "regulator", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductAuthorization": {
    /*The regulatory authorization of a medicinal product.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProductAuthorization",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifier for the marketing authorization, as assigned by a regulator.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The country in which the marketing authorization has been granted.
     */  "name": "country", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The legal status of supply of the medicinal product as classified by the regulator.
     */  "name": "legalStatusOfSupply", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The status of the marketing authorization.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The date at which the given status has become applicable.
     */  "name": "statusDate", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The date when a suspended the marketing or the marketing authorization of the product is anticipated to be restored.
     */  "name": "restoreDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The beginning of the time period in which the marketing authorization is in the specific status shall be specified A complete date consisting of day, month and year shall be specified using the ISO 8601 date format.
     */  "name": "validityPeriod", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*A period of time after authorization before generic product applicatiosn can be submitted.
     */  "name": "dataExclusivityPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The date when the first authorization was granted by a Medicines Regulatory Agency.
     */  "name": "dateOfFirstAuthorization", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Date of first marketing authorization for a company's new medicinal product in any country in the World.
     */  "name": "internationalBirthDate", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Authorization in areas within a country.
     */  "name": "jurisdictionalAuthorization", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductAuthorization.JurisdictionalAuthorization",
      "isPrimitive": false }, 
    { 
    /*Marketing Authorization Holder.
     */  "name": "holder", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Medicines Regulatory Agency.
     */  "name": "regulator", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The regulatory procedure for granting or amending a marketing authorization.
     */  "name": "procedure", 
    
      "min": "1", 
      "max": "1", 
      "type": "MedicinalProductAuthorization.Procedure",
      "isPrimitive": false }, 
    { 
    /*Marketing status of the medicinal product, in contrast to marketing authorizaton.
     */  "name": "marketingStatus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MarketingStatus",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductAuthorization.JurisdictionalAuthorization": {
    /*The regulatory authorization of a medicinal product.
     */
  "name": "MedicinalProductAuthorization.JurisdictionalAuthorization",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Country of authorization.
     */  "name": "country", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Jurisdiction within a country.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The assigned number for the marketing authorization.
     */  "name": "number", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The legal status of supply in a jurisdiction or region.
     */  "name": "legalStatusOfSupply", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductAuthorization.Procedure": {
    /*The regulatory authorization of a medicinal product.
     */
  "name": "MedicinalProductAuthorization.Procedure",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for this procedure.
     */  "name": "number", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Type of procedure.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Date of procedure.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Applcations submitted to obtain a marketing authorization.
     */  "name": "application", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductAuthorization.Application",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductAuthorization.Application": {
    /*The regulatory authorization of a medicinal product.
     */
  "name": "MedicinalProductAuthorization.Application",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique identifier for the specific instance of an application shall be provided in text. The application identifier/number is usually assigned by a Medicines Regulatory Agency.
     */  "name": "number", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The type of the application.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Date that the application was made.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"MedicinalProductClinicals": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProductClinicals",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describe the undesirable effects of the medicinal product.
     */  "name": "undesirableEffects", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.UndesirableEffects",
      "isPrimitive": false }, 
    { 
    /*Indication for the Medicinal Product.
     */  "name": "therapeuticIndication", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.TherapeuticIndication",
      "isPrimitive": false }, 
    { 
    /*Contraindication for the medicinal product.
     */  "name": "contraindication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.Contraindication",
      "isPrimitive": false }, 
    { 
    /*The interactions of the medicinal product with other medicinal products, or other forms of interactions.
     */  "name": "interactions", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.Interactions",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductClinicals.UndesirableEffects": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.
     */
  "name": "MedicinalProductClinicals.UndesirableEffects",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The symptom, condition or undesirable effect.
     */  "name": "symptomConditionEffect", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Classification of the effect.
     */  "name": "classification", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The frequency of occurrence of the effect.
     */  "name": "frequencyOfOccurrence", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The population group to which this applies.
     */  "name": "population", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.Population",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductClinicals.Population": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.
     */
  "name": "MedicinalProductClinicals.Population",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The age of the specific population.
     */
        {   "name": "ageRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "ageCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*The gender of the specific population.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Race of the specific population.
     */  "name": "race", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The existing physiological conditions of the specific population to which this applies.
     */  "name": "physiologicalCondition", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductClinicals.TherapeuticIndication": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.
     */
  "name": "MedicinalProductClinicals.TherapeuticIndication",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The disease, symptom or procedure that is the indication for treatment.
     */  "name": "diseaseSymptomProcedure", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The status of the disease or symptom for which the indication applies.
     */  "name": "diseaseStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Comorbidity (concurrent condition) or co-infection as part of the indication.
     */  "name": "comorbidity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The intended effect, aim or strategy to be achieved by the indication.
     */  "name": "intendedEffect", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Timing or duration information as part of the indication.
     */  "name": "duration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Information about the use of the medicinal product in relation to other therapies as part of the indication.
     */  "name": "undesirableEffects", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.UndesirableEffects",
      "isPrimitive": false }, 
    { 
    /*Information about the use of the medicinal product in relation to other therapies described as part of the indication.
     */  "name": "otherTherapy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.OtherTherapy",
      "isPrimitive": false }, 
    { 
    /*The population group to which this applies.
     */  "name": "population", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.Population",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductClinicals.OtherTherapy": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.
     */
  "name": "MedicinalProductClinicals.OtherTherapy",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of relationship between the medicinal product indication or contraindication and another therapy.
     */  "name": "therapyRelationshipType", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Reference to a specific medication (active substance, medicinal product or class of products) as part of an indication or contraindication.
     */
        {   "name": "medicationCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "medicationReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"MedicinalProductClinicals.Contraindication": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.
     */
  "name": "MedicinalProductClinicals.Contraindication",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The disease, symptom or procedure for the contraindication.
     */  "name": "disease", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The status of the disease or symptom for the contraindication.
     */  "name": "diseaseStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A comorbidity (concurrent condition) or coinfection.
     */  "name": "comorbidity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Information about the use of the medicinal product in relation to other therapies as part of the indication.
     */  "name": "therapeuticIndication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.TherapeuticIndication",
      "isPrimitive": false }, 
    { 
    /*Information about the use of the medicinal product in relation to other therapies described as part of the contraindication.
     */  "name": "otherTherapy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.OtherTherapy",
      "isPrimitive": false }, 
    { 
    /*The population group to which this applies.
     */  "name": "population", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductClinicals.Population",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductClinicals.Interactions": {
    /*The clinical particulars - indications, contraindications etc. of a medicinal product, including for regulatory purposes.
     */
  "name": "MedicinalProductClinicals.Interactions",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The specific medication, food or laboratory test that interacts.
     */  "name": "interactant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of the interaction.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The effect of the interaction.
     */  "name": "effect", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The incidence of the interaction.
     */  "name": "incidence", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Actions for managing the interaction.
     */  "name": "management", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductDeviceSpec": {
    /*A detailed description of a device, typically as part of a regulated medicinal product. It is not intended to relace the Device resource, which covers use of device instances.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProductDeviceSpec",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The type of device.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Trade name of the device, where applicable.
     */  "name": "tradeName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The quantity of the device present in the packaging of a medicinal product.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Device listing number.
     */  "name": "listingNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Device model or reference number.
     */  "name": "modelNumber", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Whether the device is supplied as sterile.
     */  "name": "sterilityIndicator", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether the device must be sterilised before use.
     */  "name": "sterilisationRequirement", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Usage pattern including the number of times that the device may be used.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A nomenclature term for the device.
     */  "name": "nomenclature", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Shelf Life and storage information.
     */  "name": "shelfLife", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductShelfLife",
      "isPrimitive": false }, 
    { 
    /*Dimensions, color etc.
     */  "name": "physicalCharacteristics", 
    
      "min": "0", 
      "max": "1", 
      "type": "ProdCharacteristic",
      "isPrimitive": false }, 
    { 
    /*Other codeable characteristics.
     */  "name": "otherCharacteristics", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Batch number or expiry date of a device.
     */  "name": "batchIdentifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Manufacturer of this Device.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A substance used to create the material(s) of which the device is made.
     */  "name": "material", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductDeviceSpec.Material",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductDeviceSpec.Material": {
    /*A detailed description of a device, typically as part of a regulated medicinal product. It is not intended to relace the Device resource, which covers use of device instances.
     */
  "name": "MedicinalProductDeviceSpec.Material",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The substance.
     */  "name": "substance", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates an alternative material of the device.
     */  "name": "alternate", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether the substance is a known or suspected allergen.
     */  "name": "allergenicIndicator", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"MedicinalProductIngredient": {
    /*An ingredient of a manufactured item or pharmaceutical product.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProductIngredient",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The identifier(s) of this Ingredient t that are assigned by business processes and/or used to refer to it when a direct URL reference to the resource itself is not appropriate.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Ingredient role e.g. Active ingredient, excipient.
     */  "name": "role", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If the ingredient is a known or suspected allergen.
     */  "name": "allergenicIndicator", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Manufacturer of this Ingredient.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A specified substance that comprises this ingredient.
     */  "name": "specifiedSubstance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductIngredient.SpecifiedSubstance",
      "isPrimitive": false }, 
    { 
    /*The ingredient substance.
     */  "name": "substance", 
    
      "min": "0", 
      "max": "1", 
      "type": "MedicinalProductIngredient.Substance",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductIngredient.SpecifiedSubstance": {
    /*An ingredient of a manufactured item or pharmaceutical product.
     */
  "name": "MedicinalProductIngredient.SpecifiedSubstance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The specified substance.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The group of specified substance, e.g. group 1 to 4.
     */  "name": "group", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Confidentiality level of the specified substance as the ingredient.
     */  "name": "confidentiality", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.
     */  "name": "strength", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductIngredient.Strength",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductIngredient.Strength": {
    /*An ingredient of a manufactured item or pharmaceutical product.
     */
  "name": "MedicinalProductIngredient.Strength",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The quantity of substance in the unit of presentation, or in the volume (or mass) of the single pharmaceutical product or manufactured item.
     */  "name": "presentation", 
    
      "min": "1", 
      "max": "1", 
      "type": "Ratio",
      "isPrimitive": false }, 
    { 
    /*The strength per unitary volume (or mass).
     */  "name": "concentration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Ratio",
      "isPrimitive": false }, 
    { 
    /*For when strength is measured at a particular point or distance.
     */  "name": "measurementPoint", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The country or countries for which the strength range applies.
     */  "name": "country", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Strength expressed in terms of a reference substance.
     */  "name": "referenceStrength", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductIngredient.ReferenceStrength",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductIngredient.ReferenceStrength": {
    /*An ingredient of a manufactured item or pharmaceutical product.
     */
  "name": "MedicinalProductIngredient.ReferenceStrength",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Relevent refrerence substance.
     */  "name": "substance", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductIngredient.Substance": {
    /*An ingredient of a manufactured item or pharmaceutical product.
     */
  "name": "MedicinalProductIngredient.Substance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The ingredient substance.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Quantity of the substance or specified substance present in the manufactured item or pharmaceutical product.
     */  "name": "strength", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "MedicinalProductIngredient.Strength",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductPackaged": {
    /*A medicinal product in a container or package.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProductPackaged",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier.
     */  "name": "identifier", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Textual description.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Marketing information.
     */  "name": "marketingStatus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MarketingStatus",
      "isPrimitive": false }, 
    { 
    /*Batch numbering.
     */  "name": "batchIdentifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductPackaged.BatchIdentifier",
      "isPrimitive": false }, 
    { 
    /*A packaging item, as a contained for medicine, possibly with other packaging items within.
     */  "name": "packageItem", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "MedicinalProductPackaged.PackageItem",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductPackaged.BatchIdentifier": {
    /*A medicinal product in a container or package.
     */
  "name": "MedicinalProductPackaged.BatchIdentifier",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A number appearing on the outer packaging of a specific batch.
     */  "name": "outerPackaging", 
    
      "min": "1", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A number appearing on the immediate packaging (and not the outer packaging).
     */  "name": "immediatePackaging", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductPackaged.PackageItem": {
    /*A medicinal product in a container or package.
     */
  "name": "MedicinalProductPackaged.PackageItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Including possibly Data Carrier Identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The physical type of the container of the medicine.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The quantity of this package in the medicinal product, at the current level of packaging. The outermost is always 1.
     */  "name": "quantity", 
    
      "min": "1", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Material type of the package item.
     */  "name": "material", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A possible alternate material for the packaging.
     */  "name": "alternateMaterial", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Manufacturer of this Package Item.
     */  "name": "manufacturer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A device accompanying a medicinal product.
     */  "name": "device", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The manufactured item as contained in the packaged medicinal product.
     */  "name": "manufacturedItem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductPackaged.ManufacturedItem",
      "isPrimitive": false }, 
    { 
    /*Other codeable characteristics.
     */  "name": "otherCharacteristics", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Allows containers within containers.
     */  "name": "packageItem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductPackaged.PackageItem",
      "isPrimitive": false }, 
    { 
    /*Dimensions, color etc.
     */  "name": "physicalCharacteristics", 
    
      "min": "0", 
      "max": "1", 
      "type": "ProdCharacteristic",
      "isPrimitive": false }, 
    { 
    /*Shelf Life and storage information.
     */  "name": "shelfLifeStorage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductShelfLife",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductPackaged.ManufacturedItem": {
    /*A medicinal product in a container or package.
     */
  "name": "MedicinalProductPackaged.ManufacturedItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Dose form as manufactured and before any transformation into the pharmaceutical product.
     */  "name": "manufacturedDoseForm", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The “real world” units in which the quantity of the manufactured item is described.
     */  "name": "unitOfPresentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The quantity or "count number" of the manufactured item.
     */  "name": "quantity", 
    
      "min": "1", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Manufacturer of the item (Note that this should be named "manufacturer" but it currently causes technical issues).
     */  "name": "xManufacturer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Ingredient.
     */  "name": "ingredient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Dimensions, color etc.
     */  "name": "physicalCharacteristics", 
    
      "min": "0", 
      "max": "1", 
      "type": "ProdCharacteristic",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductPharmaceutical": {
    /*A pharmaceutical product described in terms of its composition and dose form.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MedicinalProductPharmaceutical",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier for the pharmaceutical medicinal product.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The administrable dose form, after necessary reconstitution.
     */  "name": "administrableDoseForm", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "unitOfPresentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The path by which the pharmaceutical product is taken into or makes contact with the body.
     */  "name": "routeOfAdministration", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Ingredient.
     */  "name": "ingredient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Accompanying device.
     */  "name": "device", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Characteristics e.g. a products onset of action.
     */  "name": "characteristics", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MedicinalProductPharmaceutical.Characteristics",
      "isPrimitive": false }, 
  ]
},
"MedicinalProductPharmaceutical.Characteristics": {
    /*A pharmaceutical product described in terms of its composition and dose form.
     */
  "name": "MedicinalProductPharmaceutical.Characteristics",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A coded characteristic.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The status of characteristic e.g. assigned or pending.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"MessageDefinition": {
    /*Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MessageDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this message definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this message definition is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this message definition when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the message definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the message definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the message definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the message definition.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A MessageDefinition that is superseded by this definition.
     */  "name": "replaces", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The status of this message definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this message definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the message definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the message definition changes.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the message definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the message definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate message definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the message definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this message definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the message definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the message definition.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The MessageDefinition that is the basis for the contents of this resource.
     */  "name": "base", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Identifies a protocol or workflow that this MessageDefinition represents a step in.
     */  "name": "parent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Event code or link to the EventDefinition.
     */
        {   "name": "eventCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "eventUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
    ], 
    { 
    /*The impact of the content of the message.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "MessageSignificanceCategory",
      "isPrimitive": true }, 
    { 
    /*Identifies the resource (or resources) that are being addressed by the event.  For example, the Encounter for an admit message or two Account records for a merge.
     */  "name": "focus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MessageDefinition.Focus",
      "isPrimitive": false }, 
    { 
    /*Declare at a message definition level whether a response is required or only upon error or success, or never.
     */  "name": "responseRequired", 
    
      "min": "0", 
      "max": "1", 
      "type": "messageheaderResponseRequest",
      "isPrimitive": true }, 
    { 
    /*Indicates what types of messages may be sent as an application-level response to this message.
     */  "name": "allowedResponse", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MessageDefinition.AllowedResponse",
      "isPrimitive": false }, 
  ]
},
"MessageDefinition.Focus": {
    /*Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.
     */
  "name": "MessageDefinition.Focus",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of resource that must be the focus for this message.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*A profile that reflects constraints for the focal resource (and potentially for related resources).
     */  "name": "profile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Identifies the minimum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.
     */  "name": "min", 
    
      "min": "1", 
      "max": "1", 
      "type": "unsignedInt",
      "isPrimitive": true }, 
    { 
    /*Identifies the maximum number of resources of this type that must be pointed to by a message in order for it to be valid against this MessageDefinition.
     */  "name": "max", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"MessageDefinition.AllowedResponse": {
    /*Defines the characteristics of a message that can be shared between systems, including the type of event that initiates the message, the content to be transmitted and what response(s), if any, are permitted.
     */
  "name": "MessageDefinition.AllowedResponse",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A reference to the message definition that must be adhered to by this supported response.
     */  "name": "message", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Provides a description of the circumstances in which this response should be used (as opposed to one of the alternative responses).
     */  "name": "situation", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
  ]
},
"MessageSignificanceCategory": {
    /*The impact of the content of a message.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MessageSignificanceCategory",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "MessageSignificanceCategory-list" }, 
  ],
  "elems": [
  ]
},
"messageheaderResponseRequest": {
    /*Response definitionIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "messageheaderResponseRequest",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "messageheaderResponseRequest-list" }, 
  ],
  "elems": [
  ]
},
"MessageHeader": {
    /*The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "MessageHeader",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Code that identifies the event this message represents and connects it with its definition. Events defined as part of the FHIR specification have the system value "http://hl7.org/fhir/message-events".  Alternatively uri to the EventDefinition.
     */
        {   "name": "eventCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "eventUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
    ], 
    { 
    /*The destination application which the message is intended for.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "MessageHeader.Destination",
      "isPrimitive": false }, 
    { 
    /*Identifies the sending system to allow the use of a trust relationship.
     */  "name": "sender", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The person or device that performed the data entry leading to this message. When there is more than one candidate, pick the most proximal to the message. Can provide other enterers in extensions.
     */  "name": "enterer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The logical author of the message - the person or device that decided the described event should happen. When there is more than one candidate, pick the most proximal to the MessageHeader. Can provide other authors in extensions.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The source application from which this message originated.
     */  "name": "source", 
    
      "min": "1", 
      "max": "1", 
      "type": "MessageHeader.Source",
      "isPrimitive": false }, 
    { 
    /*The person or organization that accepts overall responsibility for the contents of the message. The implication is that the message event happened under the policies of the responsible party.
     */  "name": "responsible", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Coded indication of the cause for the event - indicates  a reason for the occurrence of the event that is a focus of this message.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Information about the message that this message is a response to.  Only present if this message is a response.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "MessageHeader.Response",
      "isPrimitive": false }, 
    { 
    /*The actual data of the message - a reference to the root/focus class of the event.
     */  "name": "focus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Permanent link to the MessageDefinition for this message.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"MessageHeader.Destination": {
    /*The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
     */
  "name": "MessageHeader.Destination",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Human-readable name for the target system.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the target end system in situations where the initial message transmission is to an intermediary system.
     */  "name": "target", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates where the message should be routed to.
     */  "name": "endpoint", 
    
      "min": "1", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
    { 
    /*Allows data conveyed by a message to be addressed to a particular person or department when routing to a specific application isn't sufficient.
     */  "name": "receiver", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"MessageHeader.Source": {
    /*The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
     */
  "name": "MessageHeader.Source",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Human-readable name for the source system.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*May include configuration or other information useful in debugging.
     */  "name": "software", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Can convey versions of multiple systems in situations where a message passes through multiple hands.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An e-mail, phone, website or other contact point to use to resolve issues with message communications.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "1", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Identifies the routing target to send acknowledgements to.
     */  "name": "endpoint", 
    
      "min": "1", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
  ]
},
"MessageHeader.Response": {
    /*The header for a message exchange that is either requesting or responding to an action.  The reference(s) that are the subject of the action as well as other information related to the action are typically transmitted in a bundle in which the MessageHeader resource instance is the first resource in the bundle.
     */
  "name": "MessageHeader.Response",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The MessageHeader.id of the message to which this message is a response.
     */  "name": "identifier", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Code that identifies the type of response to the message - whether it was successful or not, and whether it should be resent or not.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResponseType",
      "isPrimitive": true }, 
    { 
    /*Full details of any issues found in the message.
     */  "name": "details", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ResponseType": {
    /*The kind of response to a messageIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResponseType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ResponseType-list" }, 
  ],
  "elems": [
  ]
},
"NamingSystem": {
    /*A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NamingSystem",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A natural language name identifying the naming system. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this naming system. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates the purpose for the naming system - what kinds of things does it make unique?
     */  "name": "kind", 
    
      "min": "1", 
      "max": "1", 
      "type": "NamingSystemType",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the naming system was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the naming system changes.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the naming system.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*The name of the organization that is responsible for issuing identifiers or codes for this namespace and ensuring their non-collision.
     */  "name": "responsible", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Categorizes a naming system for easier search by grouping related naming systems.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the naming system from a consumer's perspective. Details about what the namespace identifies including scope, granularity, version labeling, etc.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate naming system instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the naming system is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Provides guidance on the use of the namespace, including the handling of formatting characters, use of upper vs. lower case, etc.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates how the system may be identified when referenced in electronic exchange.
     */  "name": "uniqueId", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "NamingSystem.UniqueId",
      "isPrimitive": false }, 
  ]
},
"NamingSystem.UniqueId": {
    /*A curated namespace that issues unique symbols within that namespace for the identification of concepts, people, devices, etc.  Represents a "System" used within the Identifier and Coding data types.
     */
  "name": "NamingSystem.UniqueId",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies the unique identifier scheme used for this particular identifier.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "NamingSystemIdentifierType",
      "isPrimitive": true }, 
    { 
    /*The string that should be sent over the wire to identify the code system or identifier system.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates whether this identifier is the "preferred" identifier of this type.
     */  "name": "preferred", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Notes about the past or intended usage of this identifier.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifies the period of time over which this identifier is considered appropriate to refer to the naming system.  Outside of this window, the identifier might be non-deterministic.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"NamingSystemIdentifierType": {
    /*Identifies the style of unique identifier used to identify a namespace.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NamingSystemIdentifierType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "NamingSystemIdentifierType-list" }, 
  ],
  "elems": [
  ]
},
"NamingSystemType": {
    /*Identifies the purpose of the naming system.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NamingSystemType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "NamingSystemType-list" }, 
  ],
  "elems": [
  ]
},
"NutritionOrder": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "NutritionOrder",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this order by the order sender or by the order receiver.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The URL pointing to a protocol, guideline, orderset or other definition that is adhered to in whole or in part by this NutritionOrder.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The workflow status of the nutrition order/request.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates the level of authority/intentionality associated with the NutrionOrder and where the request fits into the workflow chain.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestIntent",
      "isPrimitive": true }, 
    { 
    /*The person (patient) who needs the nutrition order for an oral diet, nutritional supplement and/or enteral or formula feeding.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An encounter that provides additional information about the healthcare context in which this request is made.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date and time that this nutrition order was requested.
     */  "name": "dateTime", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The practitioner that holds legal responsibility for ordering the diet, nutritional supplement, or formula feedings.
     */  "name": "orderer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A link to a record of allergies or intolerances  which should be included in the nutrition order.
     */  "name": "allergyIntolerance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*This modifier is used to convey order-specific modifiers about the type of food that should be given. These can be derived from patient allergies, intolerances, or preferences such as Halal, Vegan or Kosher. This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.
     */  "name": "foodPreferenceModifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This modifier is used to convey Order-specific modifier about the type of oral food or oral fluids that should not be given. These can be derived from patient allergies, intolerances, or preferences such as No Red Meat, No Soy or No Wheat or  Gluten-Free.  While it should not be necessary to repeat allergy or intolerance information captured in the referenced AllergyIntolerance resource in the excludeFoodModifier, this element may be used to convey additional specificity related to foods that should be eliminated from the patient’s diet for any reason.  This modifier applies to the entire nutrition order inclusive of the oral diet, nutritional supplements and enteral formula feedings.
     */  "name": "excludeFoodModifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Diet given orally in contrast to enteral (tube) feeding.
     */  "name": "oralDiet", 
    
      "min": "0", 
      "max": "1", 
      "type": "NutritionOrder.OralDiet",
      "isPrimitive": false }, 
    { 
    /*Oral nutritional products given in order to add further nutritional value to the patient's diet.
     */  "name": "supplement", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "NutritionOrder.Supplement",
      "isPrimitive": false }, 
    { 
    /*Feeding provided through the gastrointestinal tract via a tube, catheter, or stoma that delivers nutrition distal to the oral cavity.
     */  "name": "enteralFormula", 
    
      "min": "0", 
      "max": "1", 
      "type": "NutritionOrder.EnteralFormula",
      "isPrimitive": false }, 
    { 
    /*Comments made about the {{title}} by the requester, performer, subject or other participants.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"NutritionOrder.OralDiet": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
  "name": "NutritionOrder.OralDiet",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of diet or dietary restriction such as fiber restricted diet or diabetic diet.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The time period and frequency at which the diet should be given.  The diet should be given for the combination of all schedules if more than one schedule is present.
     */  "name": "schedule", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Timing",
      "isPrimitive": false }, 
    { 
    /*Class that defines the quantity and type of nutrient modifications (for example carbohydrate, fiber or sodium) required for the oral diet.
     */  "name": "nutrient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "NutritionOrder.Nutrient",
      "isPrimitive": false }, 
    { 
    /*Class that describes any texture modifications required for the patient to safely consume various types of solid foods.
     */  "name": "texture", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "NutritionOrder.Texture",
      "isPrimitive": false }, 
    { 
    /*The required consistency (e.g. honey-thick, nectar-thick, thin, thickened.) of liquids or fluids served to the patient.
     */  "name": "fluidConsistencyType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Free text or additional instructions or information pertaining to the oral diet.
     */  "name": "instruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"NutritionOrder.Nutrient": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
  "name": "NutritionOrder.Nutrient",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The nutrient that is being modified such as carbohydrate or sodium.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The quantity of the specified nutrient to include in diet.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"NutritionOrder.Texture": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
  "name": "NutritionOrder.Texture",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Any texture modifications (for solid foods) that should be made, e.g. easy to chew, chopped, ground, and pureed.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The food type(s) (e.g. meats, all foods)  that the texture modification applies to.  This could be all foods types.
     */  "name": "foodType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"NutritionOrder.Supplement": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
  "name": "NutritionOrder.Supplement",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of nutritional supplement product required such as a high protein or pediatric clear liquid supplement.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The product or brand name of the nutritional supplement such as "Acme Protein Shake".
     */  "name": "productName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The time period and frequency at which the supplement(s) should be given.  The supplement should be given for the combination of all schedules if more than one schedule is present.
     */  "name": "schedule", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Timing",
      "isPrimitive": false }, 
    { 
    /*The amount of the nutritional supplement to be given.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Free text or additional instructions or information pertaining to the oral supplement.
     */  "name": "instruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"NutritionOrder.EnteralFormula": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
  "name": "NutritionOrder.EnteralFormula",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of enteral or infant formula such as an adult standard formula with fiber or a soy-based infant formula.
     */  "name": "baseFormulaType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The product or brand name of the enteral or infant formula product such as "ACME Adult Standard Formula".
     */  "name": "baseFormulaProductName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates the type of modular component such as protein, carbohydrate, fat or fiber to be provided in addition to or mixed with the base formula.
     */  "name": "additiveType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The product or brand name of the type of modular component to be added to the formula.
     */  "name": "additiveProductName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The amount of energy (calories) that the formula should provide per specified volume, typically per mL or fluid oz.  For example, an infant may require a formula that provides 24 calories per fluid ounce or an adult may require an enteral formula that provides 1.5 calorie/mL.
     */  "name": "caloricDensity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The route or physiological path of administration into the patient's gastrointestinal  tract for purposes of providing the formula feeding, e.g. nasogastric tube.
     */  "name": "routeofAdministration", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Formula administration instructions as structured data.  This repeating structure allows for changing the administration rate or volume over time for both bolus and continuous feeding.  An example of this would be an instruction to increase the rate of continuous feeding every 2 hours.
     */  "name": "administration", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "NutritionOrder.Administration",
      "isPrimitive": false }, 
    { 
    /*The maximum total quantity of formula that may be administered to a subject over the period of time, e.g. 1440 mL over 24 hours.
     */  "name": "maxVolumeToDeliver", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Free text formula administration, feeding instructions or additional instructions or information.
     */  "name": "administrationInstruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"NutritionOrder.Administration": {
    /*A request to supply a diet, formula feeding (enteral) or oral nutritional supplement to a patient/resident.
     */
  "name": "NutritionOrder.Administration",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The time period and frequency at which the enteral formula should be delivered to the patient.
     */  "name": "schedule", 
    
      "min": "0", 
      "max": "1", 
      "type": "Timing",
      "isPrimitive": false }, 
    { 
    /*The volume of formula to provide to the patient per the specified administration schedule.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The rate of administration of formula via a feeding pump, e.g. 60 mL per hour, according to the specified schedule.
     */
        {   "name": "rateQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "rateRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
    ], 
  ]
},
"RequestIntent": {
    /*Codes indicating the degree of authority/intentionality associated with a nutrition orderIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RequestIntent",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "RequestIntent-list" }, 
  ],
  "elems": [
  ]
},
"Observation": {
    /*Measurements and simple assertions made about a patient, device or other subject.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Observation",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique identifier assigned to this observation.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A plan, proposal or order that is fulfilled in whole or in part by this event.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger event of which this particular Observation is a component or step.  For example,  an observation as part of a procedure.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The status of the result value.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ObservationStatus",
      "isPrimitive": true }, 
    { 
    /*A code that classifies the general type of observation being made.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Describes what was observed. Sometimes this is called the observation "name".
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient, or group of patients, location, or device whose characteristics (direct or indirect) are described by the observation and into whose record the observation is placed.  Comments: Indirect characteristics may be those of a specimen, fetus, donor,  other observer (for example a relative or EMT), or any observation made about the subject.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The actual focus of an observation when it is not the patient of record.  The focus is point of attention when the observation representing something  or someone associated with the patient.  It could be  a  spouse or parent, a fetus or donor.  The focus of an observation could be an existing condition,  an intervention, the subject's diet,  another observation of the subject,  or a body structure such as tumor or implanted device.   An example use case would be using the Observation resource to capture whether the mother is trained to change her child's tracheostomy tube. In this example, the child is the patient of record and the mother is the focus.
     */  "name": "focus", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The healthcare event  (e.g. a patient and healthcare provider interaction) during which this observation is made.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The time or time-period the observed value is asserted as being true. For biological subjects - e.g. human patients - this is usually called the "physiologically relevant time". This is usually either the time of the procedure or of specimen collection, but very often the source of the date/time is not known, only the date/time itself.
     */
        {   "name": "effectiveDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "effectivePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "effectiveTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date and time this version of the observation was made available to providers, typically after the results have been reviewed and verified.
     */  "name": "issued", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Who was responsible for asserting the observed value as "true".
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The information determined as a result of making the observation, if the information has a simple value.
     */
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*Provides a reason why the expected value in the element Observation.value[x] is missing.
     */  "name": "dataAbsentReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The assessment made based on the result of the observation.  Intended as a simple compact code often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result. Otherwise known as abnormal flag.
     */  "name": "interpretation", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*May include statements about significant, unexpected or unreliable values, or information about the source of the value where this may be relevant to the interpretation of the result.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Indicates the site on the subject's body where the observation was made (i.e. the target site).
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the mechanism used to perform the observation.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specimen that was used when this observation was made.
     */  "name": "specimen", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The device used to generate the observation data.
     */  "name": "device", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Guidance on how to interpret the value by comparison to a normal or recommended range.
     */  "name": "referenceRange", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Observation.ReferenceRange",
      "isPrimitive": false }, 
    { 
    /*This observation is a group observation (e.g. a battery, a panel of tests, a set of vital sign measurements) that includes the target as a member of the group.
     */  "name": "hasMember", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The target resource that represents a measurement from which this observation value is derived. For example, a calculated anion gap or a fetal measurement based on an ultrasound image.
     */  "name": "derivedFrom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Some observations have multiple component observations.  These component observations are expressed as separate code value pairs that share the same attributes.  Examples include systolic and diastolic component observations for blood pressure measurement and multiple component observations for genetics observations.
     */  "name": "component", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Observation.Component",
      "isPrimitive": false }, 
  ]
},
"Observation.ReferenceRange": {
    /*Measurements and simple assertions made about a patient, device or other subject.
     */
  "name": "Observation.ReferenceRange",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The value of the low bound of the reference range.  The low bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the low bound is omitted,  it is assumed to be meaningless (e.g. reference range is <=2.3).
     */  "name": "low", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The value of the high bound of the reference range.  The high bound of the reference range endpoint is inclusive of the value (e.g.  reference range is >=5 - <=9). If the high bound is omitted,  it is assumed to be meaningless (e.g. reference range is >= 2.3).
     */  "name": "high", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Codes to indicate the what part of the targeted reference population it applies to. For example, the normal or therapeutic range.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Codes to indicate the target population this reference range applies to.  For example, a reference range may be based on the normal population or a particular sex or race.
     */  "name": "appliesTo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.
     */  "name": "age", 
    
      "min": "0", 
      "max": "1", 
      "type": "Range",
      "isPrimitive": false }, 
    { 
    /*Text based reference range in an observation which may be used when a quantitative range is not appropriate for an observation.  An example would be a reference value of "Negative" or a list or table of "normals".
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Observation.Component": {
    /*Measurements and simple assertions made about a patient, device or other subject.
     */
  "name": "Observation.Component",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Describes what was observed. Sometimes this is called the observation "code".
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The information determined as a result of making the observation, if the information has a simple value.
     */
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*Provides a reason why the expected value in the element Observation.component.value[x] is missing.
     */  "name": "dataAbsentReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The assessment made based on the result of the observation.  Intended as a simple compact code often placed adjacent to the result value in reports and flow sheets to signal the meaning/normalcy status of the result. Otherwise known as abnormal flag.
     */  "name": "interpretation", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Guidance on how to interpret the value by comparison to a normal or recommended range.
     */  "name": "referenceRange", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Observation.ReferenceRange",
      "isPrimitive": false }, 
  ]
},
"ObservationDefinition": {
    /*Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ObservationDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that classifies the general type of observation.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Describes what will be observed. Sometimes this is called the observation "name".
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Data type allowed for the result of the observation.
     */  "name": "permittedDataType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Multiple results allowed for this kind of observation.
     */  "name": "multipleResultsAllowed", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The method or technique used to perform the observation.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The preferred name to be used when reporting the results of this observation.
     */  "name": "preferredReportName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Characteristics for quantitative results of this observation.
     */  "name": "quantitativeDetails", 
    
      "min": "0", 
      "max": "1", 
      "type": "ObservationDefinition.QuantitativeDetails",
      "isPrimitive": false }, 
    { 
    /*Reference range for ordinal and continuous observations.
     */  "name": "qualifiedInterval", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ObservationDefinition.QualifiedInterval",
      "isPrimitive": false }, 
    { 
    /*The set of valid coded results for the observation.
     */  "name": "validCodedValueSet", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The set of normal coded results for the observation.
     */  "name": "normalCodedValueSet", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The set of abnormal coded results for the observation.
     */  "name": "abnormalCodedValueSet", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The set of critical coded results for the observation.
     */  "name": "criticalCodedValueSet", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
  ]
},
"ObservationDefinition.QuantitativeDetails": {
    /*Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.
     */
  "name": "ObservationDefinition.QuantitativeDetails",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Customary unit used to report quantitative results of this observation.
     */  "name": "customaryUnit", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*SI unit used to report quantitative results of this observation.
     */  "name": "unit", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Factor for converting value expressed with SI unit to value expressed with customary unit.
     */  "name": "conversionFactor", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Number of digits after decimal separator when the results of this observation are of type Quantity.
     */  "name": "decimalPrecision", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
  ]
},
"ObservationDefinition.QualifiedInterval": {
    /*Set of definitional characteristics for a kind of observation or measurement produced or consumed by an orderable health care service.
     */
  "name": "ObservationDefinition.QualifiedInterval",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The category or type of interval.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The value and associated unit of the low bound (inclusive) of the reference range.
     */  "name": "range", 
    
      "min": "0", 
      "max": "1", 
      "type": "Range",
      "isPrimitive": false }, 
    { 
    /*Codes to indicate what part of the targeted reference population it applies to. For example, the normal or therapeutic range.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Codes to indicate the target population this reference range applies to.
     */  "name": "appliesTo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The age at which this reference range is applicable. This is a neonatal age (e.g. number of weeks at term) if the meaning says so.
     */  "name": "age", 
    
      "min": "0", 
      "max": "1", 
      "type": "Range",
      "isPrimitive": false }, 
    { 
    /*The gestational age at which this reference range is applicable, in the context of pregnancy.
     */  "name": "gestationalAge", 
    
      "min": "0", 
      "max": "1", 
      "type": "Range",
      "isPrimitive": false }, 
    { 
    /*Text based condition for which the reference range is valid.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"OccupationalData": {
    /*A person's work information, structured to facilitate individual, population, and public health use; not intended to support billing.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "OccupationalData",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifier assigned to the occupational data record.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of this ODH. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*The occupational data record is about this person (e.g., the patient, a parent of a minor child).
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date of creation or updating of the occupational data record.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The person who created or last updated the occupational data record.
     */  "name": "recorder", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The person who provided the subject's health-related occupational data.
     */  "name": "informant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A person's current economic relationship to a job. Employment status refers to whether a person is currently working for compensation, is unemployed (i.e., searching for work for compensation), or is not in the labor force (e.g. disabled, homemaker, chooses not to work, etc.). Employment status is not the same as classification of work.
     */  "name": "employmentStatus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OccupationalData.EmploymentStatus",
      "isPrimitive": false }, 
    { 
    /*A person's self-identified retirement date.  A person may retire multiple times.
     */  "name": "retirementDate", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The start and end dates for the period of time a person's work is or was in a combat zone. In addition to military personnel, civilians also may work or have worked in a combat zone.
     */  "name": "combatZonePeriod", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The type of work a person has held for the longest amount of time during his or her life, regardless of the occupation currently held and regardless of whether or not it has been held for a continuous time.
     */  "name": "usualWork", 
    
      "min": "0", 
      "max": "1", 
      "type": "OccupationalData.UsualWork",
      "isPrimitive": false }, 
    { 
    /*The type of work done by a person during a current or past job. A job is defined by the sum of all the data related to the occupation. A change in occupation, supervisory level, industry, employer, or employer location is considered a new job.
     */  "name": "pastOrPresentJob", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OccupationalData.PastOrPresentJob",
      "isPrimitive": false }, 
  ]
},
"OccupationalData.EmploymentStatus": {
    /*A person's work information, structured to facilitate individual, population, and public health use; not intended to support billing.
     */
  "name": "OccupationalData.EmploymentStatus",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that represents a person's current economic relationship to a job.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The start and end dates for a person's current economic relationship to a job.
     */  "name": "effective", 
    
      "min": "1", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"OccupationalData.UsualWork": {
    /*A person's work information, structured to facilitate individual, population, and public health use; not intended to support billing.
     */
  "name": "OccupationalData.UsualWork",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that represents the type of work a person has held for the longest amount of time during his or her life.
     */  "name": "occupation", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code that represents the type of business a person has worked in for the longest total time while in the usual occupation.
     */  "name": "industry", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The date when a person first started working in their usual occupation.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Total of all periods of time a person has spent in the usual occupation, not including intermittent period(s) where the person was not working in that occupation.
     */  "name": "duration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Duration",
      "isPrimitive": false }, 
  ]
},
"OccupationalData.PastOrPresentJob": {
    /*A person's work information, structured to facilitate individual, population, and public health use; not intended to support billing.
     */
  "name": "OccupationalData.PastOrPresentJob",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that represents the type of work done by a person at one job.
     */  "name": "occupation", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code that represents the type of business associated with a person's Past or Present Job; i.e., for one job. A change in industry indicates a change in job.
     */  "name": "industry", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The start and end dates for one job.  A change in occupation, supervisory level, industry, employer, or employer location is considered a new job.
     */  "name": "effective", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The party, be it an individual or an organization, responsible for providing compensation to a person performing work, or in the case of unpaid work, the party responsible for engaging the person in a position. For military occupations, this refers to the name of the person's military home base; the person's Branch of Service is recorded as industry. A change in employer or employer location indicates a change in job.
     */  "name": "employer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The classification of a person's job (one job) as defined by compensation and sector (e.g. paid, unpaid, self-employed, government, etc.). This is different from employment status: a person who is a volunteer (work classification) may have chosen not to be in the labor force (employment status).
     */  "name": "workClassification", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Reflects the amount of supervisory or management responsibilities of a person at one job. For military jobs, pay grade is used as a proxy because it can be interpreted across branches of service.  A change in supervisory level is considered a new job.
     */  "name": "supervisoryLevel", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A regular action performed at a single job.
     */  "name": "jobDuty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A hazard that is specific to a person's work or work environment for a single job and with which the person might come in contact. A hazard is a source of potential harm to an individual's physical or mental health (e.g., biological, chemical, physical, psychological, radiological).
     */  "name": "occupationalHazard", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Describes a person's typical arrangement of working hours for one job.
     */  "name": "workSchedule", 
    
      "min": "0", 
      "max": "1", 
      "type": "OccupationalData.WorkSchedule",
      "isPrimitive": false }, 
  ]
},
"OccupationalData.WorkSchedule": {
    /*A person's work information, structured to facilitate individual, population, and public health use; not intended to support billing.
     */
  "name": "OccupationalData.WorkSchedule",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that represents a person's typical arrangement of working hours for one job.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The typical number of days worked in a week by a person at one job.
     */  "name": "weeklyWorkDays", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The number of hours worked in a day or shift at one job by a person. For those working a split shift (divided into two parts that are separated by an interval longer than a normal rest period), it is the total of both periods of time in a shift.
     */  "name": "dailyWorkHours", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"OperationDefinition": {
    /*A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "OperationDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this operation definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this operation definition is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The identifier that is used to identify this version of the operation definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the operation definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the operation definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this operation definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*Whether this is an operation or a named query.
     */  "name": "kind", 
    
      "min": "1", 
      "max": "1", 
      "type": "OperationKind",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this operation definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the operation definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the operation definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the operation definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the operation definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate operation definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the operation definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this operation definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Operations that have affects state = false (see [HTTP specification definition of idempotent](http://www.w3.org/Protocols/rfc2616/rfc2616-sec9.html)) may be invoked by performing an HTTP GET operation instead of a POST.
     */  "name": "affectsState", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The name used to invoke the operation.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Additional information about how to use this operation or named query.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Indicates that this operation definition is a constraining profile on the base.
     */  "name": "base", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The types on which this operation can be executed.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*Indicates whether this operation or named query can be invoked at the system level (e.g. without needing to choose a resource type for the context).
     */  "name": "system", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Indicates whether this operation or named query can be invoked at the resource type level for any given resource type level (e.g. without needing to choose a specific resource id for the context).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Indicates whether this operation can be invoked on a particular instance of one of the given types.
     */  "name": "instance", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Additional validation information for the in parameters. The profile is a constraint on the parameters resource.
     */  "name": "inputProfile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Additional validation information for the out parameters. The profile is a constraint on the parameters resource.
     */  "name": "outputProfile", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The parameters for the operation/query.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OperationDefinition.Parameter",
      "isPrimitive": false }, 
    { 
    /*Defines an appropriate combination of parameters to use when invoking this operation, to help code generators when generating overloaded parameter sets for this operation.
     */  "name": "overload", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OperationDefinition.Overload",
      "isPrimitive": false }, 
  ]
},
"OperationDefinition.Parameter": {
    /*A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
     */
  "name": "OperationDefinition.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of used to identify the parameter.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Whether this is an input or an output parameter.
     */  "name": "use", 
    
      "min": "1", 
      "max": "1", 
      "type": "OperationParameterUse",
      "isPrimitive": true }, 
    { 
    /*The minimum number of times this parameter SHALL appear in the request or response.
     */  "name": "min", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The maximum number of times this element is permitted to appear in the request or response.
     */  "name": "max", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Describes the meaning or use of this parameter.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type for this parameter.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "FHIRAllTypes",
      "isPrimitive": true }, 
    { 
    /*If the type is "Reference", then targetProfile lists a one or more profiles that the Reference can refer to.
     */  "name": "targetProfile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*How the parameter is understood as a search parameter. This is only used if the parameter type is 'string'.
     */  "name": "searchType", 
    
      "min": "0", 
      "max": "1", 
      "type": "SearchParamType",
      "isPrimitive": true }, 
    { 
    /*Binds to a value set if this parameter is coded (code, Coding, CodeableConcept).
     */  "name": "binding", 
    
      "min": "0", 
      "max": "1", 
      "type": "OperationDefinition.Binding",
      "isPrimitive": false }, 
    { 
    /*The parts of a nested Parameter.
     */  "name": "part", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OperationDefinition.Parameter",
      "isPrimitive": false }, 
  ]
},
"OperationDefinition.Binding": {
    /*A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
     */
  "name": "OperationDefinition.Binding",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates the degree of conformance expectations associated with this binding - that is, the degree to which the provided value set must be adhered to in the instances.
     */  "name": "strength", 
    
      "min": "1", 
      "max": "1", 
      "type": "BindingStrength",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Points to the value set or external definition (e.g. implicit value set) that identifies the set of codes to be used.
     */
        {   "name": "valueSetUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueSetCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
    ], 
  ]
},
"OperationDefinition.Overload": {
    /*A formal computable definition of an operation (on the RESTful interface) or a named query (using the search interaction).
     */
  "name": "OperationDefinition.Overload",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Name of parameter to include in overload.
     */  "name": "parameterName", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Comments to go on overload.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"FHIRAllTypes": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FHIRAllTypes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FHIRAllTypes-list" }, 
  ],
  "elems": [
  ]
},
"OperationParameterUse": {
    /*Whether an operation parameter is an input or an output parameter.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "OperationParameterUse",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "OperationParameterUse-list" }, 
  ],
  "elems": [
  ]
},
"OperationKind": {
    /*Whether an operation is a normal operation or a query.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "OperationKind",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "OperationKind-list" }, 
  ],
  "elems": [
  ]
},
"OperationOutcome": {
    /*A collection of error, warning or information messages that result from a system action.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "OperationOutcome",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An error, warning or information message that results from a system action.
     */  "name": "issue", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "OperationOutcome.Issue",
      "isPrimitive": false }, 
  ]
},
"OperationOutcome.Issue": {
    /*A collection of error, warning or information messages that result from a system action.
     */
  "name": "OperationOutcome.Issue",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates whether the issue indicates a variation from successful processing.
     */  "name": "severity", 
    
      "min": "1", 
      "max": "1", 
      "type": "IssueSeverity",
      "isPrimitive": true }, 
    { 
    /*Describes the type of the issue. The system that creates an OperationOutcome SHALL choose the most applicable code from the IssueType value set, and may additional provide its own code for the error in the details element.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "IssueType",
      "isPrimitive": true }, 
    { 
    /*Additional details about the error. This may be a text description of the error, or a system code that identifies the error.
     */  "name": "details", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Additional diagnostic information about the issue.  Typically, this may be a description of how a value is erroneous, or a stack dump to help trace the issue.
     */  "name": "diagnostics", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*For resource issues, this will be a simple XPath limited to element names, repetition indicators and the default child access that identifies one of the elements in the resource that caused this issue to be raised.  For HTTP errors, will be "http." + the parameter name.
     */  "name": "location", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A [simple subset of FHIRPath](fhirpath.html#simple) limited to element names, repetition indicators and the default child access that identifies one of the elements in the resource that caused this issue to be raised.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"IssueType": {
    /*A code that describes the type of issue.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "IssueType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "IssueType-list" }, 
  ],
  "elems": [
  ]
},
"IssueSeverity": {
    /*How the issue affects the success of the action.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "IssueSeverity",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "IssueSeverity-list" }, 
  ],
  "elems": [
  ]
},
"Organization": {
    /*A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, etc.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Organization",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for the organization that is used to identify the organization across multiple disparate systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether the organization's record is still in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The kind(s) of organization that this is.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A name associated with the organization.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of alternate names that the organization is known as, or was known as in the past.
     */  "name": "alias", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A contact detail for the organization.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*An address for the organization.
     */  "name": "address", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*The organization of which this organization forms a part.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact for the organization for a certain purpose.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Organization.Contact",
      "isPrimitive": false }, 
    { 
    /*Technical endpoints providing access to services operated for the organization.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Organization.Contact": {
    /*A formally or informally recognized grouping of people or organizations formed for the purpose of achieving some form of collective action.  Includes companies, institutions, corporations, departments, community groups, healthcare practice groups, etc.
     */
  "name": "Organization.Contact",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates a purpose for which the contact can be reached.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A name associated with the contact.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Visiting or postal addresses for the contact.
     */  "name": "address", 
    
      "min": "0", 
      "max": "1", 
      "type": "Address",
      "isPrimitive": false }, 
  ]
},
"OrganizationRole": {
    /*A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "OrganizationRole",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business Identifiers that are specific to a role/location.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this practitioner role record is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The period during which the person is authorized to act as a practitioner in these role(s) for the organization.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The organization where the Practitioner performs the roles associated.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Practitioner that is able to provide the defined services for the organization.
     */  "name": "participatingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The network(s) this association applies to (if any).
     */  "name": "network", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Roles which this practitioner is authorized to perform for the organization.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specific specialty of the practitioner.
     */  "name": "specialty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The location(s) at which this practitioner provides care.
     */  "name": "location", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The list of healthcare services that this worker provides for this role's Organization/Location(s).
     */  "name": "healthcareService", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact details that are specific to the role/location/service.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*A collection of times that the Service Site is available.
     */  "name": "availableTime", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OrganizationRole.AvailableTime",
      "isPrimitive": false }, 
    { 
    /*The HealthcareService is not available during this period of time due to the provided reason.
     */  "name": "notAvailable", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "OrganizationRole.NotAvailable",
      "isPrimitive": false }, 
    { 
    /*A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.
     */  "name": "availabilityExceptions", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Technical endpoints providing access to services operated for the practitioner with this role.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"OrganizationRole.AvailableTime": {
    /*A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
     */
  "name": "OrganizationRole.AvailableTime",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates which days of the week are available between the start and end Times.
     */  "name": "daysOfWeek", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DaysOfWeek",
      "isPrimitive": true }, 
    { 
    /*Is this always available? (hence times are irrelevant) e.g. 24-hour service.
     */  "name": "allDay", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The opening time of day. Note: If the AllDay flag is set, then this time is ignored.
     */  "name": "availableStartTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
    { 
    /*The closing time of day. Note: If the AllDay flag is set, then this time is ignored.
     */  "name": "availableEndTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
  ]
},
"OrganizationRole.NotAvailable": {
    /*A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
     */
  "name": "OrganizationRole.NotAvailable",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The reason that can be presented to the user as to why this time is not available.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Service is not available (seasonally or for a public holiday) from this date.
     */  "name": "during", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Parameters": {
    /*This special resource type is used to represent an operation request and response (operations.html). It has no other use, and there is no RESTful endpoint associated with it.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Parameters",
  "base": "Resource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A parameter passed to or received from the operation.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Parameters.Parameter",
      "isPrimitive": false }, 
  ]
},
"Parameters.Parameter": {
    /*This special resource type is used to represent an operation request and response (operations.html). It has no other use, and there is no RESTful endpoint associated with it.
     */
  "name": "Parameters.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of the parameter (reference to the operation definition).
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*If the parameter is a data type.
     */
        {   "name": "valueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "valueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "valueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "valuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "valueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "valueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "valueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "valueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "valueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "valueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "valueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "valueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "valueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "valueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "valueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "valueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "valueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "valueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "valueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "valueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "valueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "valueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "valueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
    { 
    /*If the parameter is a whole resource.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "ResourceContainer",
      "isPrimitive": false }, 
    { 
    /*A named part of a multi-part parameter.
     */  "name": "part", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Parameters.Parameter",
      "isPrimitive": false }, 
  ]
},
"Patient": {
    /*Demographics and other administrative information about an individual or animal receiving care or other health-related services.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Patient",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier for this patient.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this patient record is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A name associated with the individual.
     */  "name": "name", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail (e.g. a telephone number or an email address) by which the individual may be contacted.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Administrative Gender - the gender that the patient is considered to have for administration and record keeping purposes.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "AdministrativeGender",
      "isPrimitive": true }, 
    { 
    /*The date of birth for the individual.
     */  "name": "birthDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Indicates if the individual is deceased or not.
     */
        {   "name": "deceasedBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "deceasedDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
    ], 
    { 
    /*An address for the individual.
     */  "name": "address", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*This field contains a patient's most recent marital (civil) status.
     */  "name": "maritalStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Indicates whether the patient is part of a multiple (bool) or indicates the actual birth order (integer).
     */
        {   "name": "multipleBirthBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "multipleBirthInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
    ], 
    { 
    /*Image of the patient.
     */  "name": "photo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*A contact party (e.g. guardian, partner, friend) for the patient.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Patient.Contact",
      "isPrimitive": false }, 
    { 
    /*A language which may be used to communicate with the patient about his or her health.
     */  "name": "communication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Patient.Communication",
      "isPrimitive": false }, 
    { 
    /*Patient's nominated care provider.
     */  "name": "generalPractitioner", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Organization that is the custodian of the patient record.
     */  "name": "managingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Link to another patient resource that concerns the same actual patient.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Patient.Link",
      "isPrimitive": false }, 
  ]
},
"Patient.Contact": {
    /*Demographics and other administrative information about an individual or animal receiving care or other health-related services.
     */
  "name": "Patient.Contact",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The nature of the relationship between the patient and the contact person.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A name associated with the contact person.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail for the person, e.g. a telephone number or an email address.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Address for the contact person.
     */  "name": "address", 
    
      "min": "0", 
      "max": "1", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*Administrative Gender - the gender that the contact person is considered to have for administration and record keeping purposes.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "AdministrativeGender",
      "isPrimitive": true }, 
    { 
    /*Organization on behalf of which the contact is acting or for which the contact is working.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The period during which this contact person or organization is valid to be contacted relating to this patient.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Patient.Communication": {
    /*Demographics and other administrative information about an individual or animal receiving care or other health-related services.
     */
  "name": "Patient.Communication",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The ISO-639-1 alpha 2 code in lower case for the language, optionally followed by a hyphen and the ISO-3166-1 alpha 2 code for the region in upper case; e.g. "en" for English, or "en-US" for American English versus "en-EN" for England English.
     */  "name": "language", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates whether or not the patient prefers this language (over other languages he masters up a certain level).
     */  "name": "preferred", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"Patient.Link": {
    /*Demographics and other administrative information about an individual or animal receiving care or other health-related services.
     */
  "name": "Patient.Link",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The other patient resource that the link refers to.
     */  "name": "other", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The type of link between this patient resource and another patient resource.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "LinkType",
      "isPrimitive": true }, 
  ]
},
"LinkType": {
    /*The type of link between this patient resource and another patient resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "LinkType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "LinkType-list" }, 
  ],
  "elems": [
  ]
},
"PaymentNotice": {
    /*This resource provides the status of the payment for goods and services rendered, and the request and response resource references.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PaymentNotice",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The notice business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*Reference of resource for which payment is being made.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Reference of response to resource for which payment is being made.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date when the above payment action occurrred.
     */  "name": "statusDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date when this resource was created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The Insurer who is target  of the request.
     */  "name": "target", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "provider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The payment status, typically paid: payment sent, cleared: payment received.
     */  "name": "paymentStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"PaymentReconciliation": {
    /*This resource provides payment details and claim references supporting a bulk payment.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PaymentReconciliation",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The period of time for which payments have been gathered into this bulk payment for settlement.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The date when the enclosed suite of services were performed or completed.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The Insurer who produced this adjudicated response.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Original request resource reference.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Transaction status: error, complete.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "RemittanceOutcome",
      "isPrimitive": true }, 
    { 
    /*A description of the status of the adjudication.
     */  "name": "disposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "requestProvider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*List of individual settlement amounts and the corresponding transaction.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PaymentReconciliation.Detail",
      "isPrimitive": false }, 
    { 
    /*The form to be used for printing the content.
     */  "name": "form", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Total payment amount.
     */  "name": "total", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*Suite of notes.
     */  "name": "processNote", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PaymentReconciliation.ProcessNote",
      "isPrimitive": false }, 
  ]
},
"PaymentReconciliation.Detail": {
    /*This resource provides payment details and claim references supporting a bulk payment.
     */
  "name": "PaymentReconciliation.Detail",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code to indicate the nature of the payment, adjustment, funds advance, etc.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The claim or financial resource.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The claim response resource.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The Organization which submitted the claim or financial transaction.
     */  "name": "submitter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization which is receiving the payment.
     */  "name": "payee", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date of the invoice or financial resource.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Amount paid for this detail.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
  ]
},
"PaymentReconciliation.ProcessNote": {
    /*This resource provides payment details and claim references supporting a bulk payment.
     */
  "name": "PaymentReconciliation.ProcessNote",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The note purpose: Print/Display.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "NoteType",
      "isPrimitive": true }, 
    { 
    /*The note text.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Person": {
    /*Demographics and administrative information about a person independent of a specific health-related context.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Person",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for a person within a particular scope.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A name associated with the person.
     */  "name": "name", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail for the person, e.g. a telephone number or an email address.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Administrative Gender.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "AdministrativeGender",
      "isPrimitive": true }, 
    { 
    /*The birth date for the person.
     */  "name": "birthDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*One or more addresses for the person.
     */  "name": "address", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*An image that can be displayed as a thumbnail of the person to enhance the identification of the individual.
     */  "name": "photo", 
    
      "min": "0", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*The organization that is the custodian of the person record.
     */  "name": "managingOrganization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Whether this person's record is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Link to a resource that concerns the same actual person.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Person.Link",
      "isPrimitive": false }, 
  ]
},
"Person.Link": {
    /*Demographics and administrative information about a person independent of a specific health-related context.
     */
  "name": "Person.Link",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The resource to which this actual person is associated.
     */  "name": "target", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Level of assurance that this link is associated with the target resource.
     */  "name": "assurance", 
    
      "min": "0", 
      "max": "1", 
      "type": "IdentityAssuranceLevel",
      "isPrimitive": true }, 
  ]
},
"IdentityAssuranceLevel": {
    /*The level of confidence that this link represents the same actual person, based on NIST Authentication Levels.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "IdentityAssuranceLevel",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "IdentityAssuranceLevel-list" }, 
  ],
  "elems": [
  ]
},
"PlanDefinition": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PlanDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this plan definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this plan definition is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this plan definition when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the plan definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the plan definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence. To provide a version consistent with the Decision Support Service specification, use the format Major.Minor.Revision (e.g. 1.0.0). For more information on versioning knowledge assets, refer to the Decision Support Service specification. Note that a version is required for non-experimental active artifacts.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the plan definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the plan definition.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An explanatory or alternate title for the plan definition giving additional information about its content.
     */  "name": "subtitle", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A high-level category for the plan definition that distinguishes the kinds of systems that would be interested in the plan definition.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The status of this plan definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this plan definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A code or group definition that describes the intended subject of the plan definition.
     */
        {   "name": "subjectCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "subjectReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The date  (and optionally time) when the plan definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the plan definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the plan definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the plan definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate plan definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the plan definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this plan definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A detailed description of how the plan definition is used from a clinical perspective.
     */  "name": "usage", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the plan definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the plan definition.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
     */  "name": "approvalDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
     */  "name": "lastReviewDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The period during which the plan definition content was or is planned to be in active use.
     */  "name": "effectivePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Descriptive topics related to the content of the plan definition. Topics provide a high-level categorization of the definition that can be useful for filtering and searching.
     */  "name": "topic", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A contributor to the content of the plan definition, including authors, editors, reviewers, and endorsers.
     */  "name": "contributor", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Contributor",
      "isPrimitive": false }, 
    { 
    /*Related artifacts such as additional documentation, justification, or bibliographic references.
     */  "name": "relatedArtifact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*A reference to a Library resource containing any formal logic used by the plan definition.
     */  "name": "library", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Goals that describe what the activities within the plan are intended to achieve. For example, weight loss, restoring an activity of daily living, obtaining herd immunity via immunization, meeting a process improvement objective, etc.
     */  "name": "goal", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.Goal",
      "isPrimitive": false }, 
    { 
    /*An action or group of actions to be taken as part of the plan.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.Action",
      "isPrimitive": false }, 
  ]
},
"PlanDefinition.Goal": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.Goal",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates a category the goal falls within.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Human-readable and/or coded description of a specific desired objective of care, such as "control blood pressure" or "negotiate an obstacle course" or "dance with child at wedding".
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies the expected level of importance associated with reaching/sustaining the defined goal.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The event after which the goal should begin being pursued.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifies problems, conditions, issues, or concerns the goal is intended to address.
     */  "name": "addresses", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Didactic or other informational resources associated with the goal that provide further supporting information about the goal. Information resources can include inline text commentary and links to web resources.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*Indicates what should be done and within what timeframe.
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.Target",
      "isPrimitive": false }, 
  ]
},
"PlanDefinition.Target": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.Target",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The parameter whose value is to be tracked, e.g. body weight, blood pressure, or hemoglobin A1c level.
     */  "name": "measure", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The target value of the measure to be achieved to signify fulfillment of the goal, e.g. 150 pounds or 7.0%. Either the high or low or both values of the range can be specified. When a low value is missing, it indicates that the goal is achieved at any value at or below the high value. Similarly, if the high value is missing, it indicates that the goal is achieved at any value at or above the low value.
     */
        {   "name": "detailQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "detailRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "detailCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates the timeframe after the start of the goal in which the goal should be met.
     */  "name": "due", 
    
      "min": "0", 
      "max": "1", 
      "type": "Duration",
      "isPrimitive": false }, 
  ]
},
"PlanDefinition.Action": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.Action",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A user-visible prefix for the action.
     */  "name": "prefix", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The title of the action displayed to a user.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A brief description of the action used to provide a summary to display to the user.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.
     */  "name": "textEquivalent", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A code that provides meaning for the action or action group. For example, a section may have a LOINC code for the section of a documentation template.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A description of why this action is necessary or appropriate.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*Identifies goals that this action supports. The reference must be to a goal element defined within this plan definition.
     */  "name": "goalId", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*A description of when the action should be triggered.
     */  "name": "trigger", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TriggerDefinition",
      "isPrimitive": false }, 
    { 
    /*An expression that describes applicability criteria or start/stop conditions for the action.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.Condition",
      "isPrimitive": false }, 
    { 
    /*Defines input data requirements for the action.
     */  "name": "input", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement",
      "isPrimitive": false }, 
    { 
    /*Defines the outputs of the action, if any.
     */  "name": "output", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DataRequirement",
      "isPrimitive": false }, 
    { 
    /*A relationship to another action such as "before" or "30-60 minutes after start of".
     */  "name": "relatedAction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.RelatedAction",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*An optional value describing when the action should be performed.
     */
        {   "name": "timingDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "timingAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "timingPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "timingDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "timingRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "timingTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates who should participate in performing the action described.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.Participant",
      "isPrimitive": false }, 
    { 
    /*The type of action to perform (create, update, remove).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Defines the grouping behavior for the action and its children.
     */  "name": "groupingBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionGroupingBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines the selection behavior for the action and its children.
     */  "name": "selectionBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionSelectionBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines the required behavior for the action.
     */  "name": "requiredBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionRequiredBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines whether the action should usually be preselected.
     */  "name": "precheckBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionPrecheckBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines whether the action can be selected multiple times.
     */  "name": "cardinalityBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionCardinalityBehavior",
      "isPrimitive": true }, 
    { 
    /*A reference to an ActivityDefinition that describes the action to be taken in detail, or a PlanDefinition that describes a series of actions to be taken.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*A reference to a StructureMap resource that defines a transform that can be executed to produce the intent resource using the ActivityDefinition instance as the input.
     */  "name": "transform", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Customizations that should be applied to the statically defined resource. For example, if the dosage of a medication must be computed based on the patient's weight, a customization would be used to specify an expression that calculated the weight, and the path on the resource that would contain the result.
     */  "name": "dynamicValue", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.DynamicValue",
      "isPrimitive": false }, 
    { 
    /*Sub actions that are contained within the action. The behavior of this action determines the functionality of the sub-actions. For example, a selection behavior of at-most-one indicates that of the sub-actions, at most one may be chosen as part of realizing the action definition.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PlanDefinition.Action",
      "isPrimitive": false }, 
  ]
},
"PlanDefinition.Condition": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.Condition",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of condition.
     */  "name": "kind", 
    
      "min": "1", 
      "max": "1", 
      "type": "ActionConditionKind",
      "isPrimitive": true }, 
    { 
    /*A brief, natural language description of the condition that effectively communicates the intended semantics.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The media type of the language for the expression.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An expression that returns true or false, indicating whether the condition is satisfied.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"PlanDefinition.RelatedAction": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.RelatedAction",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The element id of the related action.
     */  "name": "actionId", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The relationship of this action to the related action.
     */  "name": "relationship", 
    
      "min": "1", 
      "max": "1", 
      "type": "ActionRelationshipType",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
     */
        {   "name": "offsetDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "offsetRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
  ]
},
"PlanDefinition.Participant": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of participant in the action.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ActionParticipantType",
      "isPrimitive": true }, 
    { 
    /*The role the participant should play in performing the described action.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"PlanDefinition.DynamicValue": {
    /*This resource allows for the definition of various types of plans as a sharable, consumable, and executable artifact. The resource is general enough to support the description of a broad range of clinical artifacts such as clinical decision support rules, order sets and protocols.
     */
  "name": "PlanDefinition.DynamicValue",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A brief, natural language description of the intended semantics of the dynamic value.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The path to the element to be customized. This is the path on the resource that will hold the result of the calculation defined by the expression.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The media type of the language for the expression.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An expression specifying the value of the customized element.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ActionRequiredBehavior": {
    /*Defines requiredness behavior for selecting an action or an action groupIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionRequiredBehavior",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionRequiredBehavior-list" }, 
  ],
  "elems": [
  ]
},
"ActionRelationshipType": {
    /*Defines the types of relationships between actionsIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionRelationshipType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionRelationshipType-list" }, 
  ],
  "elems": [
  ]
},
"ActionGroupingBehavior": {
    /*Defines organization behavior of a groupIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionGroupingBehavior",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionGroupingBehavior-list" }, 
  ],
  "elems": [
  ]
},
"ActionSelectionBehavior": {
    /*Defines selection behavior of a groupIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionSelectionBehavior",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionSelectionBehavior-list" }, 
  ],
  "elems": [
  ]
},
"ActionCardinalityBehavior": {
    /*Defines behavior for an action or a group for how many times that item may be repeatedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionCardinalityBehavior",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionCardinalityBehavior-list" }, 
  ],
  "elems": [
  ]
},
"ActionPrecheckBehavior": {
    /*Defines selection frequency behavior for an action or groupIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionPrecheckBehavior",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionPrecheckBehavior-list" }, 
  ],
  "elems": [
  ]
},
"ActionConditionKind": {
    /*Defines the kinds of conditions that can appear on actionsIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionConditionKind",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionConditionKind-list" }, 
  ],
  "elems": [
  ]
},
"Practitioner": {
    /*A person who is directly or indirectly involved in the provisioning of healthcare.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Practitioner",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier that applies to this person in this role.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this practitioner's record is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The name(s) associated with the practitioner.
     */  "name": "name", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail for the practitioner, e.g. a telephone number or an email address.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Address(es) of the practitioner that are not role specific (typically home address). 
Work addresses are not typically entered in this property as they are usually role dependent.
     */  "name": "address", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "AdministrativeGender",
      "isPrimitive": true }, 
    { 
    /*The date of birth for the practitioner.
     */  "name": "birthDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Image of the person.
     */  "name": "photo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*Qualifications obtained by training and certification.
     */  "name": "qualification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Practitioner.Qualification",
      "isPrimitive": false }, 
    { 
    /*A language the practitioner can use in patient communication.
     */  "name": "communication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Practitioner.Qualification": {
    /*A person who is directly or indirectly involved in the provisioning of healthcare.
     */
  "name": "Practitioner.Qualification",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier that applies to this person's qualification in this role.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Coded representation of the qualification.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Period during which the qualification is valid.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Organization that regulates and issues the qualification.
     */  "name": "issuer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"PractitionerRole": {
    /*A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "PractitionerRole",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business Identifiers that are specific to a role/location.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this practitioner role record is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The period during which the person is authorized to act as a practitioner in these role(s) for the organization.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Practitioner that is able to provide the defined services for the organization.
     */  "name": "practitioner", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization where the Practitioner performs the roles associated.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Roles which this practitioner is authorized to perform for the organization.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specific specialty of the practitioner.
     */  "name": "specialty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The location(s) at which this practitioner provides care.
     */  "name": "location", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The list of healthcare services that this worker provides for this role's Organization/Location(s).
     */  "name": "healthcareService", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact details that are specific to the role/location/service.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*A collection of times that the Service Site is available.
     */  "name": "availableTime", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PractitionerRole.AvailableTime",
      "isPrimitive": false }, 
    { 
    /*The HealthcareService is not available during this period of time due to the provided reason.
     */  "name": "notAvailable", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "PractitionerRole.NotAvailable",
      "isPrimitive": false }, 
    { 
    /*A description of site availability exceptions, e.g. public holiday availability. Succinctly describing all possible exceptions to normal site availability as details in the available Times and not available Times.
     */  "name": "availabilityExceptions", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Technical endpoints providing access to services operated for the practitioner with this role.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"PractitionerRole.AvailableTime": {
    /*A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
     */
  "name": "PractitionerRole.AvailableTime",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates which days of the week are available between the start and end Times.
     */  "name": "daysOfWeek", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "DaysOfWeek",
      "isPrimitive": true }, 
    { 
    /*Is this always available? (hence times are irrelevant) e.g. 24 hour service.
     */  "name": "allDay", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The opening time of day. Note: If the AllDay flag is set, then this time is ignored.
     */  "name": "availableStartTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
    { 
    /*The closing time of day. Note: If the AllDay flag is set, then this time is ignored.
     */  "name": "availableEndTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "time",
      "isPrimitive": true }, 
  ]
},
"PractitionerRole.NotAvailable": {
    /*A specific set of Roles/Locations/specialties/services that a practitioner may perform at an organization for a period of time.
     */
  "name": "PractitionerRole.NotAvailable",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The reason that can be presented to the user as to why this time is not available.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Service is not available (seasonally or for a public holiday) from this date.
     */  "name": "during", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"Procedure": {
    /*An action that is or was performed on a patient. This can be a physical intervention like an operation, or less invasive like counseling or hypnotherapy.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Procedure",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifiers assigned to this procedure by the performer or other systems which remain constant as the resource is updated and propagates from server to server.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A protocol, guideline, orderset or other definition that was adhered to in whole or in part by this procedure.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A reference to a resource that contains details of the request for this procedure.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger event of which this particular procedure is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A code specifying the state of the procedure. Generally this will be in-progress or completed state.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "EventStatus",
      "isPrimitive": true }, 
    { 
    /*Captures the reason for the current state of the procedure.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code that classifies the procedure for searching, sorting and display purposes (e.g. "Surgical Procedure").
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specific procedure that is performed. Use text if the exact nature of the procedure cannot be coded (e.g. "Laparoscopic Appendectomy").
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The person, animal or group on which the procedure was performed.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter during which the procedure was performed.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Estimated or actual date, date-time, period, or age when the procedure was performed.  Allows a period to support complex procedures that span more than one date, and also allows for the length of the procedure to be captured.
     */
        {   "name": "performedDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "performedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "performedString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "performedAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "performedRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
    { 
    /*Individual who recorded the record and takes responsibility for its content.
     */  "name": "recorder", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Individual who is making the procedure statement.
     */  "name": "asserter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Limited to 'real' people rather than equipment.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Procedure.Performer",
      "isPrimitive": false }, 
    { 
    /*The location where the procedure actually happened.  E.g. a newborn at home, a tracheostomy at a restaurant.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The coded reason why the procedure was performed. This may be coded entity of some type, or may simply be present as text.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The justification of why the procedure was performed.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Detailed and structured anatomical location information. Multiple locations are allowed - e.g. multiple punch biopsies of a lesion.
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The outcome of the procedure - did it resolve reasons for the procedure being performed?
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*This could be a histology result, pathology report, surgical report, etc.
     */  "name": "report", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Any complications that occurred during the procedure, or in the immediate post-performance period. These are generally tracked separately from the notes, which will typically describe the procedure itself rather than any 'post procedure' issues.
     */  "name": "complication", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Any complications that occurred during the procedure, or in the immediate post-performance period.
     */  "name": "complicationDetail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*If the procedure required specific follow up - e.g. removal of sutures. The followup may be represented as a simple note, or could potentially be more complex in which case the CarePlan resource can be used.
     */  "name": "followUp", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Any other notes and comments about the procedure.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*A device that is implanted, removed or otherwise manipulated (calibration, battery replacement, fitting a prosthesis, attaching a wound-vac, etc.) as a focal portion of the Procedure.
     */  "name": "focalDevice", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Procedure.FocalDevice",
      "isPrimitive": false }, 
    { 
    /*Identifies medications, devices and any other substance used as part of the procedure.
     */  "name": "usedReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies coded items that were used as part of the procedure.
     */  "name": "usedCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Procedure.Performer": {
    /*An action that is or was performed on a patient. This can be a physical intervention like an operation, or less invasive like counseling or hypnotherapy.
     */
  "name": "Procedure.Performer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*For example: surgeon, anaethetist, endoscopist.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The practitioner who was involved in the procedure.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization the device or practitioner was acting on behalf of.
     */  "name": "onBehalfOf", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Procedure.FocalDevice": {
    /*An action that is or was performed on a patient. This can be a physical intervention like an operation, or less invasive like counseling or hypnotherapy.
     */
  "name": "Procedure.FocalDevice",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of change that happened to the device during the procedure.
     */  "name": "action", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The device that was manipulated (changed) during the procedure.
     */  "name": "manipulated", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ProcessRequest": {
    /*This resource provides the target, request and response, and action details for an action to be performed by the target on or about existing resources.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ProcessRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The ProcessRequest business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The type of processing action being requested, for example Reversal, Readjudication, StatusRequest,PendedRequest.
     */  "name": "action", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionList",
      "isPrimitive": true }, 
    { 
    /*The organization which is the target of the request.
     */  "name": "target", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date when this resource was created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The practitioner who is responsible for the action specified in this request.
     */  "name": "provider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Reference of resource which is the target or subject of this action.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Reference of a prior response to resource which is the target or subject of this action.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*If true remove all history excluding audit.
     */  "name": "nullify", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A reference to supply which authenticates the process.
     */  "name": "reference", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*List of top level items to be re-adjudicated, if none specified then the entire submission is re-adjudicated.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProcessRequest.Item",
      "isPrimitive": false }, 
    { 
    /*Names of resource types to include.
     */  "name": "include", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Names of resource types to exclude.
     */  "name": "exclude", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A period of time during which the fulfilling resources would have been created.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"ProcessRequest.Item": {
    /*This resource provides the target, request and response, and action details for an action to be performed by the target on or about existing resources.
     */
  "name": "ProcessRequest.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A service line number.
     */  "name": "sequenceLinkId", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
  ]
},
"ActionList": {
    /*List of allowable action which this resource can request.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ActionList",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ActionList-list" }, 
  ],
  "elems": [
  ]
},
"ProcessResponse": {
    /*This resource provides processing status, errors and notes from the processing of a resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ProcessResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Response business identifier.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*The date when the enclosed suite of services were performed or completed.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The organization who produced this adjudicated response.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Original request resource reference.
     */  "name": "request", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Transaction status: error, complete, held.
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "ProcessOutcomeCodes",
      "isPrimitive": true }, 
    { 
    /*A description of the status of the adjudication or processing.
     */  "name": "disposition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The practitioner who is responsible for the services rendered to the patient.
     */  "name": "requestProvider", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The form to be used for printing the content.
     */  "name": "form", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Suite of processing notes or additional requirements if the processing has been held.
     */  "name": "processNote", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProcessResponse.ProcessNote",
      "isPrimitive": false }, 
    { 
    /*Processing errors.
     */  "name": "error", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Request for additional supporting or authorizing information, such as: documents, images or resources.
     */  "name": "communicationRequest", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ProcessResponse.ProcessNote": {
    /*This resource provides processing status, errors and notes from the processing of a resource.
     */
  "name": "ProcessResponse.ProcessNote",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The note purpose: Print/Display.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "NoteType",
      "isPrimitive": true }, 
    { 
    /*The note text.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ProcessOutcomeCodes": {
    /*Local status of outcome codesIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ProcessOutcomeCodes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ProcessOutcomeCodes-list" }, 
  ],
  "elems": [
  ]
},
"ProductPlan": {
    /*Details of a Health Insurance product/plan provided by an organization.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ProductPlan",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for the product/plan that is used to identify it across multiple disparate systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether the organization's record is still in active use.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*The type of product/plan.
     */  "name": "type", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Official name of the product/plan (as designated by the owner).
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A list of alternate names that the product/plan is known as, or was known as in the past.
     */  "name": "alias", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The period of time that the product is available.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Owner of the product/plan (typically a payer).
     */  "name": "ownedBy", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Administrator of the product/plan (e.g. self-insured employer plan administered by a TPA).
     */  "name": "administeredBy", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An address for the organization.
     */  "name": "address", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*The geographic region in which this product/plan is available.
     */  "name": "coverageArea", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact for the product/plan for a certain purpose.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductPlan.Contact",
      "isPrimitive": false }, 
    { 
    /*Details about the coverage offered by the insurance product.
     */  "name": "coverage", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductPlan.Coverage",
      "isPrimitive": false }, 
    { 
    /*Details about an insurance plan.
     */  "name": "plan", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductPlan.Plan",
      "isPrimitive": false }, 
    { 
    /*Technical endpoints providing access to services operated for the organization.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Contact": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Contact",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates a purpose for which the contact can be reached.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A name associated with the contact.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail (e.g. a telephone number or an email address) by which the party may be contacted.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Visiting or postal addresses for the contact.
     */  "name": "address", 
    
      "min": "0", 
      "max": "1", 
      "type": "Address",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Coverage": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Coverage",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of coverage  (Medical; Dental; Mental Health; Substance Abuse; Vision; Drug; Short Term; Long Term Care; Hospice; Home Health).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specific benefits under this type of coverage.
     */  "name": "benefit", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ProductPlan.Benefit",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Benefit": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Benefit",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of benefit (primary care; speciality care; inpatient; outpatient).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specific benefit and related value.
     */  "name": "item", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ProductPlan.Item",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Item": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Coded Details of the specific benefit (days; visits).
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Value of the specific benefit.
     */  "name": "benefitValue", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Plan": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Plan",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of plan (Platinum; Gold; Silver; Bronze; High Deductable; Low Deductable).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Additional descriptive content about the plan.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Plan premium.
     */  "name": "premium", 
    
      "min": "0", 
      "max": "1", 
      "type": "Money",
      "isPrimitive": false }, 
    { 
    /*List of the costs associated with plan benefits.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductPlan.Category",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Category": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Category",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*General category of benefit (Medical; Dental; Vision; Drug; Mental Health; Substance Abuse; Hospice, Home Health).
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*List of the specific benefits under this category of benefit.
     */  "name": "benefit", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductPlan.Benefit1",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Benefit1": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Benefit1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of specific benefit (preventative; primary care office visit; speciality office visit; hospitalization; emergency room; urgent care).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*List of the costs associated with a specific benefit.
     */  "name": "cost", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ProductPlan.Cost",
      "isPrimitive": false }, 
  ]
},
"ProductPlan.Cost": {
    /*Details of a Health Insurance product/plan provided by an organization.
     */
  "name": "ProductPlan.Cost",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type of cost (copay; individual cap; family cap; coinsurance; deductible).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Whether the cost applies to in-network or out-of-network providers (in-network; out-of-network; other).
     */  "name": "applicability", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*Additional information about the cost, such as information about funding sources (e.g. HSA, HRA, FSA, RRA).
     */  "name": "qualifiers", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The actual cost value.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"Provenance": {
    /*Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Provenance",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The Reference(s) that were generated or updated by  the activity described in this resource. A provenance can point to more than one target if multiple resources were created/updated by the same activity.
     */  "name": "target", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The period during which the activity occurred.
     */
        {   "name": "occurredPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "occurredDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
    ], 
    { 
    /*The instant of time at which the activity was recorded.
     */  "name": "recorded", 
    
      "min": "1", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Policy or plan the activity was defined by. Typically, a single activity may have multiple applicable policy documents, such as patient consent, guarantor funding, etc.
     */  "name": "policy", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Where the activity occurred, if relevant.
     */  "name": "location", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The reason that the activity was taking place.
     */  "name": "reason", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*An activity is something that occurs over a period of time and acts upon or with entities; it may include consuming, processing, transforming, modifying, relocating, using, or generating entities.
     */  "name": "activity", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*An actor taking a role in an activity  for which it can be assigned some degree of responsibility for the activity taking place.
     */  "name": "agent", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Provenance.Agent",
      "isPrimitive": false }, 
    { 
    /*An entity used in this activity.
     */  "name": "entity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Provenance.Entity",
      "isPrimitive": false }, 
    { 
    /*A digital signature on the target Reference(s). The signer should match a Provenance.agent. The purpose of the signature is indicated.
     */  "name": "signature", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Signature",
      "isPrimitive": false }, 
  ]
},
"Provenance.Agent": {
    /*Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.
     */
  "name": "Provenance.Agent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The participation the agent had with respect to the activity.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The function of the agent with respect to the activity. The security role enabling the agent with respect to the activity.
     */  "name": "role", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The individual, device or organization that participated in the event.
     */
        {   "name": "whoIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "whoReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*The individual, device, or organization for whom the change was made.
     */
        {   "name": "onBehalfOfIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "onBehalfOfReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Provenance.Entity": {
    /*Provenance of a resource is a record that describes entities and processes involved in producing and delivering or otherwise influencing that resource. Provenance provides a critical foundation for assessing authenticity, enabling trust, and allowing reproducibility. Provenance assertions are a form of contextual metadata and can themselves become important records with their own provenance. Provenance statement indicates clinical significance in terms of confidence in authenticity, reliability, and trustworthiness, integrity, and stage in lifecycle (e.g. Document Completion - has the artifact been legally authenticated), all of which may impact security, privacy, and trust policies.
     */
  "name": "Provenance.Entity",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*How the entity was used during the activity.
     */  "name": "role", 
    
      "min": "1", 
      "max": "1", 
      "type": "ProvenanceEntityRole",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Identity of the  Entity used. May be a logical or physical uri and maybe absolute or relative.
     */
        {   "name": "whatIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "whatReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The entity is attributed to an agent to express the agent's responsibility for that entity, possibly along with other agents. This description can be understood as shorthand for saying that the agent was responsible for the activity which generated the entity.
     */  "name": "agent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Provenance.Agent",
      "isPrimitive": false }, 
  ]
},
"ProvenanceEntityRole": {
    /*How an entity was used in an activity.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ProvenanceEntityRole",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ProvenanceEntityRole-list" }, 
  ],
  "elems": [
  ]
},
"Questionnaire": {
    /*A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Questionnaire",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this questionnaire when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this questionnaire is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this questionnaire when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the questionnaire when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the questionnaire author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the questionnaire. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the questionnaire.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The URL of a Questionnaire that this Questionnaire is based on.
     */  "name": "derivedFrom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The status of this questionnaire. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this questionnaire is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The types of subjects that can be the subject of responses created for the questionnaire.
     */  "name": "subjectType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the questionnaire was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the questionnaire changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the questionnaire.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the questionnaire from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate questionnaire instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the questionnaire is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this questionnaire is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the questionnaire and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the questionnaire.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was approved by the publisher. Approval happens once when the content is officially approved for usage.
     */  "name": "approvalDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The date on which the resource content was last reviewed. Review happens periodically after approval but does not change the original approval date.
     */  "name": "lastReviewDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The period during which the questionnaire content was or is planned to be in active use.
     */  "name": "effectivePeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*An identifier for this question or group of questions in a particular terminology such as LOINC.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*A particular question, question grouping or display text that is part of the questionnaire.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Questionnaire.Item",
      "isPrimitive": false }, 
  ]
},
"Questionnaire.Item": {
    /*A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
     */
  "name": "Questionnaire.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier that is unique within the Questionnaire allowing linkage to the equivalent item in a QuestionnaireResponse resource.
     */  "name": "linkId", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A reference to an [[[ElementDefinition]]] that provides the details for the item. If a definition is provided, then the following element values can be derived from the definition:   

* code (ElementDefinition.code) 
* type (ElementDefinition.type) 
* required (ElementDefinition.min) 
* repeats (ElementDefinition.max) 
* maxLength (ElementDefinition.maxLength) 
* options (ElementDefinition.binding)  
Any information provided in these elements on a Questionnaire Item overrides the information from the definition, and some are require for efficient implementation (e.g. enforcing invariants).
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A terminology code that corresponds to this group or question (e.g. a code from LOINC, which defines many questions and answers).
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*A short label for a particular group, question or set of display text within the questionnaire used for reference by the individual completing the questionnaire.
     */  "name": "prefix", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The name of a section, the text of a question or text content for a display item.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of questionnaire item this is - whether text for display, a grouping of other items or a particular type of data to be captured (string, integer, coded choice, etc.).
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "QuestionnaireItemType",
      "isPrimitive": true }, 
    { 
    /*A constraint indicating that this item should only be enabled (displayed/allow answers to be captured) when the specified condition is true.
     */  "name": "enableWhen", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Questionnaire.EnableWhen",
      "isPrimitive": false }, 
    { 
    /*Controls how multiple enableWhen values are interpreted -  whether all or any must be true.
     */  "name": "enableBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "EnableWhenBehavior",
      "isPrimitive": true }, 
    { 
    /*An indication, if true, that the item must be present in a "completed" QuestionnaireResponse.  If false, the item may be skipped when answering the questionnaire.
     */  "name": "required", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*An indication, if true, that the item may occur multiple times in the response, collecting multiple answers answers for questions or multiple sets of answers for groups.
     */  "name": "repeats", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*An indication, when true, that the value cannot be changed by a human respondent to the Questionnaire.
     */  "name": "readOnly", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The maximum number of characters that are permitted in the answer to be considered a "valid" QuestionnaireResponse.
     */  "name": "maxLength", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*A reference to a value set containing a list of codes representing permitted answers for a "choice" or "open-choice" question.
     */  "name": "options", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*One of the permitted answers for a "choice" or "open-choice" question.
     */  "name": "option", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Questionnaire.Option",
      "isPrimitive": false }, 
    { 
    /*One or more values that should be pre-populated in the answer when initially rendering the questionnaire for user input.
     */  "name": "initial", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Questionnaire.Initial",
      "isPrimitive": false }, 
    { 
    /*Text, questions and other groups to be nested beneath a question or group.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Questionnaire.Item",
      "isPrimitive": false }, 
  ]
},
"Questionnaire.EnableWhen": {
    /*A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
     */
  "name": "Questionnaire.EnableWhen",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The linkId for the question whose answer (or lack of answer) governs whether this item is enabled.
     */  "name": "question", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Specifies the criteria by which the question is enabled.
     */  "name": "operator", 
    
      "min": "1", 
      "max": "1", 
      "type": "QuestionnaireItemOperator",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A value that the referenced question is tested using the specified operator in order for the item to be enabled.
     */
        {   "name": "answerBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "answerDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "answerInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "answerDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "answerDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "answerTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "answerString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "answerCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "answerQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "answerReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"Questionnaire.Option": {
    /*A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
     */
  "name": "Questionnaire.Option",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*A potential answer that's allowed as the answer to this question.
     */
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates whether the option value is selected when the list of options is initially shown.
     */  "name": "initialSelected", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"Questionnaire.Initial": {
    /*A structured set of questions intended to guide the collection of answers from end-users. Questionnaires provide detailed control over order, presentation, phraseology and grouping to allow coherent, consistent data collection.
     */
  "name": "Questionnaire.Initial",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The actual value to for an initial answer.
     */
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"QuestionnaireItemType": {
    /*Distinguishes groups from questions and display text and indicates data type for questionsIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "QuestionnaireItemType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "QuestionnaireItemType-list" }, 
  ],
  "elems": [
  ]
},
"EnableWhenBehavior": {
    /*Controls how multiple enableWhen values are interpreted -  whether all or any must be trueIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "EnableWhenBehavior",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "EnableWhenBehavior-list" }, 
  ],
  "elems": [
  ]
},
"QuestionnaireItemOperator": {
    /*The criteria by which a question is enabledIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "QuestionnaireItemOperator",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "QuestionnaireItemOperator-list" }, 
  ],
  "elems": [
  ]
},
"QuestionnaireResponse": {
    /*A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "QuestionnaireResponse",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A business identifier assigned to a particular completed (or partially completed) questionnaire.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The order, proposal or plan that is fulfilled in whole or in part by this QuestionnaireResponse.  For example, a ServiceRequest seeking an intake assessment or a decision support recommendation to assess for post-partum depression.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A procedure or observation that this questionnaire was performed as part of the execution of.  For example, the surgery a checklist was executed as part of.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The Questionnaire that defines and organizes the questions for which answers are being provided.
     */  "name": "questionnaire", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The position of the questionnaire response within its overall lifecycle.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "QuestionnaireResponseStatus",
      "isPrimitive": true }, 
    { 
    /*The subject of the questionnaire response.  This could be a patient, organization, practitioner, device, etc.  This is who/what the answers apply to, but is not necessarily the source of information.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter or episode of care with primary association to the questionnaire response.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date and/or time that this set of answers were last changed.
     */  "name": "authored", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Person who received the answers to the questions in the QuestionnaireResponse and recorded them in the system.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The person who answered the questions about the subject.
     */  "name": "source", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A group or question item from the original questionnaire for which answers are provided.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "QuestionnaireResponse.Item",
      "isPrimitive": false }, 
  ]
},
"QuestionnaireResponse.Item": {
    /*A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.
     */
  "name": "QuestionnaireResponse.Item",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The item from the Questionnaire that corresponds to this item in the QuestionnaireResponse resource.
     */  "name": "linkId", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A reference to an [[[ElementDefinition]]] that provides the details for the item.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Text that is displayed above the contents of the group or as the text of the question being answered.
     */  "name": "text", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*More specific subject this section's answers are about, details the subject given in QuestionnaireResponse.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The respondent's answer(s) to the question.
     */  "name": "answer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "QuestionnaireResponse.Answer",
      "isPrimitive": false }, 
    { 
    /*Questions or sub-groups nested beneath a question or group.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "QuestionnaireResponse.Item",
      "isPrimitive": false }, 
  ]
},
"QuestionnaireResponse.Answer": {
    /*A structured set of questions and their answers. The questions are ordered and grouped into coherent subsets, corresponding to the structure of the grouping of the questionnaire being responded to.
     */
  "name": "QuestionnaireResponse.Answer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*The answer (or one of the answers) provided by the respondent to the question.
     */
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*Nested groups and/or questions found within this particular answer.
     */  "name": "item", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "QuestionnaireResponse.Item",
      "isPrimitive": false }, 
  ]
},
"QuestionnaireResponseStatus": {
    /*Lifecycle status of the questionnaire response.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "QuestionnaireResponseStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "QuestionnaireResponseStatus-list" }, 
  ],
  "elems": [
  ]
},
"RelatedPerson": {
    /*Information about a person that is involved in the care for a patient, but who is not the target of healthcare, nor has a formal responsibility in the care process.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RelatedPerson",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for a person within a particular scope.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this related person record is in active use.
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The patient this person is related to.
     */  "name": "patient", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The nature of the relationship between a patient and the related person.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A name associated with the person.
     */  "name": "name", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "HumanName",
      "isPrimitive": false }, 
    { 
    /*A contact detail for the person, e.g. a telephone number or an email address.
     */  "name": "telecom", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*Administrative Gender - the gender that the person is considered to have for administration and record keeping purposes.
     */  "name": "gender", 
    
      "min": "0", 
      "max": "1", 
      "type": "AdministrativeGender",
      "isPrimitive": true }, 
    { 
    /*The date on which the related person was born.
     */  "name": "birthDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Address where the related person can be contacted or visited.
     */  "name": "address", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Address",
      "isPrimitive": false }, 
    { 
    /*Image of the person.
     */  "name": "photo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Attachment",
      "isPrimitive": false }, 
    { 
    /*The period of time during which this relationship is or was active. If there are no dates defined, then the interval is unknown.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
  ]
},
"RequestGroup": {
    /*A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RequestGroup",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Allows a service to provide a unique, business identifier for the request.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A canonical URL referencing a FHIR-defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
     */  "name": "instantiatesCanonical", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*A URL referencing an externally defined protocol, guideline, orderset or other definition that is adhered to in whole or in part by this request.
     */  "name": "instantiatesUri", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A plan, proposal or order that is fulfilled in whole or in part by this request.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Completed or terminated request(s) whose function is taken by this new request.
     */  "name": "replaces", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A shared identifier common to all requests that were authorized more or less simultaneously by a single author, representing the identifier of the requisition, prescription or similar form.
     */  "name": "groupIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The current state of the request. For request groups, the status reflects the status of all the requests in the group.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestStatus",
      "isPrimitive": true }, 
    { 
    /*Indicates the level of authority/intentionality associated with the request and where the request fits into the workflow chain.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestIntent",
      "isPrimitive": true }, 
    { 
    /*Indicates how quickly the request should be addressed with respect to other requests.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    { 
    /*A code that identifies what the overall request group is.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The subject for which the request group was created.
     */  "name": "subject", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the context of the request group, if any.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates when the request group was created.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Provides a reference to the author of the request group.
     */  "name": "author", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the reason for the request group in coded or textual form.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource whose existence justifies this request group.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Provides a mechanism to communicate additional information about the response.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*The actions, if any, produced by the evaluation of the artifact.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RequestGroup.Action",
      "isPrimitive": false }, 
  ]
},
"RequestGroup.Action": {
    /*A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
     */
  "name": "RequestGroup.Action",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A user-visible prefix for the action.
     */  "name": "prefix", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The title of the action displayed to a user.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short description of the action used to provide a summary to display to the user.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A text equivalent of the action to be performed. This provides a human-interpretable description of the action when the definition is consumed by a system that might not be capable of interpreting it dynamically.
     */  "name": "textEquivalent", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A code that provides meaning for the action or action group. For example, a section may have a LOINC code for a the section of a documentation template.
     */  "name": "code", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Didactic or other informational resources associated with the action that can be provided to the CDS recipient. Information resources can include inline text commentary and links to web resources.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*An expression that describes applicability criteria, or start/stop conditions for the action.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RequestGroup.Condition",
      "isPrimitive": false }, 
    { 
    /*A relationship to another action such as "before" or "30-60 minutes after start of".
     */  "name": "relatedAction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RequestGroup.RelatedAction",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*An optional value describing when the action should be performed.
     */
        {   "name": "timingDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "timingAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "timingPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "timingDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "timingRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "timingTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*The participant that should perform or be responsible for this action.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The type of action to perform (create, update, remove).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Defines the grouping behavior for the action and its children.
     */  "name": "groupingBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionGroupingBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines the selection behavior for the action and its children.
     */  "name": "selectionBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionSelectionBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines the requiredness behavior for the action.
     */  "name": "requiredBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionRequiredBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines whether the action should usually be preselected.
     */  "name": "precheckBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionPrecheckBehavior",
      "isPrimitive": true }, 
    { 
    /*Defines whether the action can be selected multiple times.
     */  "name": "cardinalityBehavior", 
    
      "min": "0", 
      "max": "1", 
      "type": "ActionCardinalityBehavior",
      "isPrimitive": true }, 
    { 
    /*The resource that is the target of the action (e.g. CommunicationRequest).
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Sub actions.
     */  "name": "action", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RequestGroup.Action",
      "isPrimitive": false }, 
  ]
},
"RequestGroup.Condition": {
    /*A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
     */
  "name": "RequestGroup.Condition",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The kind of condition.
     */  "name": "kind", 
    
      "min": "1", 
      "max": "1", 
      "type": "ActionConditionKind",
      "isPrimitive": true }, 
    { 
    /*A brief, natural language description of the condition that effectively communicates the intended semantics.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The media type of the language for the expression.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An expression that returns true or false, indicating whether or not the condition is satisfied.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"RequestGroup.RelatedAction": {
    /*A group of related requests that can be used to capture intended activities that have inter-dependencies such as "give this medication after that one".
     */
  "name": "RequestGroup.RelatedAction",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The element id of the action this is related to.
     */  "name": "actionId", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The relationship of this action to the related action.
     */  "name": "relationship", 
    
      "min": "1", 
      "max": "1", 
      "type": "ActionRelationshipType",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A duration or range of durations to apply to the relationship. For example, 30-60 minutes before.
     */
        {   "name": "offsetDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "offsetRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
  ]
},
"ResearchStudy": {
    /*A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResearchStudy",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this research study by the sponsor or other systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A short, descriptive user-friendly label for the study.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The set of steps expected to be performed as part of the execution of the study.
     */  "name": "protocol", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger research study of which this particular study is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The current state of the study.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResearchStudyStatus",
      "isPrimitive": true }, 
    { 
    /*The type of study based upon the intent of the study's activities. A classification of the intent of the study.
     */  "name": "primaryPurposeType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The stage in the progression of a therapy from initial experimental use in humans in clinical trials to post-market evaluation.
     */  "name": "phase", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Codes categorizing the type of study such as investigational vs. observational, type of blinding, type of randomization, safety vs. efficacy, etc.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The medication(s), food(s), therapy(ies), device(s) or other concerns or interventions that the study is seeking to gain more information about.
     */  "name": "focus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The condition that is the focus of the study.  For example, In a study to examine risk factors for Lupus, might have as an inclusion criterion "healthy volunteer", but the target condition code would be a Lupus SNOMED code.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Contact details to assist a user in learning more about or engaging with the study.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*Citations, references and other related documents.
     */  "name": "relatedArtifact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RelatedArtifact",
      "isPrimitive": false }, 
    { 
    /*Key terms to aid in searching for or filtering the study.
     */  "name": "keyword", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates a country, state or other region where the study is taking place.
     */  "name": "location", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A full description of how the study is being conducted.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Reference to a Group that defines the criteria for and quantity of subjects participating in the study.  E.g. " 200 female Europeans between the ages of 20 and 45 with early onset diabetes".
     */  "name": "enrollment", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the start date and the expected (or actual, depending on status) end date for the study.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*An organization that initiates the investigation and is legally responsible for the study.
     */  "name": "sponsor", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A researcher in a study who oversees multiple aspects of the study, such as concept development, protocol writing, protocol submission for IRB approval, participant recruitment, informed consent, data collection, analysis, interpretation and presentation.
     */  "name": "principalInvestigator", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A facility in which study activities are conducted.
     */  "name": "site", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A description and/or code explaining the premature termination of the study.
     */  "name": "reasonStopped", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Comments made about the study by the performer, subject or other participants.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Describes an expected sequence of events for one of the participants of a study.  E.g. Exposure to drug A, wash-out, exposure to drug B, wash-out, follow-up.
     */  "name": "arm", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ResearchStudy.Arm",
      "isPrimitive": false }, 
    { 
    /*A goal that the study is aiming to achieve in terms of a scientific question to be answered by the analysis of data collected during the study.
     */  "name": "objective", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ResearchStudy.Objective",
      "isPrimitive": false }, 
  ]
},
"ResearchStudy.Arm": {
    /*A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.
     */
  "name": "ResearchStudy.Arm",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique, human-readable label for this arm of the study.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Categorization of study arm, e.g. experimental, active comparator, placebo comparater.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A succinct description of the path through the study that would be followed by a subject adhering to this arm.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ResearchStudy.Objective": {
    /*A process where a researcher or organization plans and then executes a series of steps intended to increase the field of healthcare-related knowledge.  This includes studies of safety, efficacy, comparative effectiveness and other information about medications, devices, therapies and other interventional and investigative techniques.  A ResearchStudy involves the gathering of information about human or animal subjects.
     */
  "name": "ResearchStudy.Objective",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique, human-readable label for this objective of the study.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The kind of study objective.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"ResearchStudyStatus": {
    /*Codes that convey the current status of the research studyIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResearchStudyStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ResearchStudyStatus-list" }, 
  ],
  "elems": [
  ]
},
"ResearchSubject": {
    /*A physical entity which is the primary unit of operational and/or administrative interest in a study.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResearchSubject",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this research subject for a study.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The current state of the subject.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ResearchSubjectStatus",
      "isPrimitive": true }, 
    { 
    /*The dates the subject began and ended their participation in the study.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Reference to the study the subject is participating in.
     */  "name": "study", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The record of the person or animal who is involved in the study.
     */  "name": "individual", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The name of the arm in the study the subject is expected to follow as part of this study.
     */  "name": "assignedArm", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The name of the arm in the study the subject actually followed as part of this study.
     */  "name": "actualArm", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A record of the patient's informed agreement to participate in the study.
     */  "name": "consent", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"ResearchSubjectStatus": {
    /*Indicates the progression of a study subject through a studyIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ResearchSubjectStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ResearchSubjectStatus-list" }, 
  ],
  "elems": [
  ]
},
"RiskAssessment": {
    /*An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "RiskAssessment",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifier assigned to the risk assessment.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A reference to the request that is fulfilled by this risk assessment.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A reference to a resource that this risk assessment is part of, such as a Procedure.
     */  "name": "parent", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The status of the RiskAssessment, using the same statuses as an Observation.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "ObservationStatus",
      "isPrimitive": true }, 
    { 
    /*The algorithm, process or mechanism used to evaluate the risk.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of the risk assessment performed.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The patient or group the risk assessment applies to.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The encounter where the assessment was performed.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date (and possibly time) the risk assessment was performed.
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*For assessments or prognosis specific to a particular condition, indicates the condition being assessed.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The provider or software application that performed the assessment.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The reason the risk assessment was performed.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Resources supporting the reason the risk assessment was performed.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the source data considered as part of the assessment (for example, FamilyHistory, Observations, Procedures, Conditions, etc.).
     */  "name": "basis", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Describes the expected outcome for the subject.
     */  "name": "prediction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "RiskAssessment.Prediction",
      "isPrimitive": false }, 
    { 
    /*A description of the steps that might be taken to reduce the identified risk(s).
     */  "name": "mitigation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional comments about the risk assessment.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"RiskAssessment.Prediction": {
    /*An assessment of the likely outcome(s) for a patient or other subject as well as the likelihood of each outcome.
     */
  "name": "RiskAssessment.Prediction",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*One of the potential outcomes for the patient (e.g. remission, death,  a particular condition).
     */  "name": "outcome", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Indicates how likely the outcome is (in the specified timeframe).
     */
        {   "name": "probabilityDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "probabilityRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
    { 
    /*Indicates how likely the outcome is (in the specified timeframe), expressed as a qualitative value (e.g. low, medium, or high).
     */  "name": "qualitativeRisk", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the risk for this particular subject (with their specific characteristics) divided by the risk of the population in general.  (Numbers greater than 1 = higher risk than the population, numbers less than 1 = lower risk.).
     */  "name": "relativeRisk", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Indicates the period of time or age range of the subject to which the specified probability applies.
     */
        {   "name": "whenPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "whenRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
    ], 
    { 
    /*Additional information explaining the basis for the prediction.
     */  "name": "rationale", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Schedule": {
    /*A container for slots of time that may be available for booking appointments.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Schedule",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*External Ids for this item.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Whether this schedule record is in active use or should not be used (such as was entered in error).
     */  "name": "active", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A broad categorization of the service that is to be performed during this appointment.
     */  "name": "serviceCategory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specific service that is to be performed during this appointment.
     */  "name": "serviceType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specialty of a practitioner that would be required to perform the service requested in this appointment.
     */  "name": "specialty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The resource this Schedule resource is providing availability information for. These are usually expected to be one of HealthcareService, Location, Practitioner, PractitionerRole, Device, Patient or RelatedPerson.
     */  "name": "actor", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The period of time that the slots that are attached to this Schedule resource cover (even if none exist). These  cover the amount of time that an organization's planning horizon; the interval for which they are currently accepting appointments. This does not define a "template" for planning outside these dates.
     */  "name": "planningHorizon", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*Comments on the availability to describe any extended information. Such as custom constraints on the slots that may be associated.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SearchParameter": {
    /*A search parameter that defines a named search item that can be used to search/filter on a resource.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SearchParameter",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this search parameter when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this search parameter is (or will be) published.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The identifier that is used to identify this version of the search parameter when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the search parameter author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the search parameter. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Where this search parameter is originally defined. If a derivedFrom is provided, then the details in the search parameter must be consistent with the definition from which it is defined. i.e. the parameter should have the same meaning, and (usually) the functionality should be a proper subset of the underlying search parameter.
     */  "name": "derivedFrom", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*The status of this search parameter. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this search parameter is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the search parameter was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the search parameter changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the search parameter.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the search parameter from a consumer's perspective. and how it used.
     */  "name": "description", 
    
      "min": "1", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate search parameter instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the search parameter is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this search parameter is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The code used in the URL or the parameter name in a parameters resource for this search parameter.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The base resource type(s) that this search parameter can be used against.
     */  "name": "base", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*The type of value a search parameter refers to, and how the content is interpreted.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "SearchParamType",
      "isPrimitive": true }, 
    { 
    /*A FHIRPath expression that returns a set of elements for the search parameter.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An XPath expression that returns a set of elements for the search parameter.
     */  "name": "xpath", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*How the search parameter relates to the set of elements returned by evaluating the xpath query.
     */  "name": "xpathUsage", 
    
      "min": "0", 
      "max": "1", 
      "type": "XPathUsageType",
      "isPrimitive": true }, 
    { 
    /*Types of resource (if a resource is referenced).
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ResourceType",
      "isPrimitive": true }, 
    { 
    /*Whether multiple values are allowed for each time the parameter exists. Values are separated by commas, and the parameter matches if any of the values match.
     */  "name": "multipleOr", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether multiple parameters are allowed - e.g. more than one parameter with the same name. The search matches if all the parameters match.
     */  "name": "multipleAnd", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Comparators supported for the search parameter.
     */  "name": "comparator", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SearchComparator",
      "isPrimitive": true }, 
    { 
    /*A modifier supported for the search parameter.
     */  "name": "modifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SearchModifierCode",
      "isPrimitive": true }, 
    { 
    /*Contains the names of any search parameters which may be chained to the containing search parameter. Chained parameters may be added to search parameters of type reference and specify that resources will only be returned if they contain a reference to a resource which matches the chained parameter value. Values for this field should be drawn from SearchParameter.code for a parameter on the target resource type.
     */  "name": "chain", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Used to define the parts of a composite search parameter.
     */  "name": "component", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SearchParameter.Component",
      "isPrimitive": false }, 
  ]
},
"SearchParameter.Component": {
    /*A search parameter that defines a named search item that can be used to search/filter on a resource.
     */
  "name": "SearchParameter.Component",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The definition of the search parameter that describes this part.
     */  "name": "definition", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*A sub-expression that defines how to extract values for this component from the output of the main SearchParameter.expression.
     */  "name": "expression", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"XPathUsageType": {
    /*How a search parameter relates to the set of elements returned by evaluating its xpath query.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "XPathUsageType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "XPathUsageType-list" }, 
  ],
  "elems": [
  ]
},
"SearchModifierCode": {
    /*A supported modifier for a search parameter.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SearchModifierCode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SearchModifierCode-list" }, 
  ],
  "elems": [
  ]
},
"SearchComparator": {
    /*What Search Comparator Codes are supported in searchIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SearchComparator",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SearchComparator-list" }, 
  ],
  "elems": [
  ]
},
"Sequence": {
    /*Raw data describing a biological sequence.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Sequence",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique identifier for this particular sequence instance. This is a FHIR-defined id.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Amino Acid Sequence/ DNA Sequence / RNA Sequence.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Whether the sequence is numbered starting at 0 (0-based numbering or coordinates, inclusive start, exclusive end) or starting at 1 (1-based numbering, inclusive start and inclusive end).
     */  "name": "coordinateSystem", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The patient whose sequencing results are described by this resource.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Specimen used for sequencing.
     */  "name": "specimen", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The method for sequencing, for example, chip information.
     */  "name": "device", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization or lab that should be responsible for this result.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The number of copies of the seqeunce of interest. (RNASeq).
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*A sequence that is used as a reference to describe variants that are present in a sequence analyzed.
     */  "name": "referenceSeq", 
    
      "min": "0", 
      "max": "1", 
      "type": "Sequence.ReferenceSeq",
      "isPrimitive": false }, 
    { 
    /*The definition of variant here originates from Sequence ontology ([variant_of](http://www.sequenceontology.org/browser/current_svn/term/variant_of)). This element can represent amino acid or nucleic sequence change(including insertion,deletion,SNP,etc.)  It can represent some complex mutation or segment variation with the assist of CIGAR string.
     */  "name": "variant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Sequence.Variant",
      "isPrimitive": false }, 
    { 
    /*Sequence that was observed. It is the result marked by referenceSeq along with variant records on referenceSeq. This shall starts from referenceSeq.windowStart and end by referenceSeq.windowEnd.
     */  "name": "observedSeq", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An experimental feature attribute that defines the quality of the feature in a quantitative way, such as a phred quality score ([SO:0001686](http://www.sequenceontology.org/browser/current_svn/term/SO:0001686)).
     */  "name": "quality", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Sequence.Quality",
      "isPrimitive": false }, 
    { 
    /*Coverage (read depth or depth) is the average number of reads representing a given nucleotide in the reconstructed sequence.
     */  "name": "readCoverage", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Configurations of the external repository. The repository shall store target's observedSeq or records related with target's observedSeq.
     */  "name": "repository", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Sequence.Repository",
      "isPrimitive": false }, 
    { 
    /*Pointer to next atomic sequence which at most contains one variant.
     */  "name": "pointer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Information about chromosome structure variation.
     */  "name": "structureVariant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Sequence.StructureVariant",
      "isPrimitive": false }, 
  ]
},
"Sequence.ReferenceSeq": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.ReferenceSeq",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Structural unit composed of a nucleic acid molecule which controls its own replication through the interaction of specific proteins at one or more origins of replication ([SO:0000340](http://www.sequenceontology.org/browser/current_svn/term/SO:0000340)).
     */  "name": "chromosome", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The Genome Build used for reference, following GRCh build versions e.g. 'GRCh 37'.  Version number must be included if a versioned release of a primary build was used.
     */  "name": "genomeBuild", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A relative reference to a DNA strand based on gene orientation. The strand that contains the open reading frame of the gene is the "sense" strand, and the opposite complementary strand is the "antisense" strand.
     */  "name": "orientation", 
    
      "min": "0", 
      "max": "1", 
      "type": "orientationType",
      "isPrimitive": true }, 
    { 
    /*Reference identifier of reference sequence submitted to NCBI. It must match the type in the Sequence.type field. For example, the prefix, “NG_” identifies reference sequence for genes, “NM_” for messenger RNA transcripts, and “NP_” for amino acid sequences.
     */  "name": "referenceSeqId", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A Pointer to another Sequence entity as reference sequence.
     */  "name": "referenceSeqPointer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A string like "ACGT".
     */  "name": "referenceSeqString", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An absolute reference to a strand. The Watson strand is the strand whose 5'-end is on the short arm of the chromosome, and the Crick strand as the one whose 5'-end is on the long arm.
     */  "name": "strand", 
    
      "min": "0", 
      "max": "1", 
      "type": "strandType",
      "isPrimitive": true }, 
    { 
    /*Start position of the window on the reference sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.
     */  "name": "windowStart", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*End position of the window on the reference sequence. If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.
     */  "name": "windowEnd", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
  ]
},
"Sequence.Variant": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.Variant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Start position of the variant on the  reference sequence.If the coordinate system is either 0-based or 1-based, then start position is inclusive.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*End position of the variant on the reference sequence.If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)).  Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the observed  sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.
     */  "name": "observedAllele", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An allele is one of a set of coexisting sequence variants of a gene ([SO:0001023](http://www.sequenceontology.org/browser/current_svn/term/SO:0001023)). Nucleotide(s)/amino acids from start position of sequence to stop position of sequence on the positive (+) strand of the reference sequence. When the sequence  type is DNA, it should be the sequence on the positive (+) strand. This will lay in the range between variant.start and variant.end.
     */  "name": "referenceAllele", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Extended CIGAR string for aligning the sequence with reference bases. See detailed documentation [here](http://support.illumina.com/help/SequencingAnalysisWorkflow/Content/Vault/Informatics/Sequencing_Analysis/CASAVA/swSEQ_mCA_ExtendedCIGARFormat.htm).
     */  "name": "cigar", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A pointer to an Observation containing variant information.
     */  "name": "variantPointer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Sequence.Quality": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.Quality",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*INDEL / SNP / Undefined variant.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "qualityType",
      "isPrimitive": true }, 
    { 
    /*Gold standard sequence used for comparing against.
     */  "name": "standardSequence", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Start position of the sequence. If the coordinate system is either 0-based or 1-based, then start position is inclusive.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*End position of the sequence.If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The score of an experimentally derived feature such as a p-value ([SO:0001685](http://www.sequenceontology.org/browser/current_svn/term/SO:0001685)).
     */  "name": "score", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Which method is used to get sequence quality.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*True positives, from the perspective of the truth data, i.e. the number of sites in the Truth Call Set for which there are paths through the Query Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.
     */  "name": "truthTP", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*True positives, from the perspective of the query data, i.e. the number of sites in the Query Call Set for which there are paths through the Truth Call Set that are consistent with all of the alleles at this site, and for which there is an accurate genotype call for the event.
     */  "name": "queryTP", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*False negatives, i.e. the number of sites in the Truth Call Set for which there is no path through the Query Call Set that is consistent with all of the alleles at this site, or sites for which there is an inaccurate genotype call for the event. Sites with correct variant but incorrect genotype are counted here.
     */  "name": "truthFN", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*False positives, i.e. the number of sites in the Query Call Set for which there is no path through the Truth Call Set that is consistent with this site. Sites with correct variant but incorrect genotype are counted here.
     */  "name": "queryFP", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The number of false positives where the non-REF alleles in the Truth and Query Call Sets match (i.e. cases where the truth is 1/1 and the query is 0/1 or similar).
     */  "name": "gtFP", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*QUERY.TP / (QUERY.TP + QUERY.FP).
     */  "name": "precision", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*TRUTH.TP / (TRUTH.TP + TRUTH.FN).
     */  "name": "recall", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Harmonic mean of Recall and Precision, computed as: 2 * precision * recall / (precision + recall).
     */  "name": "fScore", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Receiver Operator Characteristic (ROC) Curve  to give sensitivity/specificity tradeoff.
     */  "name": "roc", 
    
      "min": "0", 
      "max": "1", 
      "type": "Sequence.Roc",
      "isPrimitive": false }, 
  ]
},
"Sequence.Roc": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.Roc",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Invidual data point representing the GQ (genotype quality) score threshold.
     */  "name": "score", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The number of true positives if the GQ score threshold was set to "score" field value.
     */  "name": "numTP", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The number of false positives if the GQ score threshold was set to "score" field value.
     */  "name": "numFP", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The number of false negatives if the GQ score threshold was set to "score" field value.
     */  "name": "numFN", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Calculated precision if the GQ score threshold was set to "score" field value.
     */  "name": "precision", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Calculated sensitivity if the GQ score threshold was set to "score" field value.
     */  "name": "sensitivity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Calculated fScore if the GQ score threshold was set to "score" field value.
     */  "name": "fMeasure", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "decimal",
      "isPrimitive": true }, 
  ]
},
"Sequence.Repository": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.Repository",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Click and see / RESTful API / Need login to see / RESTful API with authentication / Other ways to see resource.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "repositoryType",
      "isPrimitive": true }, 
    { 
    /*URI of an external repository which contains further details about the genetics data.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*URI of an external repository which contains further details about the genetics data.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Id of the variant in this external repository. The server will understand how to use this id to call for more info about datasets in external repository.
     */  "name": "datasetId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Id of the variantset in this external repository. The server will understand how to use this id to call for more info about variantsets in external repository.
     */  "name": "variantsetId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Id of the read in this external repository.
     */  "name": "readsetId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"Sequence.StructureVariant": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.StructureVariant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identify the exact boundaries of variant sequences. Each type of structure variant requires the DNA duplex to be broken and rejoined, and this creates a new sequence of bases at the rejoined sites, known as breakpoints or boundaries.
     */  "name": "precision", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Structural Variant reported aCGH ratio.
     */  "name": "reportedaCGHRatio", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Length of the variant choromosome.
     */  "name": "length", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Structural variant outer.
     */  "name": "outer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Sequence.Outer",
      "isPrimitive": false }, 
    { 
    /*Structural variant inner.
     */  "name": "inner", 
    
      "min": "0", 
      "max": "1", 
      "type": "Sequence.Inner",
      "isPrimitive": false }, 
  ]
},
"Sequence.Outer": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.Outer",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Structural Variant Outer Start.If the coordinate system is either 0-based or 1-based, then start position is inclusive.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Structural Variant Outer End. If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
  ]
},
"Sequence.Inner": {
    /*Raw data describing a biological sequence.
     */
  "name": "Sequence.Inner",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Structural Variant Inner Start.If the coordinate system is either 0-based or 1-based, then start position is inclusive.
     */  "name": "start", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Structural Variant Inner End. If the coordinate system is 0-based then end is is exclusive and does not include the last position. If the coordinate system is 1-base, then end is inclusive and includes the last position.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
  ]
},
"strandType": {
    /*Type for strandIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "strandType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "strandType-list" }, 
  ],
  "elems": [
  ]
},
"orientationType": {
    /*Type for orientationIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "orientationType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "orientationType-list" }, 
  ],
  "elems": [
  ]
},
"repositoryType": {
    /*Type for access of external URIIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "repositoryType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "repositoryType-list" }, 
  ],
  "elems": [
  ]
},
"qualityType": {
    /*Type for quality reportIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "qualityType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "qualityType-list" }, 
  ],
  "elems": [
  ]
},
"ServiceRequest": {
    /*A record of a request for service such as diagnostic investigations, treatments, or operations to be performed.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ServiceRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifiers assigned to this order instance by the orderer and/or the receiver and/or order fulfiller.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Protocol or definition followed by this request.
     */  "name": "instantiates", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Plan/proposal/order fulfilled by this request.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The request takes the place of the referenced completed or terminated request(s).
     */  "name": "replaces", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A shared identifier common to all service requests that were authorized more or less simultaneously by a single author, representing the composite or group identifier.
     */  "name": "requisition", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the order.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestStatus",
      "isPrimitive": true }, 
    { 
    /*Whether the request is a proposal, plan, an original order or a reflex order.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestIntent",
      "isPrimitive": true }, 
    { 
    /*A code that classifies the service for searching, sorting and display purposes (e.g. "Surgical Procedure").
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates how quickly the ServiceRequest should be addressed with respect to other requests.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    { 
    /*Set this to true if the record is saying that the service/procedure should NOT be performed.
     */  "name": "doNotPerform", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A code that identifies a particular service (i.e., procedure, diagnostic investigation, or panel of investigations) that have been requested.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Additional details and instructions about the how the services are to be delivered.   For example, and order for a urinary catheter may have an order detail for an external or indwelling catheter, or an order for a bandage may require additional instructions specifying how the bandage should be applied.
     */  "name": "orderDetail", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*On whom or what the service is to be performed. This is usually a human patient, but can also be requested on animals, groups of humans or animals, devices such as dialysis machines, or even locations (typically for environmental scans).
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An encounter or episode of care that provides additional information about the healthcare context in which this request is made.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date/time at which the requested service should occur.
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "occurrenceTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    [ /* Choice */ 
    /*If a CodeableConcept is present, it indicates the pre-condition for performing the service.  For example "pain", "on flare-up", etc.
     */
        {   "name": "asNeededBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "asNeededCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*When the request transitioned to being actionable.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The individual who initiated the request and has responsibility for its activation.
     */  "name": "requester", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Desired type of performer for doing the requested service.
     */  "name": "performerType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The desired performer for doing the requested service.  For example, the surgeon, dermatopathologist, endoscopist, etc.
     */  "name": "performer", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An explanation or justification for why this service is being requested in coded or textual form.   This is often for billing purposes.  May relate to the resources referred to in supportingInformation.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates another resource that provides a justification for why this service is being requested.   May relate to the resources referred to in supportingInformation.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Insurance plans, coverage extensions, pre-authorizations and/or pre-determinations that may be needed for delivering the requested service.
     */  "name": "insurance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Additional clinical information about the patient or specimen that may influence the services or their interpretations.     This information includes diagnosis, clinical findings and other observations.  In laboratory ordering these are typically referred to as "ask at order entry questions (AOEs)".  This includes observations explicitly requested by the producer (filler) to provide context or supporting information needed to complete the order. For example,  reporting the amount of inspired oxygen for blood gas measurements.
     */  "name": "supportingInfo", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*One or more specimens that the laboratory procedure will use.
     */  "name": "specimen", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Anatomic location where the procedure should be performed. This is the target site.
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Any other notes and comments made about the service request. For example, internal billing notes.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Instructions in terms that are understood by the patient or consumer.
     */  "name": "patientInstruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Key events in the history of the request.
     */  "name": "relevantHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Slot": {
    /*A slot of time on a schedule that may be available for booking appointments.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Slot",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*External Ids for this item.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A broad categorization of the service that is to be performed during this appointment.
     */  "name": "serviceCategory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of appointments that can be booked into this slot (ideally this would be an identifiable service - which is at a location, rather than the location itself). If provided then this overrides the value provided on the availability resource.
     */  "name": "serviceType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The specialty of a practitioner that would be required to perform the service requested in this appointment.
     */  "name": "specialty", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The style of appointment or patient that may be booked in the slot (not service type).
     */  "name": "appointmentType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The schedule resource that this slot defines an interval of status information.
     */  "name": "schedule", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*busy | free | busy-unavailable | busy-tentative | entered-in-error.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "SlotStatus",
      "isPrimitive": true }, 
    { 
    /*Date/Time that the slot is to begin.
     */  "name": "start", 
    
      "min": "1", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Date/Time that the slot is to conclude.
     */  "name": "end", 
    
      "min": "1", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*This slot has already been overbooked, appointments are unlikely to be accepted for this time.
     */  "name": "overbooked", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Comments on the slot to describe any extended information. Such as custom constraints on the slot.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SlotStatus": {
    /*The free/busy status of the slot.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SlotStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SlotStatus-list" }, 
  ],
  "elems": [
  ]
},
"Specimen": {
    /*A sample to be used for analysis.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Specimen",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Id for specimen.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier assigned by the lab when accessioning specimen(s). This is not necessarily the same as the specimen identifier, depending on local lab procedures.
     */  "name": "accessionIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The availability of the specimen.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "SpecimenStatus",
      "isPrimitive": true }, 
    { 
    /*The kind of material that forms the specimen.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Where the specimen came from. This may be from patient(s),from a location (e.g., the source of an environmental sample), or a sampling of a substance or a device.
     */  "name": "subject", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Time when specimen was received for processing or testing.
     */  "name": "receivedTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Reference to the parent (source) specimen which is used when the specimen was either derived from or a component of another specimen.
     */  "name": "parent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Details concerning a service request that required a specimen to be collected.
     */  "name": "request", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Details concerning the specimen collection.
     */  "name": "collection", 
    
      "min": "0", 
      "max": "1", 
      "type": "Specimen.Collection",
      "isPrimitive": false }, 
    { 
    /*Details concerning processing and processing steps for the specimen.
     */  "name": "processing", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Specimen.Processing",
      "isPrimitive": false }, 
    { 
    /*The container holding the specimen.  The recursive nature of containers; i.e. blood in tube in tray in rack is not addressed here.
     */  "name": "container", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Specimen.Container",
      "isPrimitive": false }, 
    { 
    /*To communicate any details or issues about the specimen or during the specimen collection. (for example: broken vial, sent with patient, frozen).
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"Specimen.Collection": {
    /*A sample to be used for analysis.
     */
  "name": "Specimen.Collection",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Person who collected the specimen.
     */  "name": "collector", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Time when specimen was collected from subject - the physiologically relevant time.
     */
        {   "name": "collectedDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "collectedPeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
    { 
    /*The quantity of specimen collected; for instance the volume of a blood sample, or the physical measurement of an anatomic pathology sample.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*A coded value specifying the technique that is used to perform the procedure.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Anatomical location from which the specimen was collected (if subject is a patient). This is the target site.  This element is not used for environmental specimens.
     */  "name": "bodySite", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"Specimen.Processing": {
    /*A sample to be used for analysis.
     */
  "name": "Specimen.Processing",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Textual description of procedure.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A coded value specifying the procedure used to process the specimen.
     */  "name": "procedure", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Material used in the processing step.
     */  "name": "additive", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*A record of the time or period when the specimen processing occurred.  For example the time of sample fixation or the period of time the sample was in formalin.
     */
        {   "name": "timeDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "timePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
    ], 
  ]
},
"Specimen.Container": {
    /*A sample to be used for analysis.
     */
  "name": "Specimen.Container",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Id for container. There may be multiple; a manufacturer's bar code, lab assigned identifier, etc. The container ID may differ from the specimen id in some circumstances.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Textual description of the container.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of container associated with the specimen (e.g. slide, aliquot, etc.).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The capacity (volume or other measure) the container may contain.
     */  "name": "capacity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The quantity of specimen in the container; may be volume, dimensions, or other appropriate measurements, depending on the specimen type.
     */  "name": "specimenQuantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Introduced substance to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.
     */
        {   "name": "additiveCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "additiveReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"SpecimenStatus": {
    /*Codes providing the status/availability of a specimen.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SpecimenStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SpecimenStatus-list" }, 
  ],
  "elems": [
  ]
},
"SpecimenDefinition": {
    /*A kind of specimen with associated set of requirements.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SpecimenDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A business identifier associated with the kind of specimen.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The kind of material to be collected.
     */  "name": "typeCollected", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Preparation of the patient for specimen collection.
     */  "name": "patientPreparation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Time aspect of specimen collection (duration or offset).
     */  "name": "timeAspect", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The action to be performed for collecting the specimen.
     */  "name": "collection", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Specimen conditioned in a container as expected by the testing laboratory.
     */  "name": "specimenToLab", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SpecimenDefinition.SpecimenToLab",
      "isPrimitive": false }, 
  ]
},
"SpecimenDefinition.SpecimenToLab": {
    /*A kind of specimen with associated set of requirements.
     */
  "name": "SpecimenDefinition.SpecimenToLab",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Primary of secondary specimen.
     */  "name": "isDerived", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The kind of specimen conditioned for testing expected by lab.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The preference for this type of conditioned specimen.
     */  "name": "preference", 
    
      "min": "1", 
      "max": "1", 
      "type": "SpecimenContainedPreference",
      "isPrimitive": true }, 
    { 
    /*The type of material of the container.
     */  "name": "containerMaterial", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of container used to contain this kind of specimen.
     */  "name": "containerType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Color of container cap.
     */  "name": "containerCap", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The textual description of the kind of container.
     */  "name": "containerDescription", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The capacity (volume or other measure) of this kind of container.
     */  "name": "containerCapacity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*The minimum volume to be conditioned in the container.
     */  "name": "containerMinimumVolume", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.
     */  "name": "containerAdditive", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SpecimenDefinition.ContainerAdditive",
      "isPrimitive": false }, 
    { 
    /*Special processing that should be applied to the container for this kind of specimen.
     */  "name": "containerPreparation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Requirements for delivery and special handling of this kind of conditioned specimen.
     */  "name": "requirement", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The usual time that a specimen of this kind is retained after the ordered tests are completed, for the purpose of additional testing.
     */  "name": "retentionTime", 
    
      "min": "0", 
      "max": "1", 
      "type": "Duration",
      "isPrimitive": false }, 
    { 
    /*Criterion for rejection of the specimen in its container by the laboratory.
     */  "name": "rejectionCriterion", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Set of instructions for conservation/transport of the specimen at a defined temperature interval, prior the testing process.
     */  "name": "handling", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SpecimenDefinition.Handling",
      "isPrimitive": false }, 
  ]
},
"SpecimenDefinition.ContainerAdditive": {
    /*A kind of specimen with associated set of requirements.
     */
  "name": "SpecimenDefinition.ContainerAdditive",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Substance introduced in the kind of container to preserve, maintain or enhance the specimen. Examples: Formalin, Citrate, EDTA.
     */
        {   "name": "additiveCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "additiveReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"SpecimenDefinition.Handling": {
    /*A kind of specimen with associated set of requirements.
     */
  "name": "SpecimenDefinition.Handling",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code representing the set of handling instructions.
     */  "name": "conditionSet", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The temperature interval for this set of handling instructions.
     */  "name": "tempRange", 
    
      "min": "0", 
      "max": "1", 
      "type": "Range",
      "isPrimitive": false }, 
    { 
    /*The maximum time interval of conservation of the specimen with these conditions.
     */  "name": "maxDuration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Duration",
      "isPrimitive": false }, 
    { 
    /*Textual instructions regarding the light exposure of the specimen prior testing.
     */  "name": "lightExposure", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional textual instructions for the conservation or transport of the specimen.
     */  "name": "instruction", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SpecimenContainedPreference": {
    /*Degree of preference of a type of conditioned specimenIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SpecimenContainedPreference",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SpecimenContainedPreference-list" }, 
  ],
  "elems": [
  ]
},
"StructureDefinition": {
    /*A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureDefinition",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this structure definition when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this structure definition is (or will be) published.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this structure definition when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the structure definition when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure definition author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the structure definition. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the structure definition.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this structure definition. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this structure definition is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the structure definition was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure definition changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the structure definition.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the structure definition from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate structure definition instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the structure definition is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this structure definition is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the structure definition and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure definition.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A set of key words or terms from external terminologies that may be used to assist with indexing and searching of templates.
     */  "name": "keyword", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The version of the FHIR specification on which this StructureDefinition is based - this is the formal version of the specification, without the revision number, e.g. [publication].[major].[minor], which is 3.3.0 for this version.
     */  "name": "fhirVersion", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*An external specification that the content is mapped to.
     */  "name": "mapping", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureDefinition.Mapping",
      "isPrimitive": false }, 
    { 
    /*Defines the kind of structure that this definition is describing.
     */  "name": "kind", 
    
      "min": "1", 
      "max": "1", 
      "type": "StructureDefinitionKind",
      "isPrimitive": true }, 
    { 
    /*Whether structure this definition describes is abstract or not  - that is, whether the structure is not intended to be instantiated. For Resources and Data types, abstract types will never be exchanged  between systems.
     */  "name": "abstract", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Identifies the types of resource or data type elements to which the extension can be applied.
     */  "name": "context", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureDefinition.Context",
      "isPrimitive": false }, 
    { 
    /*A set of rules as FHIRPath Invariants about when the extension can be used (e.g. co-occurrence variants for the extension). All the rules must be true.
     */  "name": "contextInvariant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type this structure describes. If the derivation kind is 'specialization' then this is the master definition for a type, and there is always one of these (a data type, an extension, a resource, including abstract ones). Otherwise the structure definition is a constraint on the stated type (and in this case, the type cannot be an abstract type).  References are URLs that are relative to http://hl7.org/fhir/StructureDefinition e.g. "string" is a reference to http://hl7.org/fhir/StructureDefinition/string. Absolute URLs are only allowed in logical models.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*An absolute URI that is the base structure from which this type is derived, either by specialization or constraint.
     */  "name": "baseDefinition", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*How the type relates to the baseDefinition.
     */  "name": "derivation", 
    
      "min": "0", 
      "max": "1", 
      "type": "TypeDerivationRule",
      "isPrimitive": true }, 
    { 
    /*A snapshot view is expressed in a standalone form that can be used and interpreted without considering the base StructureDefinition.
     */  "name": "snapshot", 
    
      "min": "0", 
      "max": "1", 
      "type": "StructureDefinition.Snapshot",
      "isPrimitive": false }, 
    { 
    /*A differential view is expressed relative to the base StructureDefinition - a statement of differences that it applies.
     */  "name": "differential", 
    
      "min": "0", 
      "max": "1", 
      "type": "StructureDefinition.Differential",
      "isPrimitive": false }, 
  ]
},
"StructureDefinition.Mapping": {
    /*A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
     */
  "name": "StructureDefinition.Mapping",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An Internal id that is used to identify this mapping set when specific mappings are made.
     */  "name": "identity", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*An absolute URI that identifies the specification that this mapping is expressed to.
     */  "name": "uri", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A name for the specification that is being mapped to.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Comments about this mapping, including version notes, issues, scope limitations, and other important notes for usage.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureDefinition.Context": {
    /*A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
     */
  "name": "StructureDefinition.Context",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Defines how to interpret the expression that defines what the context of the extension is.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "ExtensionContextType",
      "isPrimitive": true }, 
    { 
    /*An expression that defines where an extension can be used in resources.
     */  "name": "expression", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureDefinition.Snapshot": {
    /*A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
     */
  "name": "StructureDefinition.Snapshot",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Captures constraints on each element within the resource.
     */  "name": "element", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ElementDefinition",
      "isPrimitive": false }, 
  ]
},
"StructureDefinition.Differential": {
    /*A definition of a FHIR structure. This resource is used to describe the underlying resources, data types defined in FHIR, and also for describing extensions and constraints on resources and data types.
     */
  "name": "StructureDefinition.Differential",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Captures constraints on each element within the resource.
     */  "name": "element", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ElementDefinition",
      "isPrimitive": false }, 
  ]
},
"StructureDefinitionKind": {
    /*Defines the type of structure that a definition is describing.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureDefinitionKind",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureDefinitionKind-list" }, 
  ],
  "elems": [
  ]
},
"TypeDerivationRule": {
    /*How a type relates to its baseDefinition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TypeDerivationRule",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TypeDerivationRule-list" }, 
  ],
  "elems": [
  ]
},
"ExtensionContextType": {
    /*How an extension context is interpreted.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ExtensionContextType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "ExtensionContextType-list" }, 
  ],
  "elems": [
  ]
},
"StructureMap": {
    /*A Map of relationships between 2 structures that can be used to transform data.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMap",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this structure map when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this structure map is (or will be) published.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this structure map when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the structure map when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the structure map author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the structure map. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the structure map.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this structure map. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this structure map is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the structure map was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the structure map changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the structure map.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the structure map from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate structure map instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the structure map is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this structure map is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the structure map and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the structure map.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A structure definition used by this map. The structure definition may describe instances that are converted, or the instances that are produced.
     */  "name": "structure", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureMap.Structure",
      "isPrimitive": false }, 
    { 
    /*Other maps used by this map (canonical URLs).
     */  "name": "import", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Organizes the mapping into manageable chunks for human review/ease of maintenance.
     */  "name": "group", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "StructureMap.Group",
      "isPrimitive": false }, 
  ]
},
"StructureMap.Structure": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Structure",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The canonical URL that identifies the structure.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*How the referenced structure is used in this mapping.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "StructureMapModelMode",
      "isPrimitive": true }, 
    { 
    /*The name used for this type in the map.
     */  "name": "alias", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Documentation that describes how the structure is used in the mapping.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureMap.Group": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Group",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A unique name for the group for the convenience of human readers.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Another group that this group adds rules to.
     */  "name": "extends", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*If this is the default rule set to apply for the source type or this combination of types.
     */  "name": "typeMode", 
    
      "min": "1", 
      "max": "1", 
      "type": "StructureMapGroupTypeMode",
      "isPrimitive": true }, 
    { 
    /*Additional supporting documentation that explains the purpose of the group and the types of mappings within it.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A name assigned to an instance of data. The instance must be provided when the mapping is invoked.
     */  "name": "input", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "StructureMap.Input",
      "isPrimitive": false }, 
    { 
    /*Transform Rule from source to target.
     */  "name": "rule", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "StructureMap.Rule",
      "isPrimitive": false }, 
  ]
},
"StructureMap.Input": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Input",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Name for this instance of data.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Type for this instance of data.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Mode for this instance of data.
     */  "name": "mode", 
    
      "min": "1", 
      "max": "1", 
      "type": "StructureMapInputMode",
      "isPrimitive": true }, 
    { 
    /*Documentation for this instance of data.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureMap.Rule": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Rule",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Name of the rule for internal references.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Source inputs to the mapping.
     */  "name": "source", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "StructureMap.Source",
      "isPrimitive": false }, 
    { 
    /*Content to create because of this mapping rule.
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureMap.Target",
      "isPrimitive": false }, 
    { 
    /*Rules contained in this rule.
     */  "name": "rule", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureMap.Rule",
      "isPrimitive": false }, 
    { 
    /*Which other rules to apply in the context of this rule.
     */  "name": "dependent", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureMap.Dependent",
      "isPrimitive": false }, 
    { 
    /*Documentation for this instance of data.
     */  "name": "documentation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureMap.Source": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Source",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type or variable this rule applies to.
     */  "name": "context", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Specified minimum cardinality for the element. This is optional; if present, it acts an implicit check on the input content.
     */  "name": "min", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Specified maximum cardinality for the element - a number or a "*". This is optional; if present, it acts an implicit check on the input content (* just serves as documentation; it's the default value).
     */  "name": "max", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Specified type for the element. This works as a condition on the mapping - use for polymorphic elements.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*A value to use if there is no existing value in the source object.
     */
        {   "name": "defaultValueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "defaultValueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "defaultValueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "defaultValueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "defaultValueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "defaultValueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "defaultValueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "defaultValueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "defaultValueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "defaultValueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "defaultValueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "defaultValueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "defaultValuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "defaultValueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "defaultValueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "defaultValueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "defaultValueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "defaultValueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "defaultValueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "defaultValueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "defaultValueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "defaultValueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "defaultValueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "defaultValueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "defaultValueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "defaultValueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "defaultValueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "defaultValueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "defaultValueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "defaultValueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "defaultValueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "defaultValueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "defaultValuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "defaultValueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "defaultValueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "defaultValueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "defaultValueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "defaultValueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "defaultValueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "defaultValueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "defaultValueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "defaultValueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "defaultValueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "defaultValueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "defaultValueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "defaultValueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "defaultValueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "defaultValueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
    { 
    /*Optional field for this source.
     */  "name": "element", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*How to handle the list mode for this element.
     */  "name": "listMode", 
    
      "min": "0", 
      "max": "1", 
      "type": "StructureMapSourceListMode",
      "isPrimitive": true }, 
    { 
    /*Named context for field, if a field is specified.
     */  "name": "variable", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*FHIRPath expression  - must be true or the rule does not apply.
     */  "name": "condition", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*FHIRPath expression  - must be true or the mapping engine throws an error instead of completing.
     */  "name": "check", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureMap.Target": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Target",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Type or variable this rule applies to.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*How to interpret the context.
     */  "name": "contextType", 
    
      "min": "0", 
      "max": "1", 
      "type": "StructureMapContextType",
      "isPrimitive": true }, 
    { 
    /*Field to create in the context.
     */  "name": "element", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Named context for field, if desired, and a field is specified.
     */  "name": "variable", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*If field is a list, how to manage the list.
     */  "name": "listMode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureMapTargetListMode",
      "isPrimitive": true }, 
    { 
    /*Internal rule reference for shared list items.
     */  "name": "listRuleId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*How the data is copied / created.
     */  "name": "transform", 
    
      "min": "0", 
      "max": "1", 
      "type": "StructureMapTransform",
      "isPrimitive": true }, 
    { 
    /*Parameters to the transform.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "StructureMap.Parameter",
      "isPrimitive": false }, 
  ]
},
"StructureMap.Parameter": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Parameter value - variable or literal.
     */
        {   "name": "valueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
    ], 
  ]
},
"StructureMap.Dependent": {
    /*A Map of relationships between 2 structures that can be used to transform data.
     */
  "name": "StructureMap.Dependent",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Name of a rule or group to apply.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Variable to pass to the rule or group.
     */  "name": "variable", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"StructureMapInputMode": {
    /*Mode for this instance of dataIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapInputMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapInputMode-list" }, 
  ],
  "elems": [
  ]
},
"StructureMapContextType": {
    /*How to interpret the contextIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapContextType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapContextType-list" }, 
  ],
  "elems": [
  ]
},
"StructureMapTargetListMode": {
    /*If field is a list, how to manage the productionIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapTargetListMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapTargetListMode-list" }, 
  ],
  "elems": [
  ]
},
"StructureMapTransform": {
    /*How data is copied/createdIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapTransform",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapTransform-list" }, 
  ],
  "elems": [
  ]
},
"StructureMapSourceListMode": {
    /*If field is a list, how to manage the sourceIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapSourceListMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapSourceListMode-list" }, 
  ],
  "elems": [
  ]
},
"StructureMapGroupTypeMode": {
    /*If this is the default rule set to apply for the source type, or this combination of typesIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapGroupTypeMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapGroupTypeMode-list" }, 
  ],
  "elems": [
  ]
},
"StructureMapModelMode": {
    /*How the referenced structure is used in this mappingIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "StructureMapModelMode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "StructureMapModelMode-list" }, 
  ],
  "elems": [
  ]
},
"Subscription": {
    /*The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined "channel" so that another system can take an appropriate action.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Subscription",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The status of the subscription, which marks the server state for managing the subscription.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "SubscriptionStatus",
      "isPrimitive": true }, 
    { 
    /*Contact details for a human to contact about the subscription. The primary use of this for system administrator troubleshooting.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactPoint",
      "isPrimitive": false }, 
    { 
    /*The time for the server to turn the subscription off.
     */  "name": "end", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*A description of why this subscription is defined.
     */  "name": "reason", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The rules that the server should use to determine when to generate notifications for this subscription.
     */  "name": "criteria", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A record of the last error that occurred when the server processed a notification.
     */  "name": "error", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Details where to send notifications when resources are received that meet the criteria.
     */  "name": "channel", 
    
      "min": "1", 
      "max": "1", 
      "type": "Subscription.Channel",
      "isPrimitive": false }, 
    { 
    /*A tag to add to any resource that matches the criteria, after the subscription is processed.
     */  "name": "tag", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"Subscription.Channel": {
    /*The subscription resource is used to define a push-based subscription from a server to another system. Once a subscription is registered with the server, the server checks every resource that is created or updated, and if the resource matches the given criteria, it sends a message on the defined "channel" so that another system can take an appropriate action.
     */
  "name": "Subscription.Channel",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of channel to send notifications on.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "SubscriptionChannelType",
      "isPrimitive": true }, 
    { 
    /*The url that describes the actual end-point to send messages to.
     */  "name": "endpoint", 
    
      "min": "0", 
      "max": "1", 
      "type": "url",
      "isPrimitive": true }, 
    { 
    /*The mime type to send the payload in - either application/fhir+xml, or application/fhir+json. If the payload is not present, then there is no payload in the notification, just a notification.
     */  "name": "payload", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional headers / information to send as part of the notification.
     */  "name": "header", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SubscriptionStatus": {
    /*The status of a subscription.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SubscriptionStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SubscriptionStatus-list" }, 
  ],
  "elems": [
  ]
},
"SubscriptionChannelType": {
    /*The type of method used to execute a subscription.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SubscriptionChannelType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SubscriptionChannelType-list" }, 
  ],
  "elems": [
  ]
},
"Substance": {
    /*A homogeneous material with a definite composition.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Substance",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier for the substance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A code to indicate if the substance is actively used.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FHIRSubstanceStatus",
      "isPrimitive": true }, 
    { 
    /*A code that classifies the general type of substance.  This is used  for searching, sorting and display purposes.
     */  "name": "category", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A code (or set of codes) that identify this substance.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A description of the substance - its appearance, handling requirements, and other usage notes.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Substance may be used to describe a kind of substance, or a specific package/container of the substance: an instance.
     */  "name": "instance", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Substance.Instance",
      "isPrimitive": false }, 
    { 
    /*A substance can be composed of other substances.
     */  "name": "ingredient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Substance.Ingredient",
      "isPrimitive": false }, 
  ]
},
"Substance.Instance": {
    /*A homogeneous material with a definite composition.
     */
  "name": "Substance.Instance",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier associated with the package/container (usually a label affixed directly).
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*When the substance is no longer valid to use. For some substances, a single arbitrary date is used for expiry.
     */  "name": "expiry", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The amount of the substance.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
  ]
},
"Substance.Ingredient": {
    /*A homogeneous material with a definite composition.
     */
  "name": "Substance.Ingredient",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The amount of the ingredient in the substance - a concentration ratio.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Ratio",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Another substance that is a component of this substance.
     */
        {   "name": "substanceCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "substanceReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"FHIRSubstanceStatus": {
    /*A code to indicate if the substance is actively usedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FHIRSubstanceStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FHIRSubstanceStatus-list" }, 
  ],
  "elems": [
  ]
},
"SubstancePolymer": {
    /*Todo.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SubstancePolymer",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "class", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "geometry", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "copolymerConnectivity", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "modification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "monomerSet", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstancePolymer.MonomerSet",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "repeat", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstancePolymer.Repeat",
      "isPrimitive": false }, 
  ]
},
"SubstancePolymer.MonomerSet": {
    /*Todo.
     */
  "name": "SubstancePolymer.MonomerSet",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "ratioType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "startingMaterial", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstancePolymer.StartingMaterial",
      "isPrimitive": false }, 
  ]
},
"SubstancePolymer.StartingMaterial": {
    /*Todo.
     */
  "name": "SubstancePolymer.StartingMaterial",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "material", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "isDefining", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceAmount",
      "isPrimitive": false }, 
  ]
},
"SubstancePolymer.Repeat": {
    /*Todo.
     */
  "name": "SubstancePolymer.Repeat",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "numberOfUnits", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "averageMolecularFormula", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "repeatUnitAmountType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "repeatUnit", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstancePolymer.RepeatUnit",
      "isPrimitive": false }, 
  ]
},
"SubstancePolymer.RepeatUnit": {
    /*Todo.
     */
  "name": "SubstancePolymer.RepeatUnit",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "orientationOfPolymerisation", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "repeatUnit", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceAmount",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "degreeOfPolymerisation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstancePolymer.DegreeOfPolymerisation",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "structuralRepresentation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstancePolymer.StructuralRepresentation",
      "isPrimitive": false }, 
  ]
},
"SubstancePolymer.DegreeOfPolymerisation": {
    /*Todo.
     */
  "name": "SubstancePolymer.DegreeOfPolymerisation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "degree", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceAmount",
      "isPrimitive": false }, 
  ]
},
"SubstancePolymer.StructuralRepresentation": {
    /*Todo.
     */
  "name": "SubstancePolymer.StructuralRepresentation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "representation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "attachment", 
    
      "min": "0", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
  ]
},
"SubstanceReferenceInformation": {
    /*Todo.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SubstanceReferenceInformation",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "gene", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceReferenceInformation.Gene",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "geneElement", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceReferenceInformation.GeneElement",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "classification", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceReferenceInformation.Classification",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceReferenceInformation.Relationship",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceReferenceInformation.Target",
      "isPrimitive": false }, 
  ]
},
"SubstanceReferenceInformation.Gene": {
    /*Todo.
     */
  "name": "SubstanceReferenceInformation.Gene",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "geneSequenceOrigin", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "gene", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "source", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SubstanceReferenceInformation.GeneElement": {
    /*Todo.
     */
  "name": "SubstanceReferenceInformation.GeneElement",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "element", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "source", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SubstanceReferenceInformation.Classification": {
    /*Todo.
     */
  "name": "SubstanceReferenceInformation.Classification",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "domain", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "classification", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "subtype", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "source", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SubstanceReferenceInformation.Relationship": {
    /*Todo.
     */
  "name": "SubstanceReferenceInformation.Relationship",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    [ /* Choice */ 
    /*Todo.
     */
        {   "name": "substanceReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "substanceCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
    ], 
    { 
    /*Todo.
     */  "name": "relationship", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "interaction", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "isDefining", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Todo.
     */
        {   "name": "amountQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "amountRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "amountString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Todo.
     */  "name": "amountType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "amountText", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Todo.
     */  "name": "source", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SubstanceReferenceInformation.Target": {
    /*Todo.
     */
  "name": "SubstanceReferenceInformation.Target",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Todo.
     */  "name": "target", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "interaction", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "organism", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "organismType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Todo.
     */  "name": "source", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Todo.
     */
        {   "name": "amountQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "amountRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "amountString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
    ], 
    { 
    /*Todo.
     */  "name": "amountType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
  ]
},
"SubstanceSpecification": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SubstanceSpecification",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Textual comment.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Chemicals may be stoichiometric or non-stoichiometric.
     */  "name": "stoichiometric", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Identifier by which this substance is known.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*High level categorization, e.g. polymer or nucleic acid.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Supporting literature.
     */  "name": "referenceSource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Moiety, for structural modifications.
     */  "name": "moiety", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.Moiety",
      "isPrimitive": false }, 
    { 
    /*General specifications for this substance, including how it is related to other substances.
     */  "name": "property", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.Property",
      "isPrimitive": false }, 
    { 
    /*General information detailing this substance.
     */  "name": "referenceInformation", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Structural information.
     */  "name": "structure", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceSpecification.Structure",
      "isPrimitive": false }, 
    { 
    /*Codes associated with the substance.
     */  "name": "substanceCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.SubstanceCode",
      "isPrimitive": false }, 
    { 
    /*Names applicable to this substence.
     */  "name": "substanceName", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.SubstanceName",
      "isPrimitive": false }, 
    { 
    /*The molecular weight or weight range (for proteins, polymers or nucleic acids).
     */  "name": "molecularWeight", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.MolecularWeight",
      "isPrimitive": false }, 
    { 
    /*Data items specific to polymers.
     */  "name": "polymer", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SubstanceSpecification.Moiety": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.Moiety",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Role that the moiety is playing.
     */  "name": "role", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Identifier by which this moiety substance is known.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Textual name for this moiety substance.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Stereochemistry type.
     */  "name": "stereochemistry", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Optical activity type.
     */  "name": "opticalActivity", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Molecular formula.
     */  "name": "molecularFormula", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Quantitative value for this moiety.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SubstanceSpecification.Property": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.Property",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Description todo.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Description todo.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A field that should be used to capture parameters that were used in the measurement of a property.
     */  "name": "parameters", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Identifier for a substance upon which a defining property depends.
     */  "name": "substanceId", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Description todo.
     */  "name": "substanceName", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Quantitative value for this property.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SubstanceSpecification.Structure": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.Structure",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Stereochemistry type.
     */  "name": "stereochemistry", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Optical activity type.
     */  "name": "opticalActivity", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Molecular formula.
     */  "name": "molecularFormula", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Specified per moiety according to the Hill system, i.e. first C, then H, then alphabetical. and each moiety separated by a dot.
     */  "name": "molecularFormulaByMoiety", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Applicable for single substances that contain a radionuclide or a non-natural isotopic ratio.
     */  "name": "isotope", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.Isotope",
      "isPrimitive": false }, 
    { 
    /*The molecular weight or weight range (for proteins, polymers or nucleic acids).
     */  "name": "molecularWeight", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceSpecification.MolecularWeight",
      "isPrimitive": false }, 
    { 
    /*Supporting literature.
     */  "name": "referenceSource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Molectular structural representation.
     */  "name": "structuralRepresentation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.StructuralRepresentation",
      "isPrimitive": false }, 
  ]
},
"SubstanceSpecification.Isotope": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.Isotope",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Substance identifier for each non-natural or radioisotope.
     */  "name": "nuclideId", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Substance name for each non-natural or radioisotope.
     */  "name": "nuclideName", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The type of isotopic substitution present in a single substance.
     */  "name": "substitutionType", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Half life - for a non-natural nuclide.
     */  "name": "nuclideHalfLife", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Quantitative values for this isotope.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The molecular weight or weight range (for proteins, polymers or nucleic acids).
     */  "name": "molecularWeight", 
    
      "min": "0", 
      "max": "1", 
      "type": "SubstanceSpecification.MolecularWeight",
      "isPrimitive": false }, 
  ]
},
"SubstanceSpecification.MolecularWeight": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.MolecularWeight",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The method by which the molecular weight was determined.
     */  "name": "method", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Type of molecular weight such as exact, average (also known as. number average), weight average.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Used to capture quantitative values for a variety of elements. If only limits are given, the arithmetic mean would be the average. If only a single definite value for a given element is given, it would be captured in this field.
     */  "name": "amount", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SubstanceSpecification.StructuralRepresentation": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.StructuralRepresentation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of structure (e.g. Full, Partial, Representative).
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The structural representation as text string in a format e.g. InChI, SMILES, MOLFILE, CDX.
     */  "name": "representation", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*An attached file with the structural representation.
     */  "name": "attachment", 
    
      "min": "0", 
      "max": "1", 
      "type": "Attachment",
      "isPrimitive": false }, 
  ]
},
"SubstanceSpecification.SubstanceCode": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.SubstanceCode",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The specific code.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Status of the code assignment.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The date at which the code status is changed as part of the terminology maintenance.
     */  "name": "statusDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Any comment can be provided in this field, if necessary.
     */  "name": "comment", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Supporting literature.
     */  "name": "referenceSource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SubstanceSpecification.SubstanceName": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.SubstanceName",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The actual name.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Name type.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Language of the name.
     */  "name": "language", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The use context of this name for example if there is a different name a drug active ingredient as opposed to a food colour additive.
     */  "name": "domain", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The jurisdiction where this name applies.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Details of the official nature of this name.
     */  "name": "officialName", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SubstanceSpecification.OfficialName",
      "isPrimitive": false }, 
    { 
    /*Supporting literature.
     */  "name": "referenceSource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"SubstanceSpecification.OfficialName": {
    /*The detailed description of a substance, typically at a level beyond what is used for prescribing.
     */
  "name": "SubstanceSpecification.OfficialName",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Which authority uses this official name.
     */  "name": "authority", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The status of the official name.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Date of official name change.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
  ]
},
"SupplyDelivery": {
    /*Record of delivery of what is supplied.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SupplyDelivery",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for the supply delivery event that is used to identify it across multiple disparate systems.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A plan, proposal or order that is fulfilled in whole or in part by this event.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A larger event of which this particular event is a component or step.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A code specifying the state of the dispense event.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "SupplyDeliveryStatus",
      "isPrimitive": true }, 
    { 
    /*A link to a resource representing the person whom the delivered item is for.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the type of dispensing event that is performed. Examples include: Trial Fill, Completion of Trial, Partial Fill, Emergency Fill, Samples, etc.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The item that is being delivered or has been supplied.
     */  "name": "suppliedItem", 
    
      "min": "0", 
      "max": "1", 
      "type": "SupplyDelivery.SuppliedItem",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The date or time(s) the activity occurred.
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "occurrenceTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*The individual responsible for dispensing the medication, supplier or device.
     */  "name": "supplier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identification of the facility/location where the Supply was shipped to, as part of the dispense event.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the person who picked up the Supply.
     */  "name": "receiver", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SupplyDelivery.SuppliedItem": {
    /*Record of delivery of what is supplied.
     */
  "name": "SupplyDelivery.SuppliedItem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The amount of supply that has been dispensed. Includes unit of measure.
     */  "name": "quantity", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Identifies the medication, substance or device being dispensed. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.
     */
        {   "name": "itemCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "itemReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
  ]
},
"SupplyDeliveryStatus": {
    /*Status of the supply delivery.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SupplyDeliveryStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SupplyDeliveryStatus-list" }, 
  ],
  "elems": [
  ]
},
"SupplyRequest": {
    /*A record of a request for a medication, substance or device used in the healthcare setting.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SupplyRequest",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Unique identifier for this supply request.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Status of the supply request.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "SupplyRequestStatus",
      "isPrimitive": true }, 
    { 
    /*Category of supply, e.g.  central, non-stock, etc. This is used to support work flows associated with the supply process.
     */  "name": "category", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates how quickly this SupplyRequest should be addressed with respect to other requests.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The item that is requested to be supplied. This is either a link to a resource representing the details of the item or a code that identifies the item from a known list.
     */
        {   "name": "itemCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "itemReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*The amount that is being ordered of the indicated item.
     */  "name": "quantity", 
    
      "min": "1", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Specific parameters for the ordered item.  For example, the size of the indicated item.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "SupplyRequest.Parameter",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*When the request should be fulfilled.
     */
        {   "name": "occurrenceDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "occurrencePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "occurrenceTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
    ], 
    { 
    /*When the request was made.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The device, practitioner, etc. who initiated the request.
     */  "name": "requester", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Who is intended to fulfill the request.
     */  "name": "supplier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The reason why the supply item was requested.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The reason why the supply item was requested.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Where the supply is expected to come from.
     */  "name": "deliverFrom", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Where the supply is destined to go.
     */  "name": "deliverTo", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"SupplyRequest.Parameter": {
    /*A record of a request for a medication, substance or device used in the healthcare setting.
     */
  "name": "SupplyRequest.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code or string that identifies the device detail being asserted.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The value of the device detail.
     */
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
    ], 
  ]
},
"SupplyRequestStatus": {
    /*Status of the supply requestIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "SupplyRequestStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "SupplyRequestStatus-list" }, 
  ],
  "elems": [
  ]
},
"Task": {
    /*A task to be performed.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "Task",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The business identifier for this task.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*A reference to a formal or informal definition of the task.  For example, a protocol, a step within a defined workflow definition, etc.
     */
        {   "name": "instantiatesUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "instantiatesReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*BasedOn refers to a higher-level authorization that triggered the creation of the task.  It references a "request" resource such as a ServiceRequest, MedicationRequest, ServiceRequest, CarePlan, etc. which is distinct from the "request" resource the task is seeking to fulfill.  This latter resource is referenced by FocusOn.  For example, based on a ServiceRequest (= BasedOn), a task is created to fulfill a procedureRequest ( = FocusOn ) to collect a specimen from a patient.
     */  "name": "basedOn", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*An identifier that links together multiple tasks and other requests that were created in the same context.
     */  "name": "groupIdentifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Task that this particular task is part of.
     */  "name": "partOf", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The current status of the task.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "TaskStatus",
      "isPrimitive": true }, 
    { 
    /*An explanation as to why this task is held, failed, was refused, etc.
     */  "name": "statusReason", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Contains business-specific nuances of the business state.
     */  "name": "businessStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Indicates the "level" of actionability associated with the Task, i.e. i+R[9]Cs this a proposed task, a planned task, an actionable task, etc.
     */  "name": "intent", 
    
      "min": "1", 
      "max": "1", 
      "type": "RequestIntent",
      "isPrimitive": true }, 
    { 
    /*Indicates how quickly the Task should be addressed with respect to other requests.
     */  "name": "priority", 
    
      "min": "0", 
      "max": "1", 
      "type": "RequestPriority",
      "isPrimitive": true }, 
    { 
    /*A name or code (or both) briefly describing what the task involves.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A free-text description of what is to be performed.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The request being actioned or the resource being manipulated by this task.
     */  "name": "focus", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The entity who benefits from the performance of the service specified in the task (e.g., the patient).
     */  "name": "for", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The healthcare event  (e.g. a patient and healthcare provider interaction) during which this task was created.
     */  "name": "context", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Identifies the time action was first taken against the task (start) and/or the time final action was taken against the task prior to marking it as completed (end).
     */  "name": "executionPeriod", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*The date and time this task was created.
     */  "name": "authoredOn", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The date and time of last modification to this task.
     */  "name": "lastModified", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The creator of the task.
     */  "name": "requester", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The type of participant that can execute the task.
     */  "name": "performerType", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Individual organization or Device currently responsible for task execution.
     */  "name": "owner", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A description or code indicating why this task needs to be performed.
     */  "name": "reasonCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*A resource reference indicating why this task needs to be performed.
     */  "name": "reasonReference", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Free-text information captured about the task as it progresses.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
    { 
    /*Links to Provenance records for past versions of this Task that identify key state transitions or updates that are likely to be relevant to a user looking at the current version of the task.
     */  "name": "relevantHistory", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*If the Task.focus is a request resource and the task is seeking fulfillment (i.e. is asking for the request to be actioned), this element identifies any limitations on what parts of the referenced request should be actioned.
     */  "name": "restriction", 
    
      "min": "0", 
      "max": "1", 
      "type": "Task.Restriction",
      "isPrimitive": false }, 
    { 
    /*Additional information that may be needed in the execution of the task.
     */  "name": "input", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Task.Input",
      "isPrimitive": false }, 
    { 
    /*Outputs produced by the Task.
     */  "name": "output", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Task.Output",
      "isPrimitive": false }, 
  ]
},
"Task.Restriction": {
    /*A task to be performed.
     */
  "name": "Task.Restriction",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates the number of times the requested action should occur.
     */  "name": "repetitions", 
    
      "min": "0", 
      "max": "1", 
      "type": "positiveInt",
      "isPrimitive": true }, 
    { 
    /*Over what time-period is fulfillment sought.
     */  "name": "period", 
    
      "min": "0", 
      "max": "1", 
      "type": "Period",
      "isPrimitive": false }, 
    { 
    /*For requests that are targeted to more than on potential recipient/target, for whom is fulfillment sought?
     */  "name": "recipient", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"Task.Input": {
    /*A task to be performed.
     */
  "name": "Task.Input",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code or description indicating how the input is intended to be used as part of the task execution.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The value of the input parameter as a basic type.
     */
        {   "name": "valueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "valueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "valueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "valuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "valueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "valueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "valueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "valueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "valueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "valueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "valueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "valueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "valueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "valueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "valueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "valueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "valueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "valueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "valueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "valueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "valueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "valueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "valueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
  ]
},
"Task.Output": {
    /*A task to be performed.
     */
  "name": "Task.Output",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of the Output parameter.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*The value of the Output parameter as a basic type.
     */
        {   "name": "valueBase64Binary", 
        
          "min": "1", 
          "max": "1", 
          "type": "base64Binary",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueCanonical", 
        
          "min": "1", 
          "max": "1", 
          "type": "canonical",
          "isPrimitive": true }, 
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
        {   "name": "valueDate", 
        
          "min": "1", 
          "max": "1", 
          "type": "date",
          "isPrimitive": true }, 
        {   "name": "valueDateTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "dateTime",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueId", 
        
          "min": "1", 
          "max": "1", 
          "type": "id",
          "isPrimitive": true }, 
        {   "name": "valueInstant", 
        
          "min": "1", 
          "max": "1", 
          "type": "instant",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueMarkdown", 
        
          "min": "1", 
          "max": "1", 
          "type": "markdown",
          "isPrimitive": true }, 
        {   "name": "valueOid", 
        
          "min": "1", 
          "max": "1", 
          "type": "oid",
          "isPrimitive": true }, 
        {   "name": "valuePositiveInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "positiveInt",
          "isPrimitive": true }, 
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueTime", 
        
          "min": "1", 
          "max": "1", 
          "type": "time",
          "isPrimitive": true }, 
        {   "name": "valueUnsignedInt", 
        
          "min": "1", 
          "max": "1", 
          "type": "unsignedInt",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueUrl", 
        
          "min": "1", 
          "max": "1", 
          "type": "url",
          "isPrimitive": true }, 
        {   "name": "valueUuid", 
        
          "min": "1", 
          "max": "1", 
          "type": "uuid",
          "isPrimitive": true }, 
        {   "name": "valueAddress", 
        
          "min": "1", 
          "max": "1", 
          "type": "Address",
          "isPrimitive": false }, 
        {   "name": "valueAge", 
        
          "min": "1", 
          "max": "1", 
          "type": "Age",
          "isPrimitive": false }, 
        {   "name": "valueAnnotation", 
        
          "min": "1", 
          "max": "1", 
          "type": "Annotation",
          "isPrimitive": false }, 
        {   "name": "valueAttachment", 
        
          "min": "1", 
          "max": "1", 
          "type": "Attachment",
          "isPrimitive": false }, 
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueCoding", 
        
          "min": "1", 
          "max": "1", 
          "type": "Coding",
          "isPrimitive": false }, 
        {   "name": "valueContactPoint", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactPoint",
          "isPrimitive": false }, 
        {   "name": "valueCount", 
        
          "min": "1", 
          "max": "1", 
          "type": "Count",
          "isPrimitive": false }, 
        {   "name": "valueDistance", 
        
          "min": "1", 
          "max": "1", 
          "type": "Distance",
          "isPrimitive": false }, 
        {   "name": "valueDuration", 
        
          "min": "1", 
          "max": "1", 
          "type": "Duration",
          "isPrimitive": false }, 
        {   "name": "valueHumanName", 
        
          "min": "1", 
          "max": "1", 
          "type": "HumanName",
          "isPrimitive": false }, 
        {   "name": "valueIdentifier", 
        
          "min": "1", 
          "max": "1", 
          "type": "Identifier",
          "isPrimitive": false }, 
        {   "name": "valueMoney", 
        
          "min": "1", 
          "max": "1", 
          "type": "Money",
          "isPrimitive": false }, 
        {   "name": "valuePeriod", 
        
          "min": "1", 
          "max": "1", 
          "type": "Period",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
        {   "name": "valueRange", 
        
          "min": "1", 
          "max": "1", 
          "type": "Range",
          "isPrimitive": false }, 
        {   "name": "valueRatio", 
        
          "min": "1", 
          "max": "1", 
          "type": "Ratio",
          "isPrimitive": false }, 
        {   "name": "valueReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
        {   "name": "valueSampledData", 
        
          "min": "1", 
          "max": "1", 
          "type": "SampledData",
          "isPrimitive": false }, 
        {   "name": "valueSignature", 
        
          "min": "1", 
          "max": "1", 
          "type": "Signature",
          "isPrimitive": false }, 
        {   "name": "valueTiming", 
        
          "min": "1", 
          "max": "1", 
          "type": "Timing",
          "isPrimitive": false }, 
        {   "name": "valueParameterDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "ParameterDefinition",
          "isPrimitive": false }, 
        {   "name": "valueDataRequirement", 
        
          "min": "1", 
          "max": "1", 
          "type": "DataRequirement",
          "isPrimitive": false }, 
        {   "name": "valueRelatedArtifact", 
        
          "min": "1", 
          "max": "1", 
          "type": "RelatedArtifact",
          "isPrimitive": false }, 
        {   "name": "valueContactDetail", 
        
          "min": "1", 
          "max": "1", 
          "type": "ContactDetail",
          "isPrimitive": false }, 
        {   "name": "valueContributor", 
        
          "min": "1", 
          "max": "1", 
          "type": "Contributor",
          "isPrimitive": false }, 
        {   "name": "valueTriggerDefinition", 
        
          "min": "1", 
          "max": "1", 
          "type": "TriggerDefinition",
          "isPrimitive": false }, 
        {   "name": "valueUsageContext", 
        
          "min": "1", 
          "max": "1", 
          "type": "UsageContext",
          "isPrimitive": false }, 
        {   "name": "valueDosage", 
        
          "min": "1", 
          "max": "1", 
          "type": "Dosage",
          "isPrimitive": false }, 
    ], 
  ]
},
"TaskStatus": {
    /*The current status of the task.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TaskStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TaskStatus-list" }, 
  ],
  "elems": [
  ]
},
"TerminologyCapabilities": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TerminologyCapabilities",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this terminology capabilities when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this terminology capabilities is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The identifier that is used to identify this version of the terminology capabilities when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the terminology capabilities author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the terminology capabilities. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the terminology capabilities.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this terminology capabilities. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this terminology capabilities is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the terminology capabilities was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the terminology capabilities changes.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the terminology capabilities.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the terminology capabilities from a consumer's perspective. Typically, this is used when the capability statement describes a desired rather than an actual solution, for example as a formal expression of requirements as part of an RFP.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate terminology capabilities instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the terminology capabilities is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this terminology capabilities is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the terminology capabilities and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the terminology capabilities.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Whether the server supports lockedDate.
     */  "name": "lockedDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Identifies a code system that is supported by the server. If there is a no code system URL, then this declares the general assumptions a client can make about support for any CodeSystem resource.
     */  "name": "codeSystem", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TerminologyCapabilities.CodeSystem",
      "isPrimitive": false }, 
    { 
    /*Information about the $expansion operation.
     */  "name": "expansion", 
    
      "min": "0", 
      "max": "1", 
      "type": "TerminologyCapabilities.Expansion",
      "isPrimitive": false }, 
    { 
    /*The degree to which the server supports the code search parameter on ValueSet, if it is supported.
     */  "name": "codeSearch", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeSearchSupport",
      "isPrimitive": true }, 
    { 
    /*Information about the $validation operation.
     */  "name": "validateCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "TerminologyCapabilities.ValidateCode",
      "isPrimitive": false }, 
    { 
    /*Information about the $translation operation.
     */  "name": "translation", 
    
      "min": "0", 
      "max": "1", 
      "type": "TerminologyCapabilities.Translation",
      "isPrimitive": false }, 
    { 
    /*Whether the $closure operation is supported.
     */  "name": "closure", 
    
      "min": "0", 
      "max": "1", 
      "type": "TerminologyCapabilities.Closure",
      "isPrimitive": false }, 
  ]
},
"TerminologyCapabilities.CodeSystem": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.CodeSystem",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*URI for the Code System.
     */  "name": "uri", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*For the code system, a list of versions that are supported by the server.
     */  "name": "version", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TerminologyCapabilities.Version",
      "isPrimitive": false }, 
  ]
},
"TerminologyCapabilities.Version": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.Version",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*For version-less code systems, there should be a single version with no identifier.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*If this is the default version for this code system.
     */  "name": "isDefault", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*If the compositional grammar defined by the code system is supported.
     */  "name": "compositional", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Language Displays supported.
     */  "name": "language", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Filter Properties supported.
     */  "name": "filter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TerminologyCapabilities.Filter",
      "isPrimitive": false }, 
    { 
    /*Properties supported for $lookup.
     */  "name": "property", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
  ]
},
"TerminologyCapabilities.Filter": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.Filter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Code of the property supported.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*Operations supported for the property.
     */  "name": "op", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "code",
      "isPrimitive": true }, 
  ]
},
"TerminologyCapabilities.Expansion": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.Expansion",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether the server can return nested value sets.
     */  "name": "hierarchical", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether the server supports paging on expansion.
     */  "name": "paging", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Allow request for incomplete expansions?
     */  "name": "incomplete", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Supported fields on ExpansionProfile.
     */  "name": "definition", 
    
      "min": "0", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Supported expansion profiles.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
    { 
    /*Documentation about text searching works.
     */  "name": "textFilter", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
  ]
},
"TerminologyCapabilities.ValidateCode": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.ValidateCode",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether translations are validated.
     */  "name": "translations", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"TerminologyCapabilities.Translation": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.Translation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether the client must identify the map.
     */  "name": "needsMap", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"TerminologyCapabilities.Closure": {
    /*A Terminology Capabilities documents a set of capabilities (behaviors) of a FHIR Server that may be used as a statement of actual server functionality or a statement of required or desired server implementation.
     */
  "name": "TerminologyCapabilities.Closure",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*If cross-system closure is supported.
     */  "name": "translation", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"CodeSearchSupport": {
    /*The degree to which the server supports the code search parameter on ValueSet, if it is supportedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "CodeSearchSupport",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "CodeSearchSupport-list" }, 
  ],
  "elems": [
  ]
},
"TestReport": {
    /*A summary of information based on the results of executing a TestScript.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestReport",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifier for the TestScript assigned for external purposes outside the context of FHIR.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A free text natural language name identifying the executed TestScript.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The current state of this test report.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestReportStatus",
      "isPrimitive": true }, 
    { 
    /*Ideally this is an absolute URL that is used to identify the version-specific TestScript that was executed, matching the `TestScript.url`.
     */  "name": "testScript", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The overall result from the execution of the TestScript.
     */  "name": "result", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestReportResult",
      "isPrimitive": true }, 
    { 
    /*The final score (percentage of tests passed) resulting from the execution of the TestScript.
     */  "name": "score", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Name of the tester producing this report (Organization or individual).
     */  "name": "tester", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*When the TestScript was executed and this TestReport was generated.
     */  "name": "issued", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*A participant in the test execution, either the execution engine, a client, or a server.
     */  "name": "participant", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestReport.Participant",
      "isPrimitive": false }, 
    { 
    /*The results of the series of required setup operations before the tests were executed.
     */  "name": "setup", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestReport.Setup",
      "isPrimitive": false }, 
    { 
    /*A test executed from the test script.
     */  "name": "test", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestReport.Test",
      "isPrimitive": false }, 
    { 
    /*The results of the series of operations required to clean up after all the tests were executed (successfully or otherwise).
     */  "name": "teardown", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestReport.Teardown",
      "isPrimitive": false }, 
  ]
},
"TestReport.Participant": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Participant",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The type of participant.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestReportParticipantType",
      "isPrimitive": true }, 
    { 
    /*The uri of the participant. An absolute URL is preferred.
     */  "name": "uri", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The display name of the participant.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestReport.Setup": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Setup",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Action would contain either an operation or an assertion.
     */  "name": "action", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestReport.Action",
      "isPrimitive": false }, 
  ]
},
"TestReport.Action": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Action",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The operation performed.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestReport.Operation",
      "isPrimitive": false }, 
    { 
    /*The results of the assertion performed on the previous operations.
     */  "name": "assert", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestReport.Assert",
      "isPrimitive": false }, 
  ]
},
"TestReport.Operation": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Operation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The result of this operation.
     */  "name": "result", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestReportActionResult",
      "isPrimitive": true }, 
    { 
    /*An explanatory message associated with the result.
     */  "name": "message", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A link to further details on the result.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
  ]
},
"TestReport.Assert": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Assert",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The result of this assertion.
     */  "name": "result", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestReportActionResult",
      "isPrimitive": true }, 
    { 
    /*An explanatory message associated with the result.
     */  "name": "message", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A link to further details on the result.
     */  "name": "detail", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestReport.Test": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Test",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of this test used for tracking/logging purposes by test engines.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short description of the test used by test engines for tracking and reporting purposes.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Action would contain either an operation or an assertion.
     */  "name": "action", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestReport.Action1",
      "isPrimitive": false }, 
  ]
},
"TestReport.Action1": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Action1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An operation would involve a REST request to a server.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestReport.Operation",
      "isPrimitive": false }, 
    { 
    /*The results of the assertion performed on the previous operations.
     */  "name": "assert", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestReport.Assert",
      "isPrimitive": false }, 
  ]
},
"TestReport.Teardown": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Teardown",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The teardown action will only contain an operation.
     */  "name": "action", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestReport.Action2",
      "isPrimitive": false }, 
  ]
},
"TestReport.Action2": {
    /*A summary of information based on the results of executing a TestScript.
     */
  "name": "TestReport.Action2",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An operation would involve a REST request to a server.
     */  "name": "operation", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestReport.Operation",
      "isPrimitive": false }, 
  ]
},
"TestReportStatus": {
    /*The current status of the test report.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestReportStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TestReportStatus-list" }, 
  ],
  "elems": [
  ]
},
"TestReportActionResult": {
    /*The results of executing an action.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestReportActionResult",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TestReportActionResult-list" }, 
  ],
  "elems": [
  ]
},
"TestReportParticipantType": {
    /*The type of participant.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestReportParticipantType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TestReportParticipantType-list" }, 
  ],
  "elems": [
  ]
},
"TestReportResult": {
    /*The reported execution result.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestReportResult",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TestReportResult-list" }, 
  ],
  "elems": [
  ]
},
"TestScript": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestScript",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this test script when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this test script is (or will be) published.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this test script when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the test script when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the test script author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the test script. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the test script.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this test script. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this test script is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the test script was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the test script changes.
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the test script.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the test script from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate test script instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the test script is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Explanation of why this test script is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the test script and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the test script.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*An abstract server used in operations within this test script in the origin element.
     */  "name": "origin", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Origin",
      "isPrimitive": false }, 
    { 
    /*An abstract server used in operations within this test script in the destination element.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Destination",
      "isPrimitive": false }, 
    { 
    /*The required capability must exist and are assumed to function correctly on the FHIR server being tested.
     */  "name": "metadata", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Metadata",
      "isPrimitive": false }, 
    { 
    /*Fixture in the test script - by reference (uri). All fixtures are required for the test script to execute.
     */  "name": "fixture", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Fixture",
      "isPrimitive": false }, 
    { 
    /*Reference to the profile to be used for validation.
     */  "name": "profile", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Variable is set based either on element value in response body or on header field value in the response headers.
     */  "name": "variable", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Variable",
      "isPrimitive": false }, 
    { 
    /*Assert rule to be used in one or more asserts within the test script.
     */  "name": "rule", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Rule",
      "isPrimitive": false }, 
    { 
    /*Contains one or more rules.  Offers a way to group rules so assertions could reference the group of rules and have them all applied.
     */  "name": "ruleset", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Ruleset",
      "isPrimitive": false }, 
    { 
    /*A series of required setup operations before tests are executed.
     */  "name": "setup", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Setup",
      "isPrimitive": false }, 
    { 
    /*A test in this script.
     */  "name": "test", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Test",
      "isPrimitive": false }, 
    { 
    /*A series of operations required to clean up after all the tests are executed (successfully or otherwise).
     */  "name": "teardown", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Teardown",
      "isPrimitive": false }, 
  ]
},
"TestScript.Origin": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Origin",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Abstract name given to an origin server in this test script.  The name is provided as a number starting at 1.
     */  "name": "index", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The type of origin profile the test system supports.
     */  "name": "profile", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"TestScript.Destination": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Destination",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Abstract name given to a destination server in this test script.  The name is provided as a number starting at 1.
     */  "name": "index", 
    
      "min": "1", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*The type of destination profile the test system supports.
     */  "name": "profile", 
    
      "min": "1", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
  ]
},
"TestScript.Metadata": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Metadata",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A link to the FHIR specification that this test is covering.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Link",
      "isPrimitive": false }, 
    { 
    /*Capabilities that must exist and are assumed to function correctly on the FHIR server being tested.
     */  "name": "capability", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestScript.Capability",
      "isPrimitive": false }, 
  ]
},
"TestScript.Link": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Link",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*URL to a particular requirement or feature within the FHIR specification.
     */  "name": "url", 
    
      "min": "1", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Short description of the link.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.Capability": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Capability",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether or not the test execution will require the given capabilities of the server in order for this test script to execute.
     */  "name": "required", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether or not the test execution will validate the given capabilities of the server in order for this test script to execute.
     */  "name": "validated", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Description of the capabilities that this test script is requiring the server to support.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Which origin server these requirements apply to.
     */  "name": "origin", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Which server these requirements apply to.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Links to the FHIR specification that describes this interaction and the resources involved in more detail.
     */  "name": "link", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*Minimum capabilities required of server for test script to execute successfully.   If server does not meet at a minimum the referenced capability statement, then all tests in this script are skipped.
     */  "name": "capabilities", 
    
      "min": "1", 
      "max": "1", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"TestScript.Fixture": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Fixture",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Whether or not to implicitly create the fixture during setup. If true, the fixture is automatically created on each server being tested during setup, therefore no create operation is required for this fixture in the TestScript.setup section.
     */  "name": "autocreate", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Whether or not to implicitly delete the fixture during teardown. If true, the fixture is automatically deleted on each server being tested during teardown, therefore no delete operation is required for this fixture in the TestScript.teardown section.
     */  "name": "autodelete", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Reference to the resource (containing the contents of the resource needed for operations).
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
  ]
},
"TestScript.Variable": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Variable",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Descriptive name for this variable.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A default, hard-coded, or user-defined value for this variable.
     */  "name": "defaultValue", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A free text natural language description of the variable and its purpose.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The FHIRPath expression to evaluate against the fixture body. When variables are defined, only one of either expression, headerField or path must be specified.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Will be used to grab the HTTP header field value from the headers that sourceId is pointing to.
     */  "name": "headerField", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Displayable text string with hint help information to the user when entering a default value.
     */  "name": "hint", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*XPath or JSONPath to evaluate against the fixture body.  When variables are defined, only one of either expression, headerField or path must be specified.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Fixture to evaluate the XPath/JSONPath expression or the headerField  against within this variable.
     */  "name": "sourceId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
  ]
},
"TestScript.Rule": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Rule",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Reference to the resource (containing the contents of the rule needed for assertions).
     */  "name": "resource", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Each rule template can take one or more parameters for rule evaluation.
     */  "name": "param", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Param",
      "isPrimitive": false }, 
  ]
},
"TestScript.Param": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Param",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Descriptive name for this parameter that matches the external assert rule parameter name.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The explicit or dynamic value for the parameter that will be passed on to the external rule template.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.Ruleset": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Ruleset",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Reference to the resource (containing the contents of the ruleset needed for assertions).
     */  "name": "resource", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The referenced rule within the external ruleset template.
     */  "name": "rule", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestScript.Rule1",
      "isPrimitive": false }, 
  ]
},
"TestScript.Rule1": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Rule1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Id of the referenced rule within the external ruleset template.
     */  "name": "ruleId", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Each rule template can take one or more parameters for rule evaluation.
     */  "name": "param", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Param1",
      "isPrimitive": false }, 
  ]
},
"TestScript.Param1": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Param1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Descriptive name for this parameter that matches the external assert ruleset rule parameter name.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The value for the parameter that will be passed on to the external ruleset rule template.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.Setup": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Setup",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Action would contain either an operation or an assertion.
     */  "name": "action", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestScript.Action",
      "isPrimitive": false }, 
  ]
},
"TestScript.Action": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Action",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The operation to perform.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Operation",
      "isPrimitive": false }, 
    { 
    /*Evaluates the results of previous operations to determine if the server under test behaves appropriately.
     */  "name": "assert", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Assert",
      "isPrimitive": false }, 
  ]
},
"TestScript.Operation": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Operation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Server interaction or operation type.
     */  "name": "type", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The type of the resource.  See http://build.fhir.org/resourcelist.html.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "FHIRDefinedType",
      "isPrimitive": true }, 
    { 
    /*The label would be used for tracking/logging purposes by test engines.
     */  "name": "label", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The description would be used by test engines for tracking and reporting purposes.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The mime-type to use for RESTful operation in the 'Accept' header.
     */  "name": "accept", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The mime-type to use for RESTful operation in the 'Content-Type' header.
     */  "name": "contentType", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The server where the request message is destined for.  Must be one of the server numbers listed in TestScript.destination section.
     */  "name": "destination", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Whether or not to implicitly send the request url in encoded format. The default is true to match the standard RESTful client behavior. Set to false when communicating with a server that does not support encoded url paths.
     */  "name": "encodeRequestUrl", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The server where the request message originates from.  Must be one of the server numbers listed in TestScript.origin section.
     */  "name": "origin", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Path plus parameters after [type].  Used to set parts of the request URL explicitly.
     */  "name": "params", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Header elements would be used to set HTTP headers.
     */  "name": "requestHeader", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.RequestHeader",
      "isPrimitive": false }, 
    { 
    /*The fixture id (maybe new) to map to the request.
     */  "name": "requestId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The fixture id (maybe new) to map to the response.
     */  "name": "responseId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The id of the fixture used as the body of a PUT or POST request.
     */  "name": "sourceId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Id of fixture used for extracting the [id],  [type], and [vid] for GET requests.
     */  "name": "targetId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Complete request URL.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.RequestHeader": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.RequestHeader",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The HTTP header field e.g. "Accept".
     */  "name": "field", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The value of the header e.g. "application/fhir+xml".
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.Assert": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Assert",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The label would be used for tracking/logging purposes by test engines.
     */  "name": "label", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The description would be used by test engines for tracking and reporting purposes.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The direction to use for the assertion.
     */  "name": "direction", 
    
      "min": "0", 
      "max": "1", 
      "type": "AssertionDirectionType",
      "isPrimitive": true }, 
    { 
    /*Id of the source fixture used as the contents to be evaluated by either the "source/expression" or "sourceId/path" definition.
     */  "name": "compareToSourceId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The FHIRPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.
     */  "name": "compareToSourceExpression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*XPath or JSONPath expression to evaluate against the source fixture. When compareToSourceId is defined, either compareToSourceExpression or compareToSourcePath must be defined, but not both.
     */  "name": "compareToSourcePath", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The mime-type contents to compare against the request or response message 'Content-Type' header.
     */  "name": "contentType", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The FHIRPath expression to be evaluated against the request or response message contents - HTTP headers and payload.
     */  "name": "expression", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The HTTP header field name e.g. 'Location'.
     */  "name": "headerField", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The ID of a fixture.  Asserts that the response contains at a minimum the fixture specified by minimumId.
     */  "name": "minimumId", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Whether or not the test execution performs validation on the bundle navigation links.
     */  "name": "navigationLinks", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The operator type defines the conditional behavior of the assert. If not defined, the default is equals.
     */  "name": "operator", 
    
      "min": "0", 
      "max": "1", 
      "type": "AssertionOperatorType",
      "isPrimitive": true }, 
    { 
    /*The XPath or JSONPath expression to be evaluated against the fixture representing the response received from server.
     */  "name": "path", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The request method or HTTP operation code to compare against that used by the client system under test.
     */  "name": "requestMethod", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScriptRequestMethodCode",
      "isPrimitive": true }, 
    { 
    /*The value to use in a comparison against the request URL path string.
     */  "name": "requestURL", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The type of the resource.  See http://build.fhir.org/resourcelist.html.
     */  "name": "resource", 
    
      "min": "0", 
      "max": "1", 
      "type": "FHIRDefinedType",
      "isPrimitive": true }, 
    { 
    /*okay | created | noContent | notModified | bad | forbidden | notFound | methodNotAllowed | conflict | gone | preconditionFailed | unprocessable.
     */  "name": "response", 
    
      "min": "0", 
      "max": "1", 
      "type": "AssertionResponseTypes",
      "isPrimitive": true }, 
    { 
    /*The value of the HTTP response code to be tested.
     */  "name": "responseCode", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The TestScript.rule this assert will evaluate.
     */  "name": "rule", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Rule2",
      "isPrimitive": false }, 
    { 
    /*The TestScript.ruleset this assert will evaluate.
     */  "name": "ruleset", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Ruleset1",
      "isPrimitive": false }, 
    { 
    /*Fixture to evaluate the XPath/JSONPath expression or the headerField  against.
     */  "name": "sourceId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The ID of the Profile to validate against.
     */  "name": "validateProfileId", 
    
      "min": "0", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The value to compare to.
     */  "name": "value", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Whether or not the test execution will produce a warning only on error for this assert.
     */  "name": "warningOnly", 
    
      "min": "1", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
  ]
},
"TestScript.Rule2": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Rule2",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The TestScript.rule id value this assert will evaluate.
     */  "name": "ruleId", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Each rule template can take one or more parameters for rule evaluation.
     */  "name": "param", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Param2",
      "isPrimitive": false }, 
  ]
},
"TestScript.Param2": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Param2",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Descriptive name for this parameter that matches the external assert rule parameter name.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The value for the parameter that will be passed on to the external rule template.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.Ruleset1": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Ruleset1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The TestScript.ruleset id value this assert will evaluate.
     */  "name": "rulesetId", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*The referenced rule within the external ruleset template.
     */  "name": "rule", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Rule3",
      "isPrimitive": false }, 
  ]
},
"TestScript.Rule3": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Rule3",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Id of the referenced rule within the external ruleset template.
     */  "name": "ruleId", 
    
      "min": "1", 
      "max": "1", 
      "type": "id",
      "isPrimitive": true }, 
    { 
    /*Each rule template can take one or more parameters for rule evaluation.
     */  "name": "param", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "TestScript.Param3",
      "isPrimitive": false }, 
  ]
},
"TestScript.Param3": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Param3",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Descriptive name for this parameter that matches the external assert ruleset rule parameter name.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The value for the parameter that will be passed on to the external ruleset rule template.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"TestScript.Test": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Test",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of this test used for tracking/logging purposes by test engines.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short description of the test used by test engines for tracking and reporting purposes.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Action would contain either an operation or an assertion.
     */  "name": "action", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestScript.Action1",
      "isPrimitive": false }, 
  ]
},
"TestScript.Action1": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Action1",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An operation would involve a REST request to a server.
     */  "name": "operation", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Operation",
      "isPrimitive": false }, 
    { 
    /*Evaluates the results of previous operations to determine if the server under test behaves appropriately.
     */  "name": "assert", 
    
      "min": "0", 
      "max": "1", 
      "type": "TestScript.Assert",
      "isPrimitive": false }, 
  ]
},
"TestScript.Teardown": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Teardown",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The teardown action will only contain an operation.
     */  "name": "action", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "TestScript.Action2",
      "isPrimitive": false }, 
  ]
},
"TestScript.Action2": {
    /*A structured set of tests against a FHIR server or client implementation to determine compliance against the FHIR specification.
     */
  "name": "TestScript.Action2",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An operation would involve a REST request to a server.
     */  "name": "operation", 
    
      "min": "1", 
      "max": "1", 
      "type": "TestScript.Operation",
      "isPrimitive": false }, 
  ]
},
"FHIRDefinedType": {
    /*If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "FHIRDefinedType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "FHIRDefinedType-list" }, 
  ],
  "elems": [
  ]
},
"AssertionDirectionType": {
    /*The type of direction to use for assertion.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AssertionDirectionType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AssertionDirectionType-list" }, 
  ],
  "elems": [
  ]
},
"AssertionOperatorType": {
    /*The type of operator to use for assertion.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AssertionOperatorType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AssertionOperatorType-list" }, 
  ],
  "elems": [
  ]
},
"AssertionResponseTypes": {
    /*The type of response code to use for assertion.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "AssertionResponseTypes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "AssertionResponseTypes-list" }, 
  ],
  "elems": [
  ]
},
"TestScriptRequestMethodCode": {
    /*The allowable request method or HTTP operation codes.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "TestScriptRequestMethodCode",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "TestScriptRequestMethodCode-list" }, 
  ],
  "elems": [
  ]
},
"UserSession": {
    /*Information about a user's current session.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "UserSession",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Allows a service to provide a unique, business identifier for the session.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*A practitioner, patient, device, or related person engaged in the session.
     */  "name": "user", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Status of the session.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "UserSession.Status",
      "isPrimitive": false }, 
    { 
    /*Location that identifies the physical place at which the user's session is occurring. For the purposes of context synchronization, this is intended to represent the user's workstation.
     */  "name": "workstation", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The current focus of the user's session. Common values are a reference to a Patient, Encounter, ImagingStudy, etc.
     */  "name": "focus", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Indicates the timestamp when the user session was first created.
     */  "name": "created", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Indicates the timestamp when the user session will expire (i.e. no longer be valid).
     */  "name": "expires", 
    
      "min": "0", 
      "max": "1", 
      "type": "instant",
      "isPrimitive": true }, 
    { 
    /*Provides additional information associated with the context.
     */  "name": "context", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UserSession.Context",
      "isPrimitive": false }, 
  ]
},
"UserSession.Status": {
    /*Information about a user's current session.
     */
  "name": "UserSession.Status",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The current status of the user session.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "UserSessionStatus",
      "isPrimitive": true }, 
    { 
    /*The source of the status code.
     */  "name": "source", 
    
      "min": "1", 
      "max": "1", 
      "type": "UserSessionStatusSource",
      "isPrimitive": true }, 
  ]
},
"UserSession.Context": {
    /*Information about a user's current session.
     */
  "name": "UserSession.Context",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Indicates which type of context is being provided.
     */  "name": "type", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*Provides the context value.
     */
        {   "name": "valueCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "valueQuantity", 
        
          "min": "1", 
          "max": "1", 
          "type": "Quantity",
          "isPrimitive": false }, 
    ], 
  ]
},
"UserSessionStatus": {
    /*The status of the user sessionIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "UserSessionStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "UserSessionStatus-list" }, 
  ],
  "elems": [
  ]
},
"UserSessionStatusSource": {
    /*The source of the status of the user sessionIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "UserSessionStatusSource",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "UserSessionStatusSource-list" }, 
  ],
  "elems": [
  ]
},
"ValueSet": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "ValueSet",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI that is used to identify this value set when it is referenced in a specification, model, design or an instance; also called its canonical identifier. This SHOULD be globally unique and SHOULD be a literal address at which this value set is (or will be) published.
     */  "name": "url", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*A formal identifier that is used to identify this value set when it is represented in other formats, or referenced in a specification, model, design or an instance.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The identifier that is used to identify this version of the value set when it is referenced in a specification, model, design or instance. This is an arbitrary value managed by the value set author and is not expected to be globally unique. For example, it might be a timestamp (e.g. yyyymmdd) if a managed version is not available. There is also no expectation that versions can be placed in a lexicographical sequence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A natural language name identifying the value set. This name should be usable as an identifier for the module by machine processing applications such as code generation.
     */  "name": "name", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A short, descriptive, user-friendly title for the value set.
     */  "name": "title", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The status of this value set. Enables tracking the life-cycle of the content.
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "PublicationStatus",
      "isPrimitive": true }, 
    { 
    /*A Boolean value to indicate that this value set is authored for testing purposes (or education/evaluation/marketing) and is not intended to be used for genuine usage.
     */  "name": "experimental", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The date  (and optionally time) when the value set was published. The date must change when the business version changes and it must change if the status code changes. In addition, it should change when the substantive content of the value set changes. (e.g. the 'content logical definition').
     */  "name": "date", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The name of the organization or individual that published the value set.
     */  "name": "publisher", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Contact details to assist a user in finding and communicating with the publisher.
     */  "name": "contact", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ContactDetail",
      "isPrimitive": false }, 
    { 
    /*A free text natural language description of the value set from a consumer's perspective.
     */  "name": "description", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*The content was developed with a focus and intent of supporting the contexts that are listed. These terms may be used to assist with indexing and searching for appropriate value set instances.
     */  "name": "useContext", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "UsageContext",
      "isPrimitive": false }, 
    { 
    /*A legal or geographic region in which the value set is intended to be used.
     */  "name": "jurisdiction", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*If this is set to 'true', then no new versions of the content logical definition can be created.  Note: Other metadata might still change.
     */  "name": "immutable", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Explanation of why this value set is needed and why it has been designed as it has.
     */  "name": "purpose", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*A copyright statement relating to the value set and/or its contents. Copyright statements are generally legal restrictions on the use and publishing of the value set.
     */  "name": "copyright", 
    
      "min": "0", 
      "max": "1", 
      "type": "markdown",
      "isPrimitive": true }, 
    { 
    /*Whether this is intended to be used with an extensible binding or not.
     */  "name": "extensible", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*A set of criteria that define the contents of the value set by including or excluding codes selected from the specified code system(s) that the value set draws from. This is also known as the Content Logical Definition (CLD).
     */  "name": "compose", 
    
      "min": "0", 
      "max": "1", 
      "type": "ValueSet.Compose",
      "isPrimitive": false }, 
    { 
    /*A value set can also be "expanded", where the value set is turned into a simple collection of enumerated codes. This element holds the expansion, if it has been performed.
     */  "name": "expansion", 
    
      "min": "0", 
      "max": "1", 
      "type": "ValueSet.Expansion",
      "isPrimitive": false }, 
  ]
},
"ValueSet.Compose": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Compose",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*If a locked date is defined, then the Content Logical Definition must be evaluated using the current version as of the locked date for referenced code system(s) and value set instances where ValueSet.compose.include.version is not defined.
     */  "name": "lockedDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*Whether inactive codes - codes that are not approved for current use - are in the value set. If inactive = true, inactive codes are to be included in the expansion, if inactive = false, the inactive codes will not be included in the expansion. If absent, the behavior is determined by the implementation, or by the applicable ExpansionProfile (but generally, inactive codes would be expected to be included).
     */  "name": "inactive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*Include one or more codes from a code system or other value set(s).
     */  "name": "include", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "ValueSet.Include",
      "isPrimitive": false }, 
    { 
    /*Exclude one or more codes from the value set based on code system filters and/or other value sets.
     */  "name": "exclude", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Include",
      "isPrimitive": false }, 
  ]
},
"ValueSet.Include": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Include",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI which is the code system from which the selected codes come from.
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The version of the code system that the codes are selected from.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Specifies a concept to be included or excluded.
     */  "name": "concept", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Concept",
      "isPrimitive": false }, 
    { 
    /*Select concepts by specify a matching criteria based on the properties (including relationships) defined by the system. If multiple filters are specified, they SHALL all be true.
     */  "name": "filter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Filter",
      "isPrimitive": false }, 
    { 
    /*Selects the concepts found in this value set (based on its value set definition). This is an absolute URI that is a reference to ValueSet.url.  If multiple value sets are specified this includes the union of the contents of all of the referenced value sets.
     */  "name": "valueSet", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "canonical",
      "isPrimitive": true }, 
  ]
},
"ValueSet.Concept": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Concept",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Specifies a code for the concept to be included or excluded.
     */  "name": "code", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The text to display to the user for this concept in the context of this valueset. If no display is provided, then applications using the value set use the display specified for the code by the system.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional representations for this concept when used in this value set - other languages, aliases, specialized purposes, used for particular purposes, etc.
     */  "name": "designation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Designation",
      "isPrimitive": false }, 
  ]
},
"ValueSet.Designation": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Designation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The language this designation is defined for.
     */  "name": "language", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*A code that details how this designation would be used.
     */  "name": "use", 
    
      "min": "0", 
      "max": "1", 
      "type": "Coding",
      "isPrimitive": false }, 
    { 
    /*The text value for this designation.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ValueSet.Filter": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Filter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A code that identifies a property defined in the code system.
     */  "name": "property", 
    
      "min": "1", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The kind of operation to perform as a part of the filter criteria.
     */  "name": "op", 
    
      "min": "1", 
      "max": "1", 
      "type": "FilterOperator",
      "isPrimitive": true }, 
    { 
    /*The match value may be either a code defined by the system, or a string value, which is a regex match on the literal string of the property value when the operation is 'regex', or one of the values (true and false), when the operation is 'exists'.
     */  "name": "value", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"ValueSet.Expansion": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Expansion",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An identifier that uniquely identifies this expansion of the valueset. Systems may re-use the same identifier as long as the expansion and the definition remain the same, but are not required to do so.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*The time at which the expansion was produced by the expanding system.
     */  "name": "timestamp", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The total number of concepts in the expansion. If the number of concept nodes in this resource is less than the stated number, then the server can return more using the offset parameter.
     */  "name": "total", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*If paging is being used, the offset at which this resource starts.  I.e. this resource is a partial view into the expansion. If paging is not being used, this element SHALL not be present.
     */  "name": "offset", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*A parameter that controlled the expansion process. These parameters may be used by users of expanded value sets to check whether the expansion is suitable for a particular purpose, or to pick the correct expansion.
     */  "name": "parameter", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Parameter",
      "isPrimitive": false }, 
    { 
    /*The codes that are contained in the value set expansion.
     */  "name": "contains", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Contains",
      "isPrimitive": false }, 
  ]
},
"ValueSet.Parameter": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Parameter",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The name of the parameter.
     */  "name": "name", 
    
      "min": "1", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    [ /* Choice */ 
    /*The value of the parameter.
     */
        {   "name": "valueString", 
        
          "min": "1", 
          "max": "1", 
          "type": "string",
          "isPrimitive": true }, 
        {   "name": "valueBoolean", 
        
          "min": "1", 
          "max": "1", 
          "type": "boolean",
          "isPrimitive": true }, 
        {   "name": "valueInteger", 
        
          "min": "1", 
          "max": "1", 
          "type": "integer",
          "isPrimitive": true }, 
        {   "name": "valueDecimal", 
        
          "min": "1", 
          "max": "1", 
          "type": "decimal",
          "isPrimitive": true }, 
        {   "name": "valueUri", 
        
          "min": "1", 
          "max": "1", 
          "type": "uri",
          "isPrimitive": true }, 
        {   "name": "valueCode", 
        
          "min": "1", 
          "max": "1", 
          "type": "code",
          "isPrimitive": true }, 
    ], 
  ]
},
"ValueSet.Contains": {
    /*A ValueSet resource specifies a set of codes drawn from one or more code systems, intended for use in a particular context. Value sets link between [[[CodeSystem]]] definitions and their use in [coded elements](terminologies.html).
     */
  "name": "ValueSet.Contains",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*An absolute URI which is the code system in which the code for this item in the expansion is defined.
     */  "name": "system", 
    
      "min": "0", 
      "max": "1", 
      "type": "uri",
      "isPrimitive": true }, 
    { 
    /*If true, this entry is included in the expansion for navigational purposes, and the user cannot select the code directly as a proper value.
     */  "name": "abstract", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*If the concept is inactive in the code system that defines it. Inactive codes are those that are no longer to be used, but are maintained by the code system for understanding legacy data. It might not be known or specified whether an concept is inactive (and it may depend on the context of use).
     */  "name": "inactive", 
    
      "min": "0", 
      "max": "1", 
      "type": "boolean",
      "isPrimitive": true }, 
    { 
    /*The version of this code system that defined this code and/or display. This should only be used with code systems that do not enforce concept permanence.
     */  "name": "version", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The code for this item in the expansion hierarchy. If this code is missing the entry in the hierarchy is a place holder (abstract) and does not represent a valid code in the value set.
     */  "name": "code", 
    
      "min": "0", 
      "max": "1", 
      "type": "code",
      "isPrimitive": true }, 
    { 
    /*The recommended display for this item in the expansion.
     */  "name": "display", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Additional representations for this item - other languages, aliases, specialized purposes, used for particular purposes, etc. These are relevant when the conditions of the expansion do not fix to a single correct representation.
     */  "name": "designation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Designation",
      "isPrimitive": false }, 
    { 
    /*Other codes and entries contained under this entry in the hierarchy.
     */  "name": "contains", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "ValueSet.Contains",
      "isPrimitive": false }, 
  ]
},
"VerificationResult": {
    /*Describes validation requirements, source(s), status and dates for one or more elements.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "VerificationResult",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*A resource that was validated.
     */  "name": "target", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The fhirpath location(s) within the resource that was validated.
     */  "name": "targetLocation", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*The frequency with which the target must be validated (none; initial; periodic).
     */  "name": "need", 
    
      "min": "1", 
      "max": "1", 
      "type": "need",
      "isPrimitive": true }, 
    { 
    /*The validation status of the target (attested; validated; in process; requires revalidation; validation failed; revalidation failed).
     */  "name": "status", 
    
      "min": "1", 
      "max": "1", 
      "type": "status",
      "isPrimitive": true }, 
    { 
    /*When the validation status was updated.
     */  "name": "statusDate", 
    
      "min": "1", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*What the target is validated against (nothing; primary source; multiple sources).
     */  "name": "validationType", 
    
      "min": "1", 
      "max": "1", 
      "type": "validationType",
      "isPrimitive": true }, 
    { 
    /*The primary process by which the target is validated (edit check; value set; primary source; multiple sources; standalone; in context).
     */  "name": "validationProcess", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Frequency of revalidation.
     */  "name": "frequency", 
    
      "min": "0", 
      "max": "1", 
      "type": "Timing",
      "isPrimitive": false }, 
    { 
    /*The date/time validation was last completed (incl. failed validations).
     */  "name": "lastPerformed", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The date when target is next validated, if appropriate.
     */  "name": "nextScheduled", 
    
      "min": "0", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*The result if validation fails (fatal; warning; record only; none).
     */  "name": "failureAction", 
    
      "min": "1", 
      "max": "1", 
      "type": "failureAction",
      "isPrimitive": true }, 
    { 
    /*Information about the primary source(s) involved in validation.
     */  "name": "primarySource", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "VerificationResult.PrimarySource",
      "isPrimitive": false }, 
    { 
    /*Information about the entity attesting to information.
     */  "name": "attestation", 
    
      "min": "0", 
      "max": "1", 
      "type": "VerificationResult.Attestation",
      "isPrimitive": false }, 
    { 
    /*Information about the entity validating information.
     */  "name": "validator", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "VerificationResult.Validator",
      "isPrimitive": false }, 
  ]
},
"VerificationResult.PrimarySource": {
    /*Describes validation requirements, source(s), status and dates for one or more elements.
     */
  "name": "VerificationResult.PrimarySource",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*URI of the primary source for validation.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Reference to the primary source.
     */  "name": "organization", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Type of primary source (License Board; Primary Education; Continuing Education; Postal Service; Relationship owner; Registration Authority; legal source; issuing source; authoritative source).
     */  "name": "type", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Method for communicating with the primary source (manual; API; Push).
     */  "name": "validationProcess", 
    
      "min": "1", 
      "max": "unbounded", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*Status of the validation of the target against the primary source (successful; failed; unknown).
     */  "name": "validationStatus", 
    
      "min": "0", 
      "max": "1", 
      "type": "validationStatus",
      "isPrimitive": true }, 
    { 
    /*When the target was validated against the primary source.
     */  "name": "validationDate", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*Ability of the primary source to push updates/alerts (yes; no; undetermined).
     */  "name": "canPushUpdates", 
    
      "min": "1", 
      "max": "1", 
      "type": "canPushUpdates",
      "isPrimitive": true }, 
    { 
    /*Type of alerts/updates the primary source can send (specific requested changes; any changes; as defined by source).
     */  "name": "pushTypeAvailable", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "pushTypeAvailable",
      "isPrimitive": true }, 
  ]
},
"VerificationResult.Attestation": {
    /*Describes validation requirements, source(s), status and dates for one or more elements.
     */
  "name": "VerificationResult.Attestation",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*The individual attesting to information.
     */  "name": "source", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The organization attesting to information.
     */  "name": "organization", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*Who is providing the attested information (owner; authorized representative; authorized intermediary; non-authorized source).
     */  "name": "method", 
    
      "min": "1", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The date the information was attested to.
     */  "name": "date", 
    
      "min": "1", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
    { 
    /*A digital identity certificate associated with the attestation source.
     */  "name": "sourceIdentityCertificate", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*A digital identity certificate associated with the proxy entity submitting attested information on behalf of the attestation source.
     */  "name": "proxyIdentityCertificate", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
  ]
},
"VerificationResult.Validator": {
    /*Describes validation requirements, source(s), status and dates for one or more elements.
     */
  "name": "VerificationResult.Validator",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*URI of the validator.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "1", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*Reference to the organization validating information.
     */  "name": "organization", 
    
      "min": "1", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A digital identity certificate associated with the validator.
     */  "name": "identityCertificate", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Date on which the validator last validated the information.
     */  "name": "dateValidated", 
    
      "min": "1", 
      "max": "1", 
      "type": "date",
      "isPrimitive": true }, 
  ]
},
"failureAction": {
    /*The result if validation failsIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "failureAction",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "failureAction-list" }, 
  ],
  "elems": [
  ]
},
"pushTypeAvailable": {
    /*Type of alerts/updates the primary source can sendIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "pushTypeAvailable",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "pushTypeAvailable-list" }, 
  ],
  "elems": [
  ]
},
"need": {
    /*The frequency with which the target must be validatedIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "need",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "need-list" }, 
  ],
  "elems": [
  ]
},
"validationType": {
    /*What the target is validated againstIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "validationType",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "validationType-list" }, 
  ],
  "elems": [
  ]
},
"validationStatus": {
    /*Status of the validation of the target against the primary sourceIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "validationStatus",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "validationStatus-list" }, 
  ],
  "elems": [
  ]
},
"status": {
    /*The validation status of the targetIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "status",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "status-list" }, 
  ],
  "elems": [
  ]
},
"canPushUpdates": {
    /*Ability of the primary source to push updates/alertsIf the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "canPushUpdates",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "canPushUpdates-list" }, 
  ],
  "elems": [
  ]
},
"VisionPrescription": {
    /*An authorization for the supply of glasses and/or contact lenses to a patient.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "VisionPrescription",
  "base": "DomainResource", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Business identifier which may be used by other parties to reference or identify the prescription.
     */  "name": "identifier", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Identifier",
      "isPrimitive": false }, 
    { 
    /*The status of the resource instance.
     */  "name": "status", 
    
      "min": "0", 
      "max": "1", 
      "type": "FinancialResourceStatusCodes",
      "isPrimitive": true }, 
    { 
    /*A link to a resource representing the person to whom the vision products will be supplied.
     */  "name": "patient", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*A link to a resource that identifies the particular occurrence of contact between patient and health care provider.
     */  "name": "encounter", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    { 
    /*The date (and perhaps time) when the prescription was written.
     */  "name": "dateWritten", 
    
      "min": "0", 
      "max": "1", 
      "type": "dateTime",
      "isPrimitive": true }, 
    { 
    /*The healthcare professional responsible for authorizing the prescription.
     */  "name": "prescriber", 
    
      "min": "0", 
      "max": "1", 
      "type": "Reference",
      "isPrimitive": false }, 
    [ /* Choice */ 
    /*Can be the reason or the indication for writing the prescription.
     */
        {   "name": "reasonCodeableConcept", 
        
          "min": "1", 
          "max": "1", 
          "type": "CodeableConcept",
          "isPrimitive": false }, 
        {   "name": "reasonReference", 
        
          "min": "1", 
          "max": "1", 
          "type": "Reference",
          "isPrimitive": false }, 
    ], 
    { 
    /*Deals with details of the dispense part of the supply specification.
     */  "name": "dispense", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "VisionPrescription.Dispense",
      "isPrimitive": false }, 
  ]
},
"VisionPrescription.Dispense": {
    /*An authorization for the supply of glasses and/or contact lenses to a patient.
     */
  "name": "VisionPrescription.Dispense",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Identifies the type of vision correction product which is required for the patient.
     */  "name": "product", 
    
      "min": "0", 
      "max": "1", 
      "type": "CodeableConcept",
      "isPrimitive": false }, 
    { 
    /*The eye for which the lens applies.
     */  "name": "eye", 
    
      "min": "0", 
      "max": "1", 
      "type": "VisionEyes",
      "isPrimitive": true }, 
    { 
    /*Lens power measured in diopters (0.25 units).
     */  "name": "sphere", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Power adjustment for astigmatism measured in diopters (0.25 units).
     */  "name": "cylinder", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Adjustment for astigmatism measured in integer degrees.
     */  "name": "axis", 
    
      "min": "0", 
      "max": "1", 
      "type": "integer",
      "isPrimitive": true }, 
    { 
    /*Allows for adjustment on two axis.
     */  "name": "prism", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "VisionPrescription.Prism",
      "isPrimitive": false }, 
    { 
    /*Power adjustment for multifocal lenses measured in diopters (0.25 units).
     */  "name": "add", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Contact lens power measured in diopters (0.25 units).
     */  "name": "power", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Back curvature measured in millimeters.
     */  "name": "backCurve", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*Contact lens diameter measured in millimeters.
     */  "name": "diameter", 
    
      "min": "0", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The recommended maximum wear period for the lens.
     */  "name": "duration", 
    
      "min": "0", 
      "max": "1", 
      "type": "Quantity",
      "isPrimitive": false }, 
    { 
    /*Special color or pattern.
     */  "name": "color", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Brand recommendations or restrictions.
     */  "name": "brand", 
    
      "min": "0", 
      "max": "1", 
      "type": "string",
      "isPrimitive": true }, 
    { 
    /*Notes for special requirements such as coatings and lens materials.
     */  "name": "note", 
    
      "min": "0", 
      "max": "unbounded", 
      "type": "Annotation",
      "isPrimitive": false }, 
  ]
},
"VisionPrescription.Prism": {
    /*An authorization for the supply of glasses and/or contact lenses to a patient.
     */
  "name": "VisionPrescription.Prism",
  "base": "BackboneElement", 
  "attrs": [
  ],
  "elems": [
    { 
    /*Amount of prism to compensate for eye alignment in fractional units.
     */  "name": "amount", 
    
      "min": "1", 
      "max": "1", 
      "type": "decimal",
      "isPrimitive": true }, 
    { 
    /*The relative base, or reference lens edge, for the prism.
     */  "name": "base", 
    
      "min": "1", 
      "max": "1", 
      "type": "VisionBase",
      "isPrimitive": true }, 
  ]
},
"VisionBase": {
    /*A coded concept listing the base codes.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "VisionBase",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "VisionBase-list" }, 
  ],
  "elems": [
  ]
},
"VisionEyes": {
    /*A coded concept listing the eye codes.If the element is present, it must have either a @value, an @id, or extensions
     */
  "name": "VisionEyes",
  "base": "Element", 
  "attrs": [
    { 
      "name": "value", 
      "type": "VisionEyes-list" }, 
  ],
  "elems": [
  ]
},
  };
    
    //
/*
 *  Convert a JSON based FHIR object to an XML version of the same 
 */

this.toXML = function (
  obj // The JavaScript object to convert to an XML string
)
{
  if (typeof obj == "string")
    obj = JSON.parse(obj);
    
  this.reset();
  this.out("<?xml version='1.0' encoding='UTF-8'?>\n");
  this.processChildren(obj, 0, null, this.getDef(obj.resourceType), obj.resourceType);
  return this.getResult();
};

/* Escape values for & < ' > */ 
this.escapeAttr = function (
  value  // The value to escape
)
{
  if (typeof value == "string") {
    return value.replace(/&/g,"&amp;").replace(/</g,"&lt;").replace(/>/g,"&gt;").replace(/"/,"&quot;");
  }
  return value;
};

/* Get a definition for a FHIR type or throw an exception if not found */
this.getDef = function (
  name // The type to get the definition for
)
{
  /* Check that it has a valid type
   */

  if (name in this.FHIRdefs)
    return this.FHIRdefs[name];
    
  /* NOTE: This error represents an internal inconsistency in
   * generation of FHIRdefs, not an error in use of this tool.       
   */ 
  throw name + " is not a FHIR type.";
};

/* Do stuff with extensions */
this.processExtra = function (obj, def, name, depth)
{
  /* TBD: Process Extensions */
  var needsSep = false;
  if ("id" in obj)
    this.out(" id=\"" + this.escapeAttr(obj.id) + "\"");
  
  if (needsSep)
    this.out(this.pad(depth) + "</" + name + ">\n");
  else
    this.out("/>\n");
};

this.findElement = function(elemArray, theObj, theExtra)
{
  for (elemIndex in elemArray)
  {
    var elem = elemArray[elemIndex];
    
    /* Find the element if present in properties */
    if (elem.name in theObj || (theExtra != null && elem.name in theExtra))
      return elem;
  }
  return null;
};


/* Process the children of the object */
this.processChildren = function (
  theObj,   // The object whose children are to be processed
  depth,    // The depth to use for pretty printing
  theExtra, // The extra gunge associated with the object 
  def,      // The definition for the element
  name
)
{
  /* Creates a new array of elements that contains the elements
   * of the defined type and its base types in the correct order
   * so as to generate the XML in the right order.   
   */
  var elems = [];
  for (var theDef = def; theDef != null; theDef = "base" in theDef ? this.getDef(theDef.base) : null)
    elems = theDef.elems.concat(elems);

    if (typeof obj != "object") {
	print("child is not an object: ", theObj)
    }

  if ("fhir_comments" in theObj)
    this.out(this.pad(depth-1) + "<!--" + theObj.fhir_comments + "-->\n");
  else if (theExtra != null && "fhir_comments" in theExtra)
    this.out(this.pad(depth-1) + "<!--" + theObj.fhir_comments + "-->\n");
    
  this.out(this.pad(depth++) + "<" + name +">\n");
  
  /* For each element in this object */
  for (var index in elems)
  {
    var elem = elems[index];
    var theChild = null;
    var theChildExtra = null;
    
    if (elem instanceof Array)
    { elem = this.findElement(elem, theObj, theExtra);
      if (elem == null) 
        continue;
    }
    
    if (elem.name in theObj)
    { theChild = theObj[elem.name];
      theChildExtra = "_" + elem.name in theObj ? theObj["_" + elem.name] : null;
    }
    /* Or in the extra bits of stuff stored in _property */
    else if (theExtra != null && elem.name in theExtra)
    { theChild = theExtra[elem.name];
      theChildExtra = "_" + elemName in theExtra ? theExtra["_" + elem.name] : null;
    }
    else if (elem.name == "xhtml:div" && "div" in theObj)
    { theChild = theObj.div;
      theChildExtra = null;
    }
    
    if (theChild == null)
      continue;
    
    /* Turn obj (and extra) into an array if it isn't already
       * This is done to unify the process of handling 
       * forms with cardinality of 1 and > 1
       * e.g., "entry": [], and "entry": "foo"
       */
    if (!(theChild instanceof Array))
    { theChild = [ theChild ];
      theChildExtra = [ theChildExtra ];
    }
    else if (theChildExtra == null)
      theChildExtra = [];
  
    /* Ensure extra stuff is of same length as obj */
    if (theChildExtra.length != theChild.length)
      theChildExtra.length = theChild.length;

    /* output the element name */
    if ("isPrimitive" in elem && elem.isPrimitive)
    { 
      for (var k in theChild)
      {
        if (theChildExtra[k] && "fhir_comments" in theChildExtra[k])
          this.out(this.pad(depth) + "<!--" + theChildExtra[k].fhir_comments + "-->\n");
        this.out(this.pad(depth) + "<" + elem.name);
        if (theObj != null)
        {
          this.out(" value=\"" + this.escapeAttr(theChild[k]) + "\"");
        }
        if (theChildExtra[k] == null)
          this.out("/>\n");
        else 
          this.processExtra(theChildExtra[k], newDef, elem.name);
      }
    }
    else if (elem.name == "xhtml:div")
    { var div = theChild[0];
      var start = div.indexOf(">");
      var end = div.lastIndexOf("<");
      this.out(this.pad(depth) +"<div xmlns=\"http://www.w3.org/1999/xhtml\">" +
        div.substring(start+1,end) + "</div>\n");
    }    
    else
    { /* Convert the element */
      var newDef = this.getDef(elem.type); 
      
      /* Each element of the array is output */
      for(var i in theChild) 
      {
        if (newDef.name == "ResourceContainer")
        { var resourceName = theChild[i].resourceType;
          var resourceDef = this.getDef(resourceName);
          this.out(this.pad(depth) + "<"+elem.name+">\n")
          this.processChildren(theChild[i], depth+1, theChildExtra[i], resourceDef, resourceName);
          this.out(this.pad(depth) + "</"+elem.name+">\n")
        }
        else
          this.processChildren(theChild[i], depth, theChildExtra[i], newDef, elem.name);
      }
    }
  }
  this.out(this.pad(--depth) + "</" + name +">\n");
};

// Generate white space of the specified length
this.pad = function (length)
{
  if (length < 0) length = 0;
  return "                                                                                      ".substring(0,length*indent);
};

this.toJSON = function(obj) {

	this.resetJSONState();
  if (typeof obj == "string")
  {
    parser=new DOMParser();
    obj = parser.parseFromString(obj, "text/xml").documentElement;
  }
  else if (!(obj instanceof Node))
    throw "Argument is neither an XML node nor a string";
  
  this.reset();
  this.resetJSONState();
  var def = this.getDef(obj.localName);
  this.startObject();
  this.processXML(obj, "", 0, def, false);
  this.endObject();
  return this.getResult();
};

this.STATE_VALUE = "value";
this.STATE_PROP = "property";

this.resetJSONState = function()
{
  this.stack = [];
  this.state = {
  		"type": "Array",
  		"waiting": this.STATE_VALUE, // Waiting for a property
  		"needsSep": false,
  		"needsIndent": false
  };
  this.depth = 0;
};

this.doStart = function(name, type, lead, newWaiting)
{
	
	if (name != null) 
	 	this.setProperty(name);
	else if (this.state.needsSep)
		this.out(",");

	// If we are waiting for a property, this is a problem
	if (this.state.waiting == this.STATE_PROP)
		throw "Cannot start " + type + " while waiting for a property.";
	
	if (this.state.needsIndent)
		this.out("\n" + this.pad(this.depth));
	else
		this.state.needsIndent = true;
	
	this.out(lead);
	this.state.needsSep = true;
	this.stack.push(this.state);
	this.state = { "type": type, "waiting": newWaiting, "needsSep": false, "needsIndent": true};
	this.depth++;
}

// JSON Output Functions
this.startArray = function(name)
{
	this.doStart(name, "Array", "[ ", this.STATE_VALUE);
};

this.startObject = function(name)
{
	this.doStart(name, "Object", "{ ", this.STATE_PROP);
};

this.doEnd = function(type, trail)
{
	// if the top of the stack doesn't indicate we have an open array, this is a problem
	if (this.state.type != type)
		throw type + " not started";

	this.out("\n" + this.pad(--this.depth) + trail);
  this.state = this.stack.pop();	
  this.state.waiting = (this.state.type == "Object") ? this.STATE_PROP : this.STATE_VALUE;
	this.state.needsSep = true;
  this.state.needsIndent = true;
};

this.endArray = function() {
	this.doEnd("Array","]");
};

this.endObject = function() {
	this.doEnd("Object","}");
};

this.setProperty = function(name, value)
{
	// If we are waiting for a value, then this is an error
	if (this.state.waiting == this.STATE_VALUE)
		throw "Cannot set property inside a property or array";
	
	if (this.state.needsSep)
	  this.out(",");

	this.out("\n" + this.pad(this.depth) + "\"" + name + "\": ");
	this.state.waiting = this.STATE_VALUE;
	this.state.needsIndent = false;
	this.state.needsSep = false;
	
	if (value != undefined)
		this.setValue(value);
};

this.setValue = function(value)
{
	// if we are waiting for a property, this is a problem
	if (this.state.waiting == this.STATE_PROP)
		throw "A property value is expected";
	
	if (this.state.needsSep)
		this.out(",");
	if (this.state.needsIndent)
		this.out("\n" + this.pad(this.depth));
	
	this.out(JSON.stringify(value));
  this.state.waiting = (this.state.type == "Object") ? this.STATE_PROP : this.STATE_VALUE;
	this.state.needsSep = true;
  this.state.needsIndent = true;
};

this.processXML = function(elem, context, depth, def, isMultiple)
{
  if (def == null)
    throw elem.localName + " is not defined in FHIR.";
  
  var isResource = ("base" in def && (def.base == "DomainResource" || def.base == "Resource"));
  var elemName = elem.localName;
  
  if (!isResource)
  	this.setProperty(elem.localName);
  
  if (isMultiple)
    this.startArray();

  do
  {
    var comments = this.getPrecedingComments(elem);

    if (this.isEmptyElem(elem))
    { if (isMultiple)
        this.out(this.pad(depth));
      this.setValue(elem.getAttribute("value"));
      
      if (comments != null)
      { this.startObject("_" + elemName);
        this.startArray("fhir_comments");
        
        for (var k in comments)
        	this.setValue(comments[k]);
        
        this.endArray();
        // TBD: Handle id here, and exensions?
        this.endObject();
      }
    }
    else
    { if (!isResource)
        this.startObject();
      
      if (comments != null)
      { 
      	this.startArray("fhir_comments");
      	
        for (var k in comments)
          this.setValue(comments[k]);
        
        this.endArray();
      }

      var url = elem.getAttribute("url")
      if (url != null)
    		this.setProperty("url", url);
        
      if (isResource)
        this.setProperty("resourceType", elemName);
        
      var elem2 = elem.firstChild; 
      while (elem2 != null)
      { 
        
        if (elem2.nodeType == Node.ELEMENT_NODE)
        { if (elem2.localName == "div")
          { var serializer = new XMLSerializer();
            var div = serializer.serializeToString(elem2);
            this.setProperty("div",div);
            elem2 = this.getNextElement(elem2);
          }
          else
          { var elemDef = this.getXMLDef(def, elem2.localName);
            elem2 = this.processXML(elem2, context + "." + elem2.localName, depth + 1, this.getDef(elemDef.type), elemDef.max != "1");
          }
        }
        else
          elem2 = this.getNextElement(elem2);        
      }
      
      if (!isResource)
        this.endObject();
    }
    elem = this.getNextElement(elem);
  } while (isMultiple && elem != null && elemName == elem.localName);
  
  if (isMultiple)
    this.endArray();
    
  return elem;
};

this.getXMLDef = function(def, name)
{
  var xmlDef = null;
  if ("base" in def)
  {
    xmlDef = this.getXMLDef(this.getDef(def.base), name);
    /* If we find it in the base, return it */
    if (xmlDef != null)
      return xmlDef;
  }
  /* Either there is no base definition, or we didn't find 
   * this element name in the base definition, so look for
   * it in the definition.
   */
  for (var index in def.elems)
  {  var elems = def.elems[index];
     if (!(elems instanceof Array))
       elems = [ elems ];
     for (var index2 in elems)
     {  elem = elems[index2];
        if (elem.name == name)
          return elem;
     }
  }
  /* We didn't find it, just return null */
  return null;
}

this.getNextElement = function(elem) {
  while (elem != null)
  { var next = elem.nextSibling; 
    if (next == null || next.nodeType == elem.ELEMENT_NODE)
      return next;
    elem = next;
  }
  return null;
};

this.getPrecedingComments = function(elem) {
  var out = [];
  while (elem != null)
  {
    var prev = elem.previousSibling;
    if (prev == null)
      break;
    if (prev.nodeType == Node.COMMENT_NODE)
      out.push(prev.data);
    else if (prev.nodeType == Node.ELEMENT_NODE)
      break;
    elem = prev;
  }
  return out.length == 0 ? null : out.reverse();
}

this.isEmptyElem = function(elem) {
  return elem.firstChild == null ||                   // Has no children OR 
    (elem.firstChild.nodeType != elem.ELEMENT_NODE && // first is not an element AND
     this.getNextElement(elem.firstChild) == null);   // neither are any of its sibs
};

this.isSingleton = function(elem, def)
{
  var s = elem.localName.substring(1,1);
  /* Resources are always singletons */
  if (s.toLowerCase() != s)
    return true;
  if (this.getPreviousElementName(elem) == elem.localName)
    return false;
  if (this.getNextElementName(elem) == elem.localName)
    return false;
  return true;  // Should actually be looking at types   
};
//

    
}
